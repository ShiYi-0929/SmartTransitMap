{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weekly-passenger-flow\"\n};\nconst _hoisted_2 = {\n  class: \"control-panel\"\n};\nconst _hoisted_3 = {\n  class: \"time-selector\"\n};\nconst _hoisted_4 = [\"min\", \"max\"];\nconst _hoisted_5 = [\"min\", \"max\"];\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_11 = {\n  key: 2,\n  class: \"analysis-results\"\n};\nconst _hoisted_12 = {\n  class: \"overview-cards\"\n};\nconst _hoisted_13 = {\n  class: \"stat-card\"\n};\nconst _hoisted_14 = {\n  class: \"card-content\"\n};\nconst _hoisted_15 = {\n  class: \"stat-value\"\n};\nconst _hoisted_16 = {\n  class: \"stat-card\"\n};\nconst _hoisted_17 = {\n  class: \"card-content\"\n};\nconst _hoisted_18 = {\n  class: \"stat-value\"\n};\nconst _hoisted_19 = {\n  class: \"stat-card\"\n};\nconst _hoisted_20 = {\n  class: \"card-content\"\n};\nconst _hoisted_21 = {\n  class: \"stat-value\"\n};\nconst _hoisted_22 = {\n  class: \"stat-card\"\n};\nconst _hoisted_23 = {\n  class: \"card-content\"\n};\nconst _hoisted_24 = {\n  class: \"stat-value\"\n};\nconst _hoisted_25 = {\n  class: \"comparison-section\"\n};\nconst _hoisted_26 = {\n  class: \"comparison-container\"\n};\nconst _hoisted_27 = {\n  class: \"comparison-chart\"\n};\nconst _hoisted_28 = {\n  class: \"bar-chart\"\n};\nconst _hoisted_29 = {\n  class: \"bar weekday-bar\"\n};\nconst _hoisted_30 = {\n  class: \"bar-value\"\n};\nconst _hoisted_31 = {\n  class: \"bar weekend-bar\"\n};\nconst _hoisted_32 = {\n  class: \"bar-value\"\n};\nconst _hoisted_33 = {\n  class: \"comparison-stats\"\n};\nconst _hoisted_34 = {\n  class: \"stat-item\"\n};\nconst _hoisted_35 = {\n  class: \"stat-item\"\n};\nconst _hoisted_36 = {\n  class: \"stat-value\"\n};\nconst _hoisted_37 = {\n  class: \"weekly-pattern-section\"\n};\nconst _hoisted_38 = {\n  class: \"weekly-chart-container\"\n};\nconst _hoisted_39 = {\n  class: \"weekly-chart\"\n};\nconst _hoisted_40 = {\n  width: \"100%\",\n  height: \"300\",\n  viewBox: \"0 0 800 300\"\n};\nconst _hoisted_41 = {\n  transform: \"translate(50, 20)\"\n};\nconst _hoisted_42 = [\"x\", \"y\", \"height\", \"fill\"];\nconst _hoisted_43 = [\"x\"];\nconst _hoisted_44 = [\"x\", \"y\"];\nconst _hoisted_45 = {\n  class: \"weekly-stats\"\n};\nconst _hoisted_46 = {\n  class: \"peak-day\"\n};\nconst _hoisted_47 = {\n  class: \"day-name\"\n};\nconst _hoisted_48 = {\n  class: \"day-value\"\n};\nconst _hoisted_49 = {\n  class: \"lowest-day\"\n};\nconst _hoisted_50 = {\n  class: \"day-name\"\n};\nconst _hoisted_51 = {\n  class: \"day-value\"\n};\nconst _hoisted_52 = {\n  class: \"hourly-pattern-section\"\n};\nconst _hoisted_53 = {\n  class: \"hourly-chart-tabs\"\n};\nconst _hoisted_54 = {\n  class: \"hourly-chart\"\n};\nconst _hoisted_55 = {\n  width: \"100%\",\n  height: \"250\",\n  viewBox: \"0 0 900 250\"\n};\nconst _hoisted_56 = {\n  transform: \"translate(40, 20)\"\n};\nconst _hoisted_57 = {\n  class: \"x-axis-labels\"\n};\nconst _hoisted_58 = [\"x\"];\nconst _hoisted_59 = [\"points\", \"stroke\"];\nconst _hoisted_60 = [\"cx\", \"cy\", \"fill\"];\nconst _hoisted_61 = {\n  class: \"peak-info\"\n};\nconst _hoisted_62 = {\n  class: \"peak-hour-info\"\n};\nconst _hoisted_63 = {\n  class: \"peak-hour-info\"\n};\nconst _hoisted_64 = {\n  key: 0,\n  class: \"trend-section\"\n};\nconst _hoisted_65 = {\n  class: \"trend-container\"\n};\nconst _hoisted_66 = {\n  class: \"trend-chart\"\n};\nconst _hoisted_67 = {\n  width: \"100%\",\n  height: \"200\",\n  viewBox: \"0 0 600 200\"\n};\nconst _hoisted_68 = {\n  transform: \"translate(40, 20)\"\n};\nconst _hoisted_69 = [\"points\"];\nconst _hoisted_70 = [\"cx\", \"cy\"];\nconst _hoisted_71 = {\n  class: \"week-labels\"\n};\nconst _hoisted_72 = [\"x\"];\nconst _hoisted_73 = {\n  class: \"trend-stats\"\n};\nconst _hoisted_74 = {\n  class: \"trend-direction\"\n};\nconst _hoisted_75 = {\n  class: \"trend-slope\"\n};\nconst _hoisted_76 = {\n  class: \"data-table-section\"\n};\nconst _hoisted_77 = {\n  class: \"table-container\"\n};\nconst _hoisted_78 = {\n  class: \"data-table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 头部控制面板 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"分析时间范围：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.timeRange.start = $event),\n    min: $data.minDate,\n    max: $data.maxDate,\n    class: \"time-input\"\n  }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, $data.timeRange.start]]), _cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n    class: \"to\"\n  }, \"至\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.timeRange.end = $event),\n    min: $data.minDate,\n    max: $data.maxDate,\n    class: \"time-input\"\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, $data.timeRange.end]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.analyzeFlow && $options.analyzeFlow(...args)),\n    disabled: $data.loading,\n    class: \"analyze-btn\"\n  }, [$data.loading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"分析中...\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"开始分析\"))], 8 /* PROPS */, _hoisted_6)])]), _createCommentVNode(\" 加载状态 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* CACHED */), _createElementVNode(\"p\", null, \"正在分析周客流量数据...\", -1 /* CACHED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 错误信息 \"), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, _toDisplayString($data.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.retryAnalysis && $options.retryAnalysis(...args)),\n    class: \"retry-btn\"\n  }, \"重试\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分析结果 \"), $data.analysisData && !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createCommentVNode(\" 概览统计卡片 \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"card-icon vehicles\"\n  }, \"📊\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_14, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"总车辆数\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_15, _toDisplayString($options.formatNumber($data.analysisData.statistics?.total_unique_vehicles || 0)), 1 /* TEXT */), _cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"独立车辆\", -1 /* CACHED */))])]), _createElementVNode(\"div\", _hoisted_16, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"card-icon days\"\n  }, \"📅\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_17, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"分析天数\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_18, _toDisplayString($data.analysisData.statistics?.analysis_days || 0), 1 /* TEXT */), _cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"天\", -1 /* CACHED */))])]), _createElementVNode(\"div\", _hoisted_19, [_cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n    class: \"card-icon average\"\n  }, \"📈\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_20, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"日均客流\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_21, _toDisplayString($options.formatNumber($data.analysisData.statistics?.avg_daily_vehicles || 0)), 1 /* TEXT */), _cache[16] || (_cache[16] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"车辆/天\", -1 /* CACHED */))])]), _createElementVNode(\"div\", _hoisted_22, [_cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"card-icon peak\"\n  }, \"🔥\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_23, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"峰值流量\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_24, _toDisplayString($options.formatNumber($data.analysisData.statistics?.max_daily_vehicles || 0)), 1 /* TEXT */), _cache[19] || (_cache[19] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"车辆/天\", -1 /* CACHED */))])])]), _createCommentVNode(\" 工作日vs周末对比 \"), _createElementVNode(\"div\", _hoisted_25, [_cache[25] || (_cache[25] = _createElementVNode(\"h2\", null, \"工作日 vs 周末对比\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", {\n    class: \"bar-fill\",\n    style: _normalizeStyle({\n      height: $options.getBarHeight($data.analysisData.weekday_comparison?.weekday_avg || 0, $options.maxComparison)\n    })\n  }, null, 4 /* STYLE */), _cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"bar-label\"\n  }, \"工作日\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_30, _toDisplayString($options.formatNumber($data.analysisData.weekday_comparison?.weekday_avg || 0)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", {\n    class: \"bar-fill\",\n    style: _normalizeStyle({\n      height: $options.getBarHeight($data.analysisData.weekday_comparison?.weekend_avg || 0, $options.maxComparison)\n    })\n  }, null, 4 /* STYLE */), _cache[22] || (_cache[22] = _createElementVNode(\"div\", {\n    class: \"bar-label\"\n  }, \"周末\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_32, _toDisplayString($options.formatNumber($data.analysisData.weekday_comparison?.weekend_avg || 0)), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", {\n    class: \"stat-name\"\n  }, \"差异百分比：\", -1 /* CACHED */)), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"stat-value\", $options.getDifferenceClass($data.analysisData.weekday_comparison?.difference_pct)])\n  }, _toDisplayString($options.formatPercent($data.analysisData.weekday_comparison?.difference_pct || 0)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_35, [_cache[24] || (_cache[24] = _createElementVNode(\"span\", {\n    class: \"stat-name\"\n  }, \"流量模式：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_36, _toDisplayString($options.getPatternLabel($data.analysisData.weekday_comparison?.pattern)), 1 /* TEXT */)])])])]), _createCommentVNode(\" 一周流量模式 \"), _createElementVNode(\"div\", _hoisted_37, [_cache[30] || (_cache[30] = _createElementVNode(\"h2\", null, \"一周流量模式\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_40, [_createCommentVNode(\" 背景网格 \"), _cache[26] || (_cache[26] = _createElementVNode(\"defs\", null, [_createElementVNode(\"pattern\", {\n    id: \"grid\",\n    width: \"80\",\n    height: \"30\",\n    patternUnits: \"userSpaceOnUse\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M 80 0 L 0 0 0 30\",\n    fill: \"none\",\n    stroke: \"#e0e0e0\",\n    \"stroke-width\": \"1\"\n  })])], -1 /* CACHED */)), _cache[27] || (_cache[27] = _createElementVNode(\"rect\", {\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"url(#grid)\"\n  }, null, -1 /* CACHED */)), _createCommentVNode(\" 周流量柱状图 \"), _createElementVNode(\"g\", _hoisted_41, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.weeklyPatternData, (day, index) => {\n    return _openBlock(), _createElementBlock(\"g\", {\n      key: index\n    }, [_createElementVNode(\"rect\", {\n      x: index * 100,\n      y: 250 - $options.getWeeklyBarHeight(day.COMMADDR),\n      width: \"80\",\n      height: $options.getWeeklyBarHeight(day.COMMADDR),\n      fill: $options.getWeeklyBarColor(day.weekday),\n      class: \"weekly-bar\"\n    }, null, 8 /* PROPS */, _hoisted_42), _createElementVNode(\"text\", {\n      x: index * 100 + 40,\n      y: \"275\",\n      \"text-anchor\": \"middle\",\n      \"font-size\": \"12\",\n      fill: \"#666\"\n    }, _toDisplayString(day.weekday_name), 9 /* TEXT, PROPS */, _hoisted_43), _createElementVNode(\"text\", {\n      x: index * 100 + 40,\n      y: 245 - $options.getWeeklyBarHeight(day.COMMADDR),\n      \"text-anchor\": \"middle\",\n      \"font-size\": \"11\",\n      fill: \"#333\"\n    }, _toDisplayString($options.formatNumber(day.COMMADDR)), 9 /* TEXT, PROPS */, _hoisted_44)]);\n  }), 128 /* KEYED_FRAGMENT */))])]))]), _createCommentVNode(\" 周模式统计 \"), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, [_cache[28] || (_cache[28] = _createElementVNode(\"h4\", null, \"客流最高日\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_47, _toDisplayString($data.analysisData.weekly_patterns?.peak_day?.day || 'N/A'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_48, _toDisplayString($options.formatNumber($data.analysisData.weekly_patterns?.peak_day?.vehicles || 0)) + \" 车辆\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_49, [_cache[29] || (_cache[29] = _createElementVNode(\"h4\", null, \"客流最低日\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_50, _toDisplayString($data.analysisData.weekly_patterns?.lowest_day?.day || 'N/A'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_51, _toDisplayString($options.formatNumber($data.analysisData.weekly_patterns?.lowest_day?.vehicles || 0)) + \" 车辆\", 1 /* TEXT */)])])])]), _createCommentVNode(\" 小时流量模式 \"), _createElementVNode(\"div\", _hoisted_52, [_cache[35] || (_cache[35] = _createElementVNode(\"h2\", null, \"24小时流量模式\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $data.activeTab = 'weekday'),\n    class: _normalizeClass([{\n      active: $data.activeTab === 'weekday'\n    }, \"tab-btn\"])\n  }, \" 工作日模式 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $data.activeTab = 'weekend'),\n    class: _normalizeClass([{\n      active: $data.activeTab === 'weekend'\n    }, \"tab-btn\"])\n  }, \" 周末模式 \", 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_54, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_55, [_createCommentVNode(\" 坐标轴 \"), _createElementVNode(\"g\", _hoisted_56, [_createCommentVNode(\" Y轴 \"), _cache[31] || (_cache[31] = _createElementVNode(\"line\", {\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"180\",\n    stroke: \"#ccc\",\n    \"stroke-width\": \"2\"\n  }, null, -1 /* CACHED */)), _createCommentVNode(\" X轴 \"), _cache[32] || (_cache[32] = _createElementVNode(\"line\", {\n    x1: \"0\",\n    y1: \"180\",\n    x2: \"840\",\n    y2: \"180\",\n    stroke: \"#ccc\",\n    \"stroke-width\": \"2\"\n  }, null, -1 /* CACHED */)), _createCommentVNode(\" 小时标签 \"), _createElementVNode(\"g\", _hoisted_57, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24], hour => {\n    return _createElementVNode(\"text\", {\n      key: hour,\n      x: hour * 35,\n      y: \"200\",\n      \"text-anchor\": \"middle\",\n      \"font-size\": \"12\",\n      fill: \"#666\"\n    }, _toDisplayString(hour) + \":00 \", 9 /* TEXT, PROPS */, _hoisted_58);\n  }), 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 流量曲线 \"), _createElementVNode(\"polyline\", {\n    points: $options.getHourlyPolylinePoints($data.activeTab),\n    fill: \"none\",\n    stroke: $data.activeTab === 'weekday' ? '#3b82f6' : '#ef4444',\n    \"stroke-width\": \"3\"\n  }, null, 8 /* PROPS */, _hoisted_59), _createCommentVNode(\" 数据点 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getHourlyPoints($data.activeTab), (point, index) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: index,\n      cx: point.x,\n      cy: point.y,\n      r: \"4\",\n      fill: $data.activeTab === 'weekday' ? '#3b82f6' : '#ef4444',\n      class: \"data-point\"\n    }, null, 8 /* PROPS */, _hoisted_60);\n  }), 128 /* KEYED_FRAGMENT */))])]))]), _createCommentVNode(\" 高峰时段信息 \"), _createElementVNode(\"div\", _hoisted_61, [_createElementVNode(\"div\", _hoisted_62, [_cache[33] || (_cache[33] = _createElementVNode(\"h4\", null, \"工作日高峰时段\", -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString($data.analysisData.hourly_patterns?.peak_hours?.weekday || 0) + \":00\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_63, [_cache[34] || (_cache[34] = _createElementVNode(\"h4\", null, \"周末高峰时段\", -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString($data.analysisData.hourly_patterns?.peak_hours?.weekend || 0) + \":00\", 1 /* TEXT */)])])]), _createCommentVNode(\" 趋势分析 \"), $data.analysisData.flow_trends?.weekly_summary ? (_openBlock(), _createElementBlock(\"div\", _hoisted_64, [_cache[38] || (_cache[38] = _createElementVNode(\"h2\", null, \"客流量趋势分析\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_65, [_createElementVNode(\"div\", _hoisted_66, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_67, [_createElementVNode(\"g\", _hoisted_68, [_createCommentVNode(\" 趋势线 \"), _createElementVNode(\"polyline\", {\n    points: $options.getTrendPolylinePoints(),\n    fill: \"none\",\n    stroke: \"#10b981\",\n    \"stroke-width\": \"3\"\n  }, null, 8 /* PROPS */, _hoisted_69), _createCommentVNode(\" 数据点 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getTrendPoints(), (point, index) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: index,\n      cx: point.x,\n      cy: point.y,\n      r: \"5\",\n      fill: \"#10b981\"\n    }, null, 8 /* PROPS */, _hoisted_70);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 周标签 \"), _createElementVNode(\"g\", _hoisted_71, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.analysisData.flow_trends.weekly_summary, (week, index) => {\n    return _openBlock(), _createElementBlock(\"text\", {\n      key: index,\n      x: index * 100 + 50,\n      y: \"195\",\n      \"text-anchor\": \"middle\",\n      \"font-size\": \"12\",\n      fill: \"#666\"\n    }, \" 第\" + _toDisplayString(week.week) + \"周 \", 9 /* TEXT, PROPS */, _hoisted_72);\n  }), 128 /* KEYED_FRAGMENT */))])])]))]), _createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"div\", _hoisted_74, [_cache[36] || (_cache[36] = _createElementVNode(\"h4\", null, \"趋势方向\", -1 /* CACHED */)), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"trend-value\", $options.getTrendClass()])\n  }, _toDisplayString($options.getTrendLabel()), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_75, [_cache[37] || (_cache[37] = _createElementVNode(\"h4\", null, \"变化幅度\", -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString(Math.abs($data.analysisData.flow_trends?.trend_analysis?.slope || 0).toFixed(2)) + \"/周\", 1 /* TEXT */)])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 详细数据表格 \"), _createElementVNode(\"div\", _hoisted_76, [_cache[40] || (_cache[40] = _createElementVNode(\"h2\", null, \"详细数据表格\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_77, [_createElementVNode(\"table\", _hoisted_78, [_cache[39] || (_cache[39] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"日期\"), _createElementVNode(\"th\", null, \"星期\"), _createElementVNode(\"th\", null, \"车辆数\"), _createElementVNode(\"th\", null, \"轨迹点数\"), _createElementVNode(\"th\", null, \"类型\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.dailyFlowData, day => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: day.date\n    }, [_createElementVNode(\"td\", null, _toDisplayString(day.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(day.weekday_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(day.vehicles)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(day.total_points)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'weekend-tag': day.is_weekend,\n        'weekday-tag': !day.is_weekend\n      })\n    }, _toDisplayString(day.is_weekend ? '周末' : '工作日'), 3 /* TEXT, CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","width","height","viewBox","transform","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","type","$data","timeRange","start","$event","min","minDate","max","maxDate","end","onClick","_cache","args","$options","analyzeFlow","disabled","loading","_hoisted_7","_hoisted_8","_hoisted_9","error","_hoisted_10","_toDisplayString","retryAnalysis","analysisData","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","formatNumber","statistics","total_unique_vehicles","_hoisted_16","_hoisted_17","_hoisted_18","analysis_days","_hoisted_19","_hoisted_20","_hoisted_21","avg_daily_vehicles","_hoisted_22","_hoisted_23","_hoisted_24","max_daily_vehicles","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","style","_normalizeStyle","getBarHeight","weekday_comparison","weekday_avg","maxComparison","_hoisted_30","_hoisted_31","weekend_avg","_hoisted_32","_hoisted_33","_hoisted_34","_normalizeClass","getDifferenceClass","difference_pct","formatPercent","_hoisted_35","_hoisted_36","getPatternLabel","pattern","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","id","patternUnits","d","fill","stroke","_hoisted_41","_Fragment","_renderList","weeklyPatternData","day","index","key","x","y","getWeeklyBarHeight","COMMADDR","getWeeklyBarColor","weekday","weekday_name","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","weekly_patterns","peak_day","_hoisted_48","vehicles","_hoisted_49","_hoisted_50","lowest_day","_hoisted_51","_hoisted_52","_hoisted_53","activeTab","active","_hoisted_54","_hoisted_55","_hoisted_56","x1","y1","x2","y2","_hoisted_57","hour","_hoisted_58","points","getHourlyPolylinePoints","getHourlyPoints","point","cx","cy","r","_hoisted_61","_hoisted_62","hourly_patterns","peak_hours","_hoisted_63","weekend","flow_trends","weekly_summary","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","getTrendPolylinePoints","getTrendPoints","_hoisted_71","week","_hoisted_72","_hoisted_73","_hoisted_74","getTrendClass","getTrendLabel","_hoisted_75","Math","abs","trend_analysis","slope","toFixed","_hoisted_76","_hoisted_77","_hoisted_78","dailyFlowData","date","total_points","is_weekend"],"sources":["E:\\hhh\\frontend\\src\\components\\WeeklyPassengerFlow.vue"],"sourcesContent":["<template>\r\n  <div class=\"weekly-passenger-flow\">\r\n    <!-- 头部控制面板 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"time-selector\">\r\n        <label>分析时间范围：</label>\r\n        <input \r\n          type=\"datetime-local\" \r\n          v-model=\"timeRange.start\"\r\n          :min=\"minDate\"\r\n          :max=\"maxDate\"\r\n          class=\"time-input\"\r\n        />\r\n        <span class=\"to\">至</span>\r\n        <input \r\n          type=\"datetime-local\" \r\n          v-model=\"timeRange.end\"\r\n          :min=\"minDate\"\r\n          :max=\"maxDate\"\r\n          class=\"time-input\"\r\n        />\r\n        <button @click=\"analyzeFlow\" :disabled=\"loading\" class=\"analyze-btn\">\r\n          <span v-if=\"loading\">分析中...</span>\r\n          <span v-else>开始分析</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>正在分析周客流量数据...</p>\r\n    </div>\r\n\r\n    <!-- 错误信息 -->\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <p>{{ error }}</p>\r\n      <button @click=\"retryAnalysis\" class=\"retry-btn\">重试</button>\r\n    </div>\r\n\r\n    <!-- 分析结果 -->\r\n    <div v-if=\"analysisData && !loading\" class=\"analysis-results\">\r\n      \r\n      <!-- 概览统计卡片 -->\r\n      <div class=\"overview-cards\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon vehicles\">📊</div>\r\n          <div class=\"card-content\">\r\n            <h3>总车辆数</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.total_unique_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">独立车辆</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon days\">📅</div>\r\n          <div class=\"card-content\">\r\n            <h3>分析天数</h3>\r\n            <p class=\"stat-value\">{{ analysisData.statistics?.analysis_days || 0 }}</p>\r\n            <span class=\"stat-label\">天</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon average\">📈</div>\r\n          <div class=\"card-content\">\r\n            <h3>日均客流</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.avg_daily_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">车辆/天</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon peak\">🔥</div>\r\n          <div class=\"card-content\">\r\n            <h3>峰值流量</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.max_daily_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">车辆/天</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 工作日vs周末对比 -->\r\n      <div class=\"comparison-section\">\r\n        <h2>工作日 vs 周末对比</h2>\r\n        <div class=\"comparison-container\">\r\n          <div class=\"comparison-chart\">\r\n            <div class=\"bar-chart\">\r\n              <div class=\"bar weekday-bar\">\r\n                <div class=\"bar-fill\" :style=\"{ height: getBarHeight(analysisData.weekday_comparison?.weekday_avg || 0, maxComparison) }\"></div>\r\n                <div class=\"bar-label\">工作日</div>\r\n                <div class=\"bar-value\">{{ formatNumber(analysisData.weekday_comparison?.weekday_avg || 0) }}</div>\r\n              </div>\r\n              <div class=\"bar weekend-bar\">\r\n                <div class=\"bar-fill\" :style=\"{ height: getBarHeight(analysisData.weekday_comparison?.weekend_avg || 0, maxComparison) }\"></div>\r\n                <div class=\"bar-label\">周末</div>\r\n                <div class=\"bar-value\">{{ formatNumber(analysisData.weekday_comparison?.weekend_avg || 0) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"comparison-stats\">\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-name\">差异百分比：</span>\r\n              <span class=\"stat-value\" :class=\"getDifferenceClass(analysisData.weekday_comparison?.difference_pct)\">\r\n                {{ formatPercent(analysisData.weekday_comparison?.difference_pct || 0) }}\r\n              </span>\r\n            </div>\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-name\">流量模式：</span>\r\n              <span class=\"stat-value\">{{ getPatternLabel(analysisData.weekday_comparison?.pattern) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 一周流量模式 -->\r\n      <div class=\"weekly-pattern-section\">\r\n        <h2>一周流量模式</h2>\r\n        <div class=\"weekly-chart-container\">\r\n          <div class=\"weekly-chart\">\r\n            <svg width=\"100%\" height=\"300\" viewBox=\"0 0 800 300\">\r\n              <!-- 背景网格 -->\r\n              <defs>\r\n                <pattern id=\"grid\" width=\"80\" height=\"30\" patternUnits=\"userSpaceOnUse\">\r\n                  <path d=\"M 80 0 L 0 0 0 30\" fill=\"none\" stroke=\"#e0e0e0\" stroke-width=\"1\"/>\r\n                </pattern>\r\n              </defs>\r\n              <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n              \r\n              <!-- 周流量柱状图 -->\r\n              <g transform=\"translate(50, 20)\">\r\n                <g v-for=\"(day, index) in weeklyPatternData\" :key=\"index\">\r\n                  <rect \r\n                    :x=\"index * 100\" \r\n                    :y=\"250 - getWeeklyBarHeight(day.COMMADDR)\" \r\n                    width=\"80\" \r\n                    :height=\"getWeeklyBarHeight(day.COMMADDR)\"\r\n                    :fill=\"getWeeklyBarColor(day.weekday)\"\r\n                    class=\"weekly-bar\"\r\n                  />\r\n                  <text \r\n                    :x=\"index * 100 + 40\" \r\n                    y=\"275\" \r\n                    text-anchor=\"middle\" \r\n                    font-size=\"12\" \r\n                    fill=\"#666\"\r\n                  >\r\n                    {{ day.weekday_name }}\r\n                  </text>\r\n                  <text \r\n                    :x=\"index * 100 + 40\" \r\n                    :y=\"245 - getWeeklyBarHeight(day.COMMADDR)\" \r\n                    text-anchor=\"middle\" \r\n                    font-size=\"11\" \r\n                    fill=\"#333\"\r\n                  >\r\n                    {{ formatNumber(day.COMMADDR) }}\r\n                  </text>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n          \r\n          <!-- 周模式统计 -->\r\n          <div class=\"weekly-stats\">\r\n            <div class=\"peak-day\">\r\n              <h4>客流最高日</h4>\r\n              <p class=\"day-name\">{{ analysisData.weekly_patterns?.peak_day?.day || 'N/A' }}</p>\r\n              <p class=\"day-value\">{{ formatNumber(analysisData.weekly_patterns?.peak_day?.vehicles || 0) }} 车辆</p>\r\n            </div>\r\n            <div class=\"lowest-day\">\r\n              <h4>客流最低日</h4>\r\n              <p class=\"day-name\">{{ analysisData.weekly_patterns?.lowest_day?.day || 'N/A' }}</p>\r\n              <p class=\"day-value\">{{ formatNumber(analysisData.weekly_patterns?.lowest_day?.vehicles || 0) }} 车辆</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 小时流量模式 -->\r\n      <div class=\"hourly-pattern-section\">\r\n        <h2>24小时流量模式</h2>\r\n        <div class=\"hourly-chart-tabs\">\r\n          <button \r\n            @click=\"activeTab = 'weekday'\" \r\n            :class=\"{ active: activeTab === 'weekday' }\"\r\n            class=\"tab-btn\"\r\n          >\r\n            工作日模式\r\n          </button>\r\n          <button \r\n            @click=\"activeTab = 'weekend'\" \r\n            :class=\"{ active: activeTab === 'weekend' }\"\r\n            class=\"tab-btn\"\r\n          >\r\n            周末模式\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"hourly-chart\">\r\n          <svg width=\"100%\" height=\"250\" viewBox=\"0 0 900 250\">\r\n            <!-- 坐标轴 -->\r\n            <g transform=\"translate(40, 20)\">\r\n              <!-- Y轴 -->\r\n              <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"180\" stroke=\"#ccc\" stroke-width=\"2\"/>\r\n              <!-- X轴 -->\r\n              <line x1=\"0\" y1=\"180\" x2=\"840\" y2=\"180\" stroke=\"#ccc\" stroke-width=\"2\"/>\r\n              \r\n              <!-- 小时标签 -->\r\n              <g class=\"x-axis-labels\">\r\n                <text v-for=\"hour in [0, 6, 12, 18, 24]\" :key=\"hour\"\r\n                      :x=\"hour * 35\" y=\"200\" \r\n                      text-anchor=\"middle\" \r\n                      font-size=\"12\" \r\n                      fill=\"#666\">\r\n                  {{ hour }}:00\r\n                </text>\r\n              </g>\r\n              \r\n              <!-- 流量曲线 -->\r\n              <polyline \r\n                :points=\"getHourlyPolylinePoints(activeTab)\"\r\n                fill=\"none\" \r\n                :stroke=\"activeTab === 'weekday' ? '#3b82f6' : '#ef4444'\" \r\n                stroke-width=\"3\"\r\n              />\r\n              \r\n              <!-- 数据点 -->\r\n              <circle\r\n                v-for=\"(point, index) in getHourlyPoints(activeTab)\"\r\n                :key=\"index\"\r\n                :cx=\"point.x\"\r\n                :cy=\"point.y\"\r\n                r=\"4\"\r\n                :fill=\"activeTab === 'weekday' ? '#3b82f6' : '#ef4444'\"\r\n                class=\"data-point\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        \r\n        <!-- 高峰时段信息 -->\r\n        <div class=\"peak-info\">\r\n          <div class=\"peak-hour-info\">\r\n            <h4>工作日高峰时段</h4>\r\n            <p>{{ analysisData.hourly_patterns?.peak_hours?.weekday || 0 }}:00</p>\r\n          </div>\r\n          <div class=\"peak-hour-info\">\r\n            <h4>周末高峰时段</h4>\r\n            <p>{{ analysisData.hourly_patterns?.peak_hours?.weekend || 0 }}:00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 趋势分析 -->\r\n      <div class=\"trend-section\" v-if=\"analysisData.flow_trends?.weekly_summary\">\r\n        <h2>客流量趋势分析</h2>\r\n        <div class=\"trend-container\">\r\n          <div class=\"trend-chart\">\r\n            <svg width=\"100%\" height=\"200\" viewBox=\"0 0 600 200\">\r\n              <g transform=\"translate(40, 20)\">\r\n                <!-- 趋势线 -->\r\n                <polyline \r\n                  :points=\"getTrendPolylinePoints()\"\r\n                  fill=\"none\" \r\n                  stroke=\"#10b981\" \r\n                  stroke-width=\"3\"\r\n                />\r\n                \r\n                <!-- 数据点 -->\r\n                <circle\r\n                  v-for=\"(point, index) in getTrendPoints()\"\r\n                  :key=\"index\"\r\n                  :cx=\"point.x\"\r\n                  :cy=\"point.y\"\r\n                  r=\"5\"\r\n                  fill=\"#10b981\"\r\n                />\r\n                \r\n                <!-- 周标签 -->\r\n                <g class=\"week-labels\">\r\n                  <text v-for=\"(week, index) in analysisData.flow_trends.weekly_summary\" :key=\"index\"\r\n                        :x=\"index * 100 + 50\" y=\"195\" \r\n                        text-anchor=\"middle\" \r\n                        font-size=\"12\" \r\n                        fill=\"#666\">\r\n                    第{{ week.week }}周\r\n                  </text>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n          \r\n          <div class=\"trend-stats\">\r\n            <div class=\"trend-direction\">\r\n              <h4>趋势方向</h4>\r\n              <p class=\"trend-value\" :class=\"getTrendClass()\">\r\n                {{ getTrendLabel() }}\r\n              </p>\r\n            </div>\r\n            <div class=\"trend-slope\">\r\n              <h4>变化幅度</h4>\r\n              <p>{{ Math.abs(analysisData.flow_trends?.trend_analysis?.slope || 0).toFixed(2) }}/周</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 详细数据表格 -->\r\n      <div class=\"data-table-section\">\r\n        <h2>详细数据表格</h2>\r\n        <div class=\"table-container\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>日期</th>\r\n                <th>星期</th>\r\n                <th>车辆数</th>\r\n                <th>轨迹点数</th>\r\n                <th>类型</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"day in dailyFlowData\" :key=\"day.date\">\r\n                <td>{{ day.date }}</td>\r\n                <td>{{ day.weekday_name }}</td>\r\n                <td>{{ formatNumber(day.vehicles) }}</td>\r\n                <td>{{ formatNumber(day.total_points) }}</td>\r\n                <td>\r\n                  <span :class=\"{ 'weekend-tag': day.is_weekend, 'weekday-tag': !day.is_weekend }\">\r\n                    {{ day.is_weekend ? '周末' : '工作日' }}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getWeeklyPassengerFlowAnalysis } from '@/api/traffic'\r\n\r\nexport default {\r\n  name: 'WeeklyPassengerFlow',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      error: null,\r\n      analysisData: null,\r\n      activeTab: 'weekday',\r\n      \r\n      timeRange: {\r\n        start: '2013-09-12T00:00',\r\n        end: '2013-09-18T23:59'\r\n      },\r\n      \r\n      // 时间限制\r\n      minDate: '2013-09-12T00:00',\r\n      maxDate: '2013-09-18T23:59'\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    dailyFlowData() {\r\n      return this.analysisData?.daily_flow?.daily_data || []\r\n    },\r\n    \r\n    weeklyPatternData() {\r\n      return this.analysisData?.weekly_patterns?.weekly_data || []\r\n    },\r\n    \r\n    maxComparison() {\r\n      const weekday = this.analysisData?.weekday_comparison?.weekday_avg || 0\r\n      const weekend = this.analysisData?.weekday_comparison?.weekend_avg || 0\r\n      return Math.max(weekday, weekend)\r\n    },\r\n    \r\n    maxWeeklyFlow() {\r\n      if (!this.weeklyPatternData.length) return 1\r\n      return Math.max(...this.weeklyPatternData.map(d => d.COMMADDR))\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    // 自动执行一次分析\r\n    this.analyzeFlow()\r\n  },\r\n  \r\n  methods: {\r\n    async analyzeFlow() {\r\n      this.loading = true\r\n      this.error = null\r\n      \r\n      try {\r\n        // 转换时间格式\r\n        const startTime = new Date(this.timeRange.start).getTime() / 1000\r\n        const endTime = new Date(this.timeRange.end).getTime() / 1000\r\n        \r\n        // 验证时间范围\r\n        if (endTime <= startTime) {\r\n          throw new Error('结束时间必须晚于开始时间')\r\n        }\r\n        \r\n        if (endTime - startTime < 3 * 24 * 3600) {\r\n          throw new Error('分析周客流量需要至少3天的数据')\r\n        }\r\n        \r\n        // 调用API\r\n        const response = await getWeeklyPassengerFlowAnalysis(startTime, endTime)\r\n        \r\n        if (response.success) {\r\n          this.analysisData = response.data\r\n          this.$message.success('周客流量分析完成')\r\n        } else {\r\n          throw new Error(response.message || '分析失败')\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.error = error.message\r\n        this.$message.error(`分析失败: ${error.message}`)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    retryAnalysis() {\r\n      this.error = null\r\n      this.analyzeFlow()\r\n    },\r\n    \r\n    formatNumber(num) {\r\n      if (!num) return '0'\r\n      return new Intl.NumberFormat('zh-CN').format(Math.round(num))\r\n    },\r\n    \r\n    formatPercent(num) {\r\n      if (!num) return '0%'\r\n      return `${num > 0 ? '+' : ''}${num.toFixed(1)}%`\r\n    },\r\n    \r\n    getBarHeight(value, max) {\r\n      if (!max) return '0%'\r\n      return `${(value / max) * 100}%`\r\n    },\r\n    \r\n    getDifferenceClass(pct) {\r\n      if (!pct) return ''\r\n      return pct > 0 ? 'positive' : 'negative'\r\n    },\r\n    \r\n    getPatternLabel(pattern) {\r\n      const labels = {\r\n        'weekend_higher': '周末客流更高',\r\n        'weekday_higher': '工作日客流更高'\r\n      }\r\n      return labels[pattern] || '无明显模式'\r\n    },\r\n    \r\n    getWeeklyBarHeight(value) {\r\n      if (!this.maxWeeklyFlow) return 0\r\n      return (value / this.maxWeeklyFlow) * 200\r\n    },\r\n    \r\n    getWeeklyBarColor(weekday) {\r\n      // 0=Monday, 6=Sunday\r\n      return weekday >= 5 ? '#ef4444' : '#3b82f6'\r\n    },\r\n    \r\n    getHourlyPoints(type) {\r\n      const data = type === 'weekday' \r\n        ? this.analysisData?.hourly_patterns?.weekday_pattern || []\r\n        : this.analysisData?.hourly_patterns?.weekend_pattern || []\r\n      \r\n      if (!data.length) return []\r\n      \r\n      const maxValue = Math.max(...data.map(d => d.COMMADDR))\r\n      \r\n      return data.map(item => ({\r\n        x: item.hour * 35,\r\n        y: 180 - (item.COMMADDR / maxValue * 160)\r\n      }))\r\n    },\r\n    \r\n    getHourlyPolylinePoints(type) {\r\n      return this.getHourlyPoints(type).map(p => `${p.x},${p.y}`).join(' ')\r\n    },\r\n    \r\n    getTrendPoints() {\r\n      const data = this.analysisData?.flow_trends?.weekly_summary || []\r\n      if (!data.length) return []\r\n      \r\n      const maxValue = Math.max(...data.map(d => d.avg_daily_vehicles))\r\n      \r\n      return data.map((item, index) => ({\r\n        x: index * 100 + 50,\r\n        y: 160 - (item.avg_daily_vehicles / maxValue * 140)\r\n      }))\r\n    },\r\n    \r\n    getTrendPolylinePoints() {\r\n      return this.getTrendPoints().map(p => `${p.x},${p.y}`).join(' ')\r\n    },\r\n    \r\n    getTrendClass() {\r\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction\r\n      return {\r\n        'trend-increasing': direction === 'increasing',\r\n        'trend-decreasing': direction === 'decreasing',\r\n        'trend-stable': direction === 'stable'\r\n      }\r\n    },\r\n    \r\n    getTrendLabel() {\r\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction\r\n      const labels = {\r\n        'increasing': '上升趋势',\r\n        'decreasing': '下降趋势',\r\n        'stable': '稳定'\r\n      }\r\n      return labels[direction] || '未知'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.weekly-passenger-flow {\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  min-height: 100vh;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n/* 控制面板 */\r\n.control-panel {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.time-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  color: white;\r\n}\r\n\r\n.time-selector label {\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\n.time-input {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  color: white;\r\n  font-size: 14px;\r\n}\r\n\r\n.time-input:focus {\r\n  outline: none;\r\n  border-color: #60a5fa;\r\n  box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.3);\r\n}\r\n\r\n.to {\r\n  color: white;\r\n  font-weight: 500;\r\n}\r\n\r\n.analyze-btn {\r\n  background: linear-gradient(45deg, #3b82f6, #1d4ed8);\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.analyze-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);\r\n}\r\n\r\n.analyze-btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-container {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  color: white;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 4px solid rgba(255, 255, 255, 0.3);\r\n  border-top: 4px solid white;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 错误信息 */\r\n.error-message {\r\n  background: rgba(239, 68, 68, 0.2);\r\n  border: 1px solid rgba(239, 68, 68, 0.5);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  color: white;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: #ef4444;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 分析结果 */\r\n.analysis-results {\r\n  space-y: 30px;\r\n}\r\n\r\n/* 概览卡片 */\r\n.overview-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.stat-card {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.card-icon {\r\n  font-size: 48px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.card-content h3 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 14px;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.stat-value {\r\n  color: white;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\n.stat-label {\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 12px;\r\n}\r\n\r\n/* 对比区域 */\r\n.comparison-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.comparison-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.comparison-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.bar-chart {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: end;\r\n  height: 200px;\r\n  padding: 20px;\r\n}\r\n\r\n.bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  width: 80px;\r\n}\r\n\r\n.bar-fill {\r\n  width: 60px;\r\n  background: linear-gradient(45deg, #3b82f6, #1d4ed8);\r\n  border-radius: 8px 8px 0 0;\r\n  transition: height 0.8s ease;\r\n}\r\n\r\n.weekend-bar .bar-fill {\r\n  background: linear-gradient(45deg, #ef4444, #dc2626);\r\n}\r\n\r\n.bar-label {\r\n  color: white;\r\n  font-weight: 600;\r\n  margin-top: 10px;\r\n}\r\n\r\n.bar-value {\r\n  color: white;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comparison-stats {\r\n  color: white;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.stat-name {\r\n  font-weight: 600;\r\n}\r\n\r\n.positive {\r\n  color: #10b981;\r\n}\r\n\r\n.negative {\r\n  color: #ef4444;\r\n}\r\n\r\n/* 周模式区域 */\r\n.weekly-pattern-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.weekly-pattern-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.weekly-chart-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  align-items: start;\r\n}\r\n\r\n.weekly-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n}\r\n\r\n.weekly-bar {\r\n  transition: opacity 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.weekly-bar:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.weekly-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n}\r\n\r\n.peak-day, .lowest-day {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.peak-day h4, .lowest-day h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.day-name {\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.day-value {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 14px;\r\n}\r\n\r\n/* 小时模式区域 */\r\n.hourly-pattern-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.hourly-pattern-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.hourly-chart-tabs {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tab-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.tab-btn.active {\r\n  background: rgba(59, 130, 246, 0.5);\r\n}\r\n\r\n.hourly-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-point {\r\n  transition: r 0.3s ease;\r\n}\r\n\r\n.data-point:hover {\r\n  r: 6;\r\n}\r\n\r\n.peak-info {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n.peak-hour-info {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.peak-hour-info h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.peak-hour-info p {\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 趋势分析 */\r\n.trend-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.trend-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.trend-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  align-items: center;\r\n}\r\n\r\n.trend-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n}\r\n\r\n.trend-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n}\r\n\r\n.trend-direction, .trend-slope {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.trend-direction h4, .trend-slope h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.trend-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.trend-increasing {\r\n  color: #10b981;\r\n}\r\n\r\n.trend-decreasing {\r\n  color: #ef4444;\r\n}\r\n\r\n.trend-stable {\r\n  color: #f59e0b;\r\n}\r\n\r\n/* 数据表格 */\r\n.data-table-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.data-table-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.table-container {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th {\r\n  background: rgba(59, 130, 246, 0.3);\r\n  color: white;\r\n  padding: 15px;\r\n  text-align: left;\r\n  font-weight: 600;\r\n}\r\n\r\n.data-table td {\r\n  color: white;\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.data-table tr:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.weekend-tag {\r\n  background: #ef4444;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.weekday-tag {\r\n  background: #3b82f6;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .weekly-passenger-flow {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .overview-cards {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .comparison-container,\r\n  .weekly-chart-container,\r\n  .trend-container {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .peak-info {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .time-selector {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .stat-card {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}