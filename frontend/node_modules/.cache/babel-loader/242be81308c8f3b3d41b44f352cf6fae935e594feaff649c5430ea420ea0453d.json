{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue';\nimport { AlertTriangleIcon, SettingsIcon, ClockIcon, ScanIcon, SlidersHorizontalIcon, PlayIcon, LoaderIcon, RefreshCwIcon, BarChart3Icon, MapIcon, ListIcon, DownloadIcon, EyeIcon, XIcon, MapPinIcon, AlertCircleIcon, InfoIcon, CarIcon } from 'lucide-vue-next';\nimport { detectAnomalies, getRealtimeAnomalies, getAnomalyTypes, getAnomalyHeatmap } from '@/api/traffic';\n\n// 地图相关\nconst minDate = \"2013-09-12T00:00\";\nconst maxDate = \"2013-09-18T23:59\";\n\n// 检测参数\n\nexport default {\n  __name: 'TrafficAnomaly',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mapContainerId = 'anomaly-map-' + Date.now();\n    let map = null;\n    let markers = [];\n    let heatmapLayer = null;\n    const mapInitialized = ref(false);\n\n    // 基础状态\n    const isRealTimeMode = ref(false);\n    const isDetecting = ref(false);\n    const showHeatmap = ref(false);\n    const selectedAnomalyTypeFilter = ref('all');\n    const sortBy = ref('timestamp');\n\n    // 时间限制\n    const detectionParams = ref({\n      startTime: \"2013-09-13T08:00\",\n      endTime: \"2013-09-13T12:00\",\n      detectAll: true,\n      selectedTypes: []\n    });\n\n    // 阈值配置\n    const thresholds = ref({\n      long_stop_duration_minutes: 5,\n      speed_threshold_low: 5,\n      speed_threshold_high: 80,\n      cluster_density: 50\n    });\n\n    // 数据状态\n    const anomalyTypes = ref([]);\n    const anomalies = ref([]);\n    const statistics = ref({});\n    const selectedAnomaly = ref(null);\n\n    // 计算属性\n    const filteredAnomalies = computed(() => {\n      if (selectedAnomalyTypeFilter.value === 'all') {\n        return anomalies.value;\n      }\n      return anomalies.value.filter(anomaly => anomaly.type === selectedAnomalyTypeFilter.value);\n    });\n\n    // 实时监控定时器\n    let realtimeTimer = null;\n\n    // 方法\n    async function initMap() {\n      if (!window.AMap) {\n        await loadAMapAPI();\n      }\n      map = new window.AMap.Map(mapContainerId, {\n        center: [117.120, 36.651],\n        zoom: 11,\n        mapStyle: 'amap://styles/dark'\n      });\n      map.plugin(['AMap.ToolBar', 'AMap.Scale'], function () {\n        map.addControl(new window.AMap.ToolBar());\n        map.addControl(new window.AMap.Scale());\n      });\n      mapInitialized.value = true;\n    }\n    function loadAMapAPI() {\n      return new Promise((resolve, reject) => {\n        if (window.AMap) {\n          resolve();\n          return;\n        }\n        const script = document.createElement('script');\n        script.src = 'https://webapi.amap.com/maps?v=2.0&key=ac9b745946df9aee02cf0515319407df&callback=initAMap';\n        window.initAMap = () => {\n          resolve();\n          delete window.initAMap;\n        };\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    }\n    async function loadAnomalyTypes() {\n      try {\n        const response = await getAnomalyTypes();\n        if (response.data.success) {\n          anomalyTypes.value = response.data.anomaly_types;\n        }\n      } catch (error) {\n        console.error('加载异常类型失败:', error);\n      }\n    }\n    function toggleDetectAll() {\n      if (detectionParams.value.detectAll) {\n        detectionParams.value.selectedTypes = [];\n      }\n    }\n    async function startDetection() {\n      if (isDetecting.value) return;\n      isDetecting.value = true;\n      try {\n        if (isRealTimeMode.value) {\n          await detectRealtimeAnomalies();\n          startRealtimeMonitoring();\n        } else {\n          await detectHistoricalAnomalies();\n        }\n      } catch (error) {\n        console.error('异常检测失败:', error);\n        alert('异常检测失败，请检查参数后重试');\n      } finally {\n        isDetecting.value = false;\n      }\n    }\n    async function detectRealtimeAnomalies() {\n      const response = await getRealtimeAnomalies(3600, 100);\n      if (response.data.success) {\n        anomalies.value = response.data.anomalies;\n        updateStatistics();\n        displayAnomaliesOnMap();\n      }\n    }\n    async function detectHistoricalAnomalies() {\n      // 转换时间为时间戳\n      const startTimestamp = new Date(detectionParams.value.startTime).getTime() / 1000;\n      const endTimestamp = new Date(detectionParams.value.endTime).getTime() / 1000;\n\n      // 确定检测类型\n      let detectionTypes = 'all';\n      if (!detectionParams.value.detectAll && detectionParams.value.selectedTypes.length > 0) {\n        detectionTypes = detectionParams.value.selectedTypes.join(',');\n      }\n\n      // 准备阈值参数\n      const thresholdParams = {\n        long_stop_duration: thresholds.value.long_stop_duration_minutes * 60,\n        speed_threshold_low: thresholds.value.speed_threshold_low,\n        speed_threshold_high: thresholds.value.speed_threshold_high,\n        cluster_density: thresholds.value.cluster_density\n      };\n      const response = await detectAnomalies(startTimestamp, endTimestamp, detectionTypes, thresholdParams);\n      if (response.data.success) {\n        anomalies.value = response.data.anomalies;\n        statistics.value = response.data.statistics;\n        displayAnomaliesOnMap();\n      } else {\n        alert(response.data.message || '检测失败');\n      }\n    }\n    function startRealtimeMonitoring() {\n      if (realtimeTimer) {\n        clearInterval(realtimeTimer);\n      }\n      if (isRealTimeMode.value) {\n        realtimeTimer = setInterval(() => {\n          detectRealtimeAnomalies();\n        }, 30000); // 30秒刷新一次\n      }\n    }\n    function updateStatistics() {\n      const stats = {\n        total_count: anomalies.value.length,\n        by_type: {},\n        by_severity: {\n          high: 0,\n          medium: 0,\n          low: 0\n        }\n      };\n      anomalies.value.forEach(anomaly => {\n        // 按类型统计\n        const type = anomaly.type || 'unknown';\n        stats.by_type[type] = (stats.by_type[type] || 0) + 1;\n\n        // 按严重程度统计\n        const severity = anomaly.severity || 'low';\n        if (stats.by_severity[severity] !== undefined) {\n          stats.by_severity[severity]++;\n        }\n      });\n      statistics.value = stats;\n    }\n    function displayAnomaliesOnMap() {\n      if (!map) return;\n      clearMapMarkers();\n      if (showHeatmap.value) {\n        displayHeatmap();\n      } else {\n        displayMarkers();\n      }\n    }\n    function displayMarkers() {\n      const colorMap = {\n        'high': '#ff4444',\n        'medium': '#ffa726',\n        'low': '#ffeb3b'\n      };\n      filteredAnomalies.value.forEach(anomaly => {\n        const color = colorMap[anomaly.severity] || '#666666';\n        const marker = new window.AMap.Marker({\n          position: [anomaly.longitude, anomaly.latitude],\n          icon: new window.AMap.Icon({\n            size: new window.AMap.Size(24, 24),\n            image: `data:image/svg+xml;base64,${btoa(`\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" stroke=\"#fff\" stroke-width=\"2\"/>\n            <path d=\"M12 8v4l3 3\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n          </svg>\n        `)}`\n          }),\n          title: anomaly.name,\n          extData: anomaly\n        });\n        marker.on('click', () => {\n          selectAnomaly(anomaly);\n        });\n        map.add(marker);\n        markers.push(marker);\n      });\n\n      // 自适应视野\n      if (markers.length > 0) {\n        map.setFitView(markers, false, [50, 50, 50, 50]);\n      }\n    }\n    async function displayHeatmap() {\n      if (!map || filteredAnomalies.value.length === 0) return;\n      try {\n        // 获取热力图数据\n        const startTimestamp = new Date(detectionParams.value.startTime).getTime() / 1000;\n        const endTimestamp = new Date(detectionParams.value.endTime).getTime() / 1000;\n        const response = await getAnomalyHeatmap(startTimestamp, endTimestamp, selectedAnomalyTypeFilter.value);\n        if (response.data.success && response.data.heatmap_points.length > 0) {\n          const heatmapData = response.data.heatmap_points.map(point => ({\n            lng: point.lng,\n            lat: point.lat,\n            count: point.intensity || point.count\n          }));\n\n          // 移除旧的热力图\n          if (heatmapLayer) {\n            map.remove(heatmapLayer);\n          }\n\n          // 创建新的热力图\n          map.plugin(['AMap.Heatmap'], () => {\n            heatmapLayer = new window.AMap.Heatmap(map, {\n              radius: 25,\n              opacity: [0, 0.8],\n              gradient: {\n                0.4: '#00ff00',\n                0.6: '#ffff00',\n                0.8: '#ff8800',\n                1.0: '#ff0000'\n              }\n            });\n            heatmapLayer.setDataSet({\n              data: heatmapData,\n              max: Math.max(...heatmapData.map(d => d.count))\n            });\n          });\n        }\n      } catch (error) {\n        console.error('显示热力图失败:', error);\n      }\n    }\n    function clearMapMarkers() {\n      markers.forEach(marker => map.remove(marker));\n      markers = [];\n      if (heatmapLayer) {\n        map.remove(heatmapLayer);\n        heatmapLayer = null;\n      }\n    }\n    function clearResults() {\n      anomalies.value = [];\n      statistics.value = {};\n      selectedAnomaly.value = null;\n      clearMapMarkers();\n      if (realtimeTimer) {\n        clearInterval(realtimeTimer);\n        realtimeTimer = null;\n      }\n    }\n    function filterAnomaliesByType() {\n      displayAnomaliesOnMap();\n    }\n    function sortAnomalies() {\n      switch (sortBy.value) {\n        case 'timestamp':\n          anomalies.value.sort((a, b) => b.timestamp - a.timestamp);\n          break;\n        case 'severity':\n          const severityOrder = {\n            high: 3,\n            medium: 2,\n            low: 1\n          };\n          anomalies.value.sort((a, b) => severityOrder[b.severity] - severityOrder[a.severity]);\n          break;\n        case 'type':\n          anomalies.value.sort((a, b) => a.type.localeCompare(b.type));\n          break;\n      }\n    }\n    function selectAnomaly(anomaly) {\n      selectedAnomaly.value = anomaly;\n    }\n    function closeAnomalyDetail() {\n      selectedAnomaly.value = null;\n    }\n    function locateOnMap(anomaly) {\n      if (!map) return;\n      map.setCenter([anomaly.longitude, anomaly.latitude]);\n      map.setZoom(15);\n\n      // 高亮标记\n      const marker = markers.find(m => m.getExtData()?.id === anomaly.id);\n      if (marker) {\n        marker.setAnimation('AMAP_ANIMATION_BOUNCE');\n        setTimeout(() => {\n          marker.setAnimation('AMAP_ANIMATION_NONE');\n        }, 3000);\n      }\n      closeAnomalyDetail();\n    }\n    function exportAnomalies() {\n      if (anomalies.value.length === 0) return;\n      const dataStr = JSON.stringify(anomalies.value, null, 2);\n      const dataBlob = new Blob([dataStr], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(dataBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `anomalies_${Date.now()}.json`;\n      link.click();\n      URL.revokeObjectURL(url);\n    }\n    function exportSingleAnomaly(anomaly) {\n      const dataStr = JSON.stringify(anomaly, null, 2);\n      const dataBlob = new Blob([dataStr], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(dataBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `anomaly_${anomaly.id}.json`;\n      link.click();\n      URL.revokeObjectURL(url);\n    }\n\n    // 辅助函数\n    function getSeverityIndicator(severity) {\n      const classes = {\n        'high': 'bg-red-500',\n        'medium': 'bg-orange-500',\n        'low': 'bg-yellow-500'\n      };\n      return classes[severity] || 'bg-gray-500';\n    }\n    function getSeverityBadge(severity) {\n      const classes = {\n        'high': 'bg-red-500/20 text-red-400 border border-red-500/30',\n        'medium': 'bg-orange-500/20 text-orange-400 border border-orange-500/30',\n        'low': 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30'\n      };\n      return classes[severity] || 'bg-gray-500/20 text-gray-400 border border-gray-500/30';\n    }\n    function getSeverityText(severity) {\n      const texts = {\n        'high': '高危',\n        'medium': '中危',\n        'low': '低危'\n      };\n      return texts[severity] || '未知';\n    }\n    function getTypeText(type) {\n      const typeMap = anomalyTypes.value.reduce((map, t) => {\n        map[t.type] = t.name;\n        return map;\n      }, {});\n      return typeMap[type] || type;\n    }\n    function formatTime(timestamp) {\n      return new Date(timestamp * 1000).toLocaleString('zh-CN');\n    }\n\n    // 监听模式变化\n    watch(isRealTimeMode, newVal => {\n      if (!newVal && realtimeTimer) {\n        clearInterval(realtimeTimer);\n        realtimeTimer = null;\n      }\n    });\n    watch(showHeatmap, () => {\n      displayAnomaliesOnMap();\n    });\n\n    // 生命周期\n    onMounted(async () => {\n      await loadAnomalyTypes();\n      setTimeout(() => {\n        initMap();\n      }, 500);\n    });\n    onUnmounted(() => {\n      if (realtimeTimer) {\n        clearInterval(realtimeTimer);\n      }\n      if (map) {\n        map.destroy();\n      }\n    });\n    const __returned__ = {\n      mapContainerId,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      get markers() {\n        return markers;\n      },\n      set markers(v) {\n        markers = v;\n      },\n      get heatmapLayer() {\n        return heatmapLayer;\n      },\n      set heatmapLayer(v) {\n        heatmapLayer = v;\n      },\n      mapInitialized,\n      isRealTimeMode,\n      isDetecting,\n      showHeatmap,\n      selectedAnomalyTypeFilter,\n      sortBy,\n      minDate,\n      maxDate,\n      detectionParams,\n      thresholds,\n      anomalyTypes,\n      anomalies,\n      statistics,\n      selectedAnomaly,\n      filteredAnomalies,\n      get realtimeTimer() {\n        return realtimeTimer;\n      },\n      set realtimeTimer(v) {\n        realtimeTimer = v;\n      },\n      initMap,\n      loadAMapAPI,\n      loadAnomalyTypes,\n      toggleDetectAll,\n      startDetection,\n      detectRealtimeAnomalies,\n      detectHistoricalAnomalies,\n      startRealtimeMonitoring,\n      updateStatistics,\n      displayAnomaliesOnMap,\n      displayMarkers,\n      displayHeatmap,\n      clearMapMarkers,\n      clearResults,\n      filterAnomaliesByType,\n      sortAnomalies,\n      selectAnomaly,\n      closeAnomalyDetail,\n      locateOnMap,\n      exportAnomalies,\n      exportSingleAnomaly,\n      getSeverityIndicator,\n      getSeverityBadge,\n      getSeverityText,\n      getTypeText,\n      formatTime,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      watch,\n      get AlertTriangleIcon() {\n        return AlertTriangleIcon;\n      },\n      get SettingsIcon() {\n        return SettingsIcon;\n      },\n      get ClockIcon() {\n        return ClockIcon;\n      },\n      get ScanIcon() {\n        return ScanIcon;\n      },\n      get SlidersHorizontalIcon() {\n        return SlidersHorizontalIcon;\n      },\n      get PlayIcon() {\n        return PlayIcon;\n      },\n      get LoaderIcon() {\n        return LoaderIcon;\n      },\n      get RefreshCwIcon() {\n        return RefreshCwIcon;\n      },\n      get BarChart3Icon() {\n        return BarChart3Icon;\n      },\n      get MapIcon() {\n        return MapIcon;\n      },\n      get ListIcon() {\n        return ListIcon;\n      },\n      get DownloadIcon() {\n        return DownloadIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get XIcon() {\n        return XIcon;\n      },\n      get MapPinIcon() {\n        return MapPinIcon;\n      },\n      get AlertCircleIcon() {\n        return AlertCircleIcon;\n      },\n      get InfoIcon() {\n        return InfoIcon;\n      },\n      get CarIcon() {\n        return CarIcon;\n      },\n      get detectAnomalies() {\n        return detectAnomalies;\n      },\n      get getRealtimeAnomalies() {\n        return getRealtimeAnomalies;\n      },\n      get getAnomalyTypes() {\n        return getAnomalyTypes;\n      },\n      get getAnomalyHeatmap() {\n        return getAnomalyHeatmap;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","AlertTriangleIcon","SettingsIcon","ClockIcon","ScanIcon","SlidersHorizontalIcon","PlayIcon","LoaderIcon","RefreshCwIcon","BarChart3Icon","MapIcon","ListIcon","DownloadIcon","EyeIcon","XIcon","MapPinIcon","AlertCircleIcon","InfoIcon","CarIcon","detectAnomalies","getRealtimeAnomalies","getAnomalyTypes","getAnomalyHeatmap","minDate","maxDate","mapContainerId","Date","now","map","markers","heatmapLayer","mapInitialized","isRealTimeMode","isDetecting","showHeatmap","selectedAnomalyTypeFilter","sortBy","detectionParams","startTime","endTime","detectAll","selectedTypes","thresholds","long_stop_duration_minutes","speed_threshold_low","speed_threshold_high","cluster_density","anomalyTypes","anomalies","statistics","selectedAnomaly","filteredAnomalies","value","filter","anomaly","type","realtimeTimer","initMap","window","AMap","loadAMapAPI","Map","center","zoom","mapStyle","plugin","addControl","ToolBar","Scale","Promise","resolve","reject","script","document","createElement","src","initAMap","onerror","head","appendChild","loadAnomalyTypes","response","data","success","anomaly_types","error","console","toggleDetectAll","startDetection","detectRealtimeAnomalies","startRealtimeMonitoring","detectHistoricalAnomalies","alert","updateStatistics","displayAnomaliesOnMap","startTimestamp","getTime","endTimestamp","detectionTypes","length","join","thresholdParams","long_stop_duration","message","clearInterval","setInterval","stats","total_count","by_type","by_severity","high","medium","low","forEach","severity","undefined","clearMapMarkers","displayHeatmap","displayMarkers","colorMap","color","marker","Marker","position","longitude","latitude","icon","Icon","size","Size","image","btoa","title","name","extData","on","selectAnomaly","add","push","setFitView","heatmap_points","heatmapData","point","lng","lat","count","intensity","remove","Heatmap","radius","opacity","gradient","setDataSet","max","Math","d","clearResults","filterAnomaliesByType","sortAnomalies","sort","a","b","timestamp","severityOrder","localeCompare","closeAnomalyDetail","locateOnMap","setCenter","setZoom","find","m","getExtData","id","setAnimation","setTimeout","exportAnomalies","dataStr","JSON","stringify","dataBlob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","exportSingleAnomaly","getSeverityIndicator","classes","getSeverityBadge","getSeverityText","texts","getTypeText","typeMap","reduce","t","formatTime","toLocaleString","newVal","destroy"],"sources":["E:/hhh/frontend/src/modules/trafficVisualization/TrafficAnomaly.vue"],"sourcesContent":["<template>\r\n  <div class=\"anomaly-detection-container\">\r\n    <!-- 页面标题和总览 -->\r\n    <div class=\"mb-6\">\r\n      <div class=\"bg-gradient-to-r from-red-900/50 via-orange-900/50 to-yellow-900/50 rounded-xl p-6 border border-red-500/30\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"bg-red-500/20 p-3 rounded-lg mr-4\">\r\n              <AlertTriangleIcon class=\"w-8 h-8 text-red-400\" />\r\n            </div>\r\n            <div>\r\n              <h2 class=\"text-2xl font-bold text-white mb-1\">异常数据侦测与可视化</h2>\r\n              <p class=\"text-gray-300\">智能识别交通异常事件，支持实时监控和历史分析</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex items-center space-x-6\">\r\n            <div class=\"text-center\">\r\n              <div class=\"text-3xl font-bold text-red-400\">{{ statistics.total_count || 0 }}</div>\r\n              <div class=\"text-sm text-gray-300\">异常事件</div>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <div class=\"text-3xl font-bold text-orange-400\">{{ statistics.by_severity?.high || 0 }}</div>\r\n              <div class=\"text-sm text-gray-300\">高危异常</div>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <div class=\"text-3xl font-bold text-green-400\">{{ isRealTimeMode ? '实时' : '历史' }}</div>\r\n              <div class=\"text-sm text-gray-300\">监控模式</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 控制面板 -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-6\">\r\n      <!-- 检测配置 -->\r\n      <div class=\"lg:col-span-1 space-y-4\">\r\n        <!-- 模式切换 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl p-4 border border-blue-500/30\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-3 flex items-center\">\r\n            <SettingsIcon class=\"w-5 h-5 mr-2\" />\r\n            检测模式\r\n          </h3>\r\n          <div class=\"space-y-2\">\r\n            <label class=\"flex items-center\">\r\n              <input \r\n                v-model=\"isRealTimeMode\" \r\n                type=\"checkbox\" \r\n                class=\"mr-2 rounded bg-blue-900/50 border-blue-500/50 text-blue-500\"\r\n              />\r\n              <span class=\"text-white\">实时监控模式</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 时间范围 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl p-4 border border-blue-500/30\" v-if=\"!isRealTimeMode\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-3 flex items-center\">\r\n            <ClockIcon class=\"w-5 h-5 mr-2\" />\r\n            时间范围\r\n          </h3>\r\n          <div class=\"space-y-3\">\r\n            <div>\r\n              <label class=\"block text-sm text-gray-300 mb-1\">开始时间</label>\r\n              <input \r\n                v-model=\"detectionParams.startTime\"\r\n                type=\"datetime-local\" \r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n                :min=\"minDate\"\r\n                :max=\"maxDate\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm text-gray-300 mb-1\">结束时间</label>\r\n              <input \r\n                v-model=\"detectionParams.endTime\"\r\n                type=\"datetime-local\" \r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n                :min=\"minDate\"\r\n                :max=\"maxDate\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 检测类型 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl p-4 border border-blue-500/30\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-3 flex items-center\">\r\n            <ScanIcon class=\"w-5 h-5 mr-2\" />\r\n            异常类型\r\n          </h3>\r\n          <div class=\"space-y-2\">\r\n            <label class=\"flex items-center\">\r\n              <input \r\n                v-model=\"detectionParams.detectAll\" \r\n                type=\"checkbox\" \r\n                class=\"mr-2 rounded bg-blue-900/50 border-blue-500/50 text-blue-500\"\r\n                @change=\"toggleDetectAll\"\r\n              />\r\n              <span class=\"text-white font-medium\">全部检测</span>\r\n            </label>\r\n            <div v-for=\"type in anomalyTypes\" :key=\"type.type\" class=\"ml-4\">\r\n              <label class=\"flex items-center\">\r\n                <input \r\n                  v-model=\"detectionParams.selectedTypes\" \r\n                  :value=\"type.type\"\r\n                  type=\"checkbox\" \r\n                  class=\"mr-2 rounded bg-blue-900/50 border-blue-500/50 text-blue-500\"\r\n                  :disabled=\"detectionParams.detectAll\"\r\n                />\r\n                <span class=\"text-sm text-gray-300\">{{ type.name }}</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 阈值配置 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl p-4 border border-blue-500/30\">\r\n          <h3 class=\"text-lg font-semibold text-white mb-3 flex items-center\">\r\n            <SlidersHorizontalIcon class=\"w-5 h-5 mr-2\" />\r\n            检测阈值\r\n          </h3>\r\n          <div class=\"space-y-3 text-sm\">\r\n            <div>\r\n              <label class=\"block text-gray-300 mb-1\">停车时长 (分钟)</label>\r\n              <input \r\n                v-model.number=\"thresholds.long_stop_duration_minutes\"\r\n                type=\"number\" \r\n                min=\"1\" \r\n                max=\"60\"\r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-gray-300 mb-1\">低速阈值 (km/h)</label>\r\n              <input \r\n                v-model.number=\"thresholds.speed_threshold_low\"\r\n                type=\"number\" \r\n                min=\"1\" \r\n                max=\"20\"\r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-gray-300 mb-1\">高速阈值 (km/h)</label>\r\n              <input \r\n                v-model.number=\"thresholds.speed_threshold_high\"\r\n                type=\"number\" \r\n                min=\"40\" \r\n                max=\"150\"\r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-gray-300 mb-1\">聚集密度</label>\r\n              <input \r\n                v-model.number=\"thresholds.cluster_density\"\r\n                type=\"number\" \r\n                min=\"10\" \r\n                max=\"200\"\r\n                class=\"w-full p-2 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 控制按钮 -->\r\n        <div class=\"space-y-2\">\r\n          <button \r\n            @click=\"startDetection\"\r\n            :disabled=\"isDetecting\"\r\n            class=\"w-full btn-tech flex items-center justify-center\"\r\n          >\r\n            <LoaderIcon v-if=\"isDetecting\" class=\"w-4 h-4 mr-2 animate-spin\" />\r\n            <PlayIcon v-else class=\"w-4 h-4 mr-2\" />\r\n            {{ isDetecting ? '检测中...' : '开始检测' }}\r\n          </button>\r\n          <button \r\n            @click=\"clearResults\"\r\n            class=\"w-full btn-tech-secondary flex items-center justify-center\"\r\n          >\r\n            <RefreshCwIcon class=\"w-4 h-4 mr-2\" />\r\n            清除结果\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 主要内容区域 -->\r\n      <div class=\"lg:col-span-3 space-y-6\">\r\n        <!-- 统计卡片 -->\r\n        <div class=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <div class=\"bg-red-900/30 rounded-xl p-4 border border-red-500/30\">\r\n            <div class=\"flex items-center\">\r\n              <AlertTriangleIcon class=\"w-6 h-6 text-red-400 mr-3\" />\r\n              <div>\r\n                <div class=\"text-2xl font-bold text-white\">{{ statistics.by_severity?.high || 0 }}</div>\r\n                <div class=\"text-sm text-gray-300\">高危异常</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-orange-900/30 rounded-xl p-4 border border-orange-500/30\">\r\n            <div class=\"flex items-center\">\r\n              <AlertCircleIcon class=\"w-6 h-6 text-orange-400 mr-3\" />\r\n              <div>\r\n                <div class=\"text-2xl font-bold text-white\">{{ statistics.by_severity?.medium || 0 }}</div>\r\n                <div class=\"text-sm text-gray-300\">中危异常</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-yellow-900/30 rounded-xl p-4 border border-yellow-500/30\">\r\n            <div class=\"flex items-center\">\r\n              <InfoIcon class=\"w-6 h-6 text-yellow-400 mr-3\" />\r\n              <div>\r\n                <div class=\"text-2xl font-bold text-white\">{{ statistics.by_severity?.low || 0 }}</div>\r\n                <div class=\"text-sm text-gray-300\">低危异常</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-blue-900/30 rounded-xl p-4 border border-blue-500/30\">\r\n            <div class=\"flex items-center\">\r\n              <BarChart3Icon class=\"w-6 h-6 text-blue-400 mr-3\" />\r\n              <div>\r\n                <div class=\"text-2xl font-bold text-white\">{{ Object.keys(statistics.by_type || {}).length }}</div>\r\n                <div class=\"text-sm text-gray-300\">异常类型</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 地图可视化 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl border border-blue-500/30 overflow-hidden\">\r\n          <div class=\"p-4 border-b border-blue-500/30 flex items-center justify-between\">\r\n            <h3 class=\"text-xl font-semibold text-white flex items-center\">\r\n              <MapIcon class=\"w-6 h-6 mr-2\" />\r\n              异常事件地图\r\n            </h3>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <label class=\"flex items-center text-sm text-gray-300\">\r\n                <input \r\n                  v-model=\"showHeatmap\" \r\n                  type=\"checkbox\" \r\n                  class=\"mr-2 rounded bg-blue-900/50 border-blue-500/50 text-blue-500\"\r\n                />\r\n                热力图模式\r\n              </label>\r\n              <select \r\n                v-model=\"selectedAnomalyTypeFilter\"\r\n                class=\"px-3 py-1 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n                @change=\"filterAnomaliesByType\"\r\n              >\r\n                <option value=\"all\">全部类型</option>\r\n                <option v-for=\"type in anomalyTypes\" :key=\"type.type\" :value=\"type.type\">\r\n                  {{ type.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"relative\">\r\n            <div :id=\"mapContainerId\" class=\"w-full h-96\"></div>\r\n            <div v-if=\"!mapInitialized\" class=\"absolute inset-0 flex items-center justify-center bg-blue-900/50\">\r\n              <div class=\"text-white\">地图加载中...</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 异常事件列表 -->\r\n        <div class=\"bg-blue-900/30 rounded-xl border border-blue-500/30\">\r\n          <div class=\"p-4 border-b border-blue-500/30 flex items-center justify-between\">\r\n            <h3 class=\"text-xl font-semibold text-white flex items-center\">\r\n              <ListIcon class=\"w-6 h-6 mr-2\" />\r\n              异常事件列表\r\n              <span class=\"ml-2 px-2 py-1 bg-red-500/20 text-red-400 text-sm rounded\">\r\n                {{ filteredAnomalies.length }}\r\n              </span>\r\n            </h3>\r\n            <div class=\"flex items-center space-x-2\">\r\n              <select \r\n                v-model=\"sortBy\"\r\n                class=\"px-3 py-1 bg-blue-900/50 border border-blue-500/50 rounded text-white text-sm\"\r\n                @change=\"sortAnomalies\"\r\n              >\r\n                <option value=\"timestamp\">按时间排序</option>\r\n                <option value=\"severity\">按严重程度</option>\r\n                <option value=\"type\">按类型排序</option>\r\n              </select>\r\n              <button \r\n                @click=\"exportAnomalies\"\r\n                class=\"px-3 py-1 bg-green-600/50 hover:bg-green-600/70 border border-green-500/50 rounded text-white text-sm flex items-center\"\r\n              >\r\n                <DownloadIcon class=\"w-4 h-4 mr-1\" />\r\n                导出\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"max-h-96 overflow-y-auto\">\r\n            <div v-if=\"filteredAnomalies.length === 0\" class=\"p-8 text-center text-gray-400\">\r\n              <ScanIcon class=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n              <p>暂无异常事件</p>\r\n              <p class=\"text-sm mt-1\">点击\"开始检测\"来搜索异常事件</p>\r\n            </div>\r\n            <div v-else class=\"divide-y divide-blue-500/20\">\r\n              <div \r\n                v-for=\"anomaly in filteredAnomalies.slice(0, 50)\" \r\n                :key=\"anomaly.id\"\r\n                class=\"p-4 hover:bg-blue-800/30 cursor-pointer transition-colors\"\r\n                @click=\"selectAnomaly(anomaly)\"\r\n              >\r\n                <div class=\"flex items-start justify-between\">\r\n                  <div class=\"flex items-start\">\r\n                    <div :class=\"getSeverityIndicator(anomaly.severity)\" class=\"w-3 h-3 rounded-full mt-1 mr-3 flex-shrink-0\"></div>\r\n                    <div class=\"flex-1\">\r\n                      <div class=\"flex items-center space-x-2\">\r\n                        <h4 class=\"text-white font-medium\">{{ anomaly.name }}</h4>\r\n                        <span :class=\"getSeverityBadge(anomaly.severity)\" class=\"px-2 py-1 rounded text-xs font-medium\">\r\n                          {{ getSeverityText(anomaly.severity) }}\r\n                        </span>\r\n                        <span class=\"px-2 py-1 bg-blue-500/20 text-blue-400 text-xs rounded\">\r\n                          {{ getTypeText(anomaly.type) }}\r\n                        </span>\r\n                      </div>\r\n                      <p class=\"text-gray-300 text-sm mt-1\">{{ anomaly.description }}</p>\r\n                      <div class=\"flex items-center space-x-4 mt-2 text-xs text-gray-400\">\r\n                        <span class=\"flex items-center\">\r\n                          <ClockIcon class=\"w-3 h-3 mr-1\" />\r\n                          {{ formatTime(anomaly.timestamp) }}\r\n                        </span>\r\n                        <span class=\"flex items-center\" v-if=\"anomaly.vehicle_id\">\r\n                          <CarIcon class=\"w-3 h-3 mr-1\" />\r\n                          车辆: {{ anomaly.vehicle_id }}\r\n                        </span>\r\n                        <span class=\"flex items-center\">\r\n                          <MapPinIcon class=\"w-3 h-3 mr-1\" />\r\n                          {{ anomaly.latitude?.toFixed(4) }}, {{ anomaly.longitude?.toFixed(4) }}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button \r\n                    @click.stop=\"locateOnMap(anomaly)\"\r\n                    class=\"px-2 py-1 bg-cyan-600/50 hover:bg-cyan-600/70 border border-cyan-500/50 rounded text-white text-xs flex items-center\"\r\n                  >\r\n                    <EyeIcon class=\"w-3 h-3 mr-1\" />\r\n                    定位\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 详情模态框 -->\r\n    <div v-if=\"selectedAnomaly\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click=\"closeAnomalyDetail\">\r\n      <div class=\"bg-blue-900 rounded-xl border border-blue-500/50 max-w-2xl w-full m-4 max-h-[80vh] overflow-y-auto\" @click.stop>\r\n        <div class=\"p-6\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <h3 class=\"text-xl font-bold text-white flex items-center\">\r\n              <AlertTriangleIcon class=\"w-6 h-6 mr-2 text-red-400\" />\r\n              异常事件详情\r\n            </h3>\r\n            <button @click=\"closeAnomalyDetail\" class=\"text-gray-400 hover:text-white\">\r\n              <XIcon class=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"space-y-4\">\r\n            <div class=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label class=\"block text-sm text-gray-300 mb-1\">异常类型</label>\r\n                <div class=\"text-white font-medium\">{{ selectedAnomaly.name }}</div>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm text-gray-300 mb-1\">严重程度</label>\r\n                <span :class=\"getSeverityBadge(selectedAnomaly.severity)\" class=\"px-3 py-1 rounded font-medium\">\r\n                  {{ getSeverityText(selectedAnomaly.severity) }}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm text-gray-300 mb-1\">发生时间</label>\r\n                <div class=\"text-white\">{{ formatTime(selectedAnomaly.timestamp) }}</div>\r\n              </div>\r\n              <div v-if=\"selectedAnomaly.vehicle_id\">\r\n                <label class=\"block text-sm text-gray-300 mb-1\">车辆ID</label>\r\n                <div class=\"text-white font-mono\">{{ selectedAnomaly.vehicle_id }}</div>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm text-gray-300 mb-1\">位置坐标</label>\r\n                <div class=\"text-white font-mono text-sm\">\r\n                  {{ selectedAnomaly.latitude?.toFixed(6) }}, {{ selectedAnomaly.longitude?.toFixed(6) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label class=\"block text-sm text-gray-300 mb-1\">详细描述</label>\r\n              <div class=\"text-white bg-blue-800/30 p-3 rounded\">{{ selectedAnomaly.description }}</div>\r\n            </div>\r\n            \r\n            <div v-if=\"selectedAnomaly.details\">\r\n              <label class=\"block text-sm text-gray-300 mb-2\">技术详情</label>\r\n              <div class=\"bg-blue-800/30 p-3 rounded\">\r\n                <pre class=\"text-sm text-gray-300 whitespace-pre-wrap\">{{ JSON.stringify(selectedAnomaly.details, null, 2) }}</pre>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"flex space-x-2 pt-4\">\r\n              <button \r\n                @click=\"locateOnMap(selectedAnomaly)\"\r\n                class=\"flex-1 btn-tech flex items-center justify-center\"\r\n              >\r\n                <MapPinIcon class=\"w-4 h-4 mr-2\" />\r\n                在地图上定位\r\n              </button>\r\n              <button \r\n                @click=\"exportSingleAnomaly(selectedAnomaly)\"\r\n                class=\"flex-1 btn-tech-secondary flex items-center justify-center\"\r\n              >\r\n                <DownloadIcon class=\"w-4 h-4 mr-2\" />\r\n                导出详情\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\r\nimport { \r\n  AlertTriangleIcon, \r\n  SettingsIcon, \r\n  ClockIcon, \r\n  ScanIcon, \r\n  SlidersHorizontalIcon,\r\n  PlayIcon,\r\n  LoaderIcon,\r\n  RefreshCwIcon,\r\n  BarChart3Icon,\r\n  MapIcon,\r\n  ListIcon,\r\n  DownloadIcon,\r\n  EyeIcon,\r\n  XIcon,\r\n  MapPinIcon,\r\n  AlertCircleIcon,\r\n  InfoIcon,\r\n  CarIcon\r\n} from 'lucide-vue-next'\r\nimport { \r\n  detectAnomalies, \r\n  getRealtimeAnomalies, \r\n  getAnomalyTypes, \r\n  getAnomalyHeatmap \r\n} from '@/api/traffic'\r\n\r\n// 地图相关\r\nconst mapContainerId = 'anomaly-map-' + Date.now()\r\nlet map = null\r\nlet markers = []\r\nlet heatmapLayer = null\r\nconst mapInitialized = ref(false)\r\n\r\n// 基础状态\r\nconst isRealTimeMode = ref(false)\r\nconst isDetecting = ref(false)\r\nconst showHeatmap = ref(false)\r\nconst selectedAnomalyTypeFilter = ref('all')\r\nconst sortBy = ref('timestamp')\r\n\r\n// 时间限制\r\nconst minDate = \"2013-09-12T00:00\"\r\nconst maxDate = \"2013-09-18T23:59\"\r\n\r\n// 检测参数\r\nconst detectionParams = ref({\r\n  startTime: \"2013-09-13T08:00\",\r\n  endTime: \"2013-09-13T12:00\",\r\n  detectAll: true,\r\n  selectedTypes: []\r\n})\r\n\r\n// 阈值配置\r\nconst thresholds = ref({\r\n  long_stop_duration_minutes: 5,\r\n  speed_threshold_low: 5,\r\n  speed_threshold_high: 80,\r\n  cluster_density: 50\r\n})\r\n\r\n// 数据状态\r\nconst anomalyTypes = ref([])\r\nconst anomalies = ref([])\r\nconst statistics = ref({})\r\nconst selectedAnomaly = ref(null)\r\n\r\n// 计算属性\r\nconst filteredAnomalies = computed(() => {\r\n  if (selectedAnomalyTypeFilter.value === 'all') {\r\n    return anomalies.value\r\n  }\r\n  return anomalies.value.filter(anomaly => anomaly.type === selectedAnomalyTypeFilter.value)\r\n})\r\n\r\n// 实时监控定时器\r\nlet realtimeTimer = null\r\n\r\n// 方法\r\nasync function initMap() {\r\n  if (!window.AMap) {\r\n    await loadAMapAPI()\r\n  }\r\n  \r\n  map = new window.AMap.Map(mapContainerId, {\r\n    center: [117.120, 36.651],\r\n    zoom: 11,\r\n    mapStyle: 'amap://styles/dark'\r\n  })\r\n  \r\n  map.plugin(['AMap.ToolBar', 'AMap.Scale'], function() {\r\n    map.addControl(new window.AMap.ToolBar())\r\n    map.addControl(new window.AMap.Scale())\r\n  })\r\n  \r\n  mapInitialized.value = true\r\n}\r\n\r\nfunction loadAMapAPI() {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.AMap) {\r\n      resolve()\r\n      return\r\n    }\r\n    \r\n    const script = document.createElement('script')\r\n    script.src = 'https://webapi.amap.com/maps?v=2.0&key=ac9b745946df9aee02cf0515319407df&callback=initAMap'\r\n    \r\n    window.initAMap = () => {\r\n      resolve()\r\n      delete window.initAMap\r\n    }\r\n    \r\n    script.onerror = reject\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\nasync function loadAnomalyTypes() {\r\n  try {\r\n    const response = await getAnomalyTypes()\r\n    if (response.data.success) {\r\n      anomalyTypes.value = response.data.anomaly_types\r\n    }\r\n  } catch (error) {\r\n    console.error('加载异常类型失败:', error)\r\n  }\r\n}\r\n\r\nfunction toggleDetectAll() {\r\n  if (detectionParams.value.detectAll) {\r\n    detectionParams.value.selectedTypes = []\r\n  }\r\n}\r\n\r\nasync function startDetection() {\r\n  if (isDetecting.value) return\r\n  \r\n  isDetecting.value = true\r\n  \r\n  try {\r\n    if (isRealTimeMode.value) {\r\n      await detectRealtimeAnomalies()\r\n      startRealtimeMonitoring()\r\n    } else {\r\n      await detectHistoricalAnomalies()\r\n    }\r\n  } catch (error) {\r\n    console.error('异常检测失败:', error)\r\n    alert('异常检测失败，请检查参数后重试')\r\n  } finally {\r\n    isDetecting.value = false\r\n  }\r\n}\r\n\r\nasync function detectRealtimeAnomalies() {\r\n  const response = await getRealtimeAnomalies(3600, 100)\r\n  \r\n  if (response.data.success) {\r\n    anomalies.value = response.data.anomalies\r\n    updateStatistics()\r\n    displayAnomaliesOnMap()\r\n  }\r\n}\r\n\r\nasync function detectHistoricalAnomalies() {\r\n  // 转换时间为时间戳\r\n  const startTimestamp = new Date(detectionParams.value.startTime).getTime() / 1000\r\n  const endTimestamp = new Date(detectionParams.value.endTime).getTime() / 1000\r\n  \r\n  // 确定检测类型\r\n  let detectionTypes = 'all'\r\n  if (!detectionParams.value.detectAll && detectionParams.value.selectedTypes.length > 0) {\r\n    detectionTypes = detectionParams.value.selectedTypes.join(',')\r\n  }\r\n  \r\n  // 准备阈值参数\r\n  const thresholdParams = {\r\n    long_stop_duration: thresholds.value.long_stop_duration_minutes * 60,\r\n    speed_threshold_low: thresholds.value.speed_threshold_low,\r\n    speed_threshold_high: thresholds.value.speed_threshold_high,\r\n    cluster_density: thresholds.value.cluster_density\r\n  }\r\n  \r\n  const response = await detectAnomalies(startTimestamp, endTimestamp, detectionTypes, thresholdParams)\r\n  \r\n  if (response.data.success) {\r\n    anomalies.value = response.data.anomalies\r\n    statistics.value = response.data.statistics\r\n    displayAnomaliesOnMap()\r\n  } else {\r\n    alert(response.data.message || '检测失败')\r\n  }\r\n}\r\n\r\nfunction startRealtimeMonitoring() {\r\n  if (realtimeTimer) {\r\n    clearInterval(realtimeTimer)\r\n  }\r\n  \r\n  if (isRealTimeMode.value) {\r\n    realtimeTimer = setInterval(() => {\r\n      detectRealtimeAnomalies()\r\n    }, 30000) // 30秒刷新一次\r\n  }\r\n}\r\n\r\nfunction updateStatistics() {\r\n  const stats = {\r\n    total_count: anomalies.value.length,\r\n    by_type: {},\r\n    by_severity: { high: 0, medium: 0, low: 0 }\r\n  }\r\n  \r\n  anomalies.value.forEach(anomaly => {\r\n    // 按类型统计\r\n    const type = anomaly.type || 'unknown'\r\n    stats.by_type[type] = (stats.by_type[type] || 0) + 1\r\n    \r\n    // 按严重程度统计\r\n    const severity = anomaly.severity || 'low'\r\n    if (stats.by_severity[severity] !== undefined) {\r\n      stats.by_severity[severity]++\r\n    }\r\n  })\r\n  \r\n  statistics.value = stats\r\n}\r\n\r\nfunction displayAnomaliesOnMap() {\r\n  if (!map) return\r\n  \r\n  clearMapMarkers()\r\n  \r\n  if (showHeatmap.value) {\r\n    displayHeatmap()\r\n  } else {\r\n    displayMarkers()\r\n  }\r\n}\r\n\r\nfunction displayMarkers() {\r\n  const colorMap = {\r\n    'high': '#ff4444',\r\n    'medium': '#ffa726',\r\n    'low': '#ffeb3b'\r\n  }\r\n  \r\n  filteredAnomalies.value.forEach(anomaly => {\r\n    const color = colorMap[anomaly.severity] || '#666666'\r\n    \r\n    const marker = new window.AMap.Marker({\r\n      position: [anomaly.longitude, anomaly.latitude],\r\n      icon: new window.AMap.Icon({\r\n        size: new window.AMap.Size(24, 24),\r\n        image: `data:image/svg+xml;base64,${btoa(`\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" stroke=\"#fff\" stroke-width=\"2\"/>\r\n            <path d=\"M12 8v4l3 3\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n          </svg>\r\n        `)}`\r\n      }),\r\n      title: anomaly.name,\r\n      extData: anomaly\r\n    })\r\n    \r\n    marker.on('click', () => {\r\n      selectAnomaly(anomaly)\r\n    })\r\n    \r\n    map.add(marker)\r\n    markers.push(marker)\r\n  })\r\n  \r\n  // 自适应视野\r\n  if (markers.length > 0) {\r\n    map.setFitView(markers, false, [50, 50, 50, 50])\r\n  }\r\n}\r\n\r\nasync function displayHeatmap() {\r\n  if (!map || filteredAnomalies.value.length === 0) return\r\n  \r\n  try {\r\n    // 获取热力图数据\r\n    const startTimestamp = new Date(detectionParams.value.startTime).getTime() / 1000\r\n    const endTimestamp = new Date(detectionParams.value.endTime).getTime() / 1000\r\n    \r\n    const response = await getAnomalyHeatmap(\r\n      startTimestamp, \r\n      endTimestamp, \r\n      selectedAnomalyTypeFilter.value\r\n    )\r\n    \r\n    if (response.data.success && response.data.heatmap_points.length > 0) {\r\n      const heatmapData = response.data.heatmap_points.map(point => ({\r\n        lng: point.lng,\r\n        lat: point.lat,\r\n        count: point.intensity || point.count\r\n      }))\r\n      \r\n      // 移除旧的热力图\r\n      if (heatmapLayer) {\r\n        map.remove(heatmapLayer)\r\n      }\r\n      \r\n      // 创建新的热力图\r\n      map.plugin(['AMap.Heatmap'], () => {\r\n        heatmapLayer = new window.AMap.Heatmap(map, {\r\n          radius: 25,\r\n          opacity: [0, 0.8],\r\n          gradient: {\r\n            0.4: '#00ff00',\r\n            0.6: '#ffff00',\r\n            0.8: '#ff8800',\r\n            1.0: '#ff0000'\r\n          }\r\n        })\r\n        \r\n        heatmapLayer.setDataSet({\r\n          data: heatmapData,\r\n          max: Math.max(...heatmapData.map(d => d.count))\r\n        })\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('显示热力图失败:', error)\r\n  }\r\n}\r\n\r\nfunction clearMapMarkers() {\r\n  markers.forEach(marker => map.remove(marker))\r\n  markers = []\r\n  \r\n  if (heatmapLayer) {\r\n    map.remove(heatmapLayer)\r\n    heatmapLayer = null\r\n  }\r\n}\r\n\r\nfunction clearResults() {\r\n  anomalies.value = []\r\n  statistics.value = {}\r\n  selectedAnomaly.value = null\r\n  clearMapMarkers()\r\n  \r\n  if (realtimeTimer) {\r\n    clearInterval(realtimeTimer)\r\n    realtimeTimer = null\r\n  }\r\n}\r\n\r\nfunction filterAnomaliesByType() {\r\n  displayAnomaliesOnMap()\r\n}\r\n\r\nfunction sortAnomalies() {\r\n  switch (sortBy.value) {\r\n    case 'timestamp':\r\n      anomalies.value.sort((a, b) => b.timestamp - a.timestamp)\r\n      break\r\n    case 'severity':\r\n      const severityOrder = { high: 3, medium: 2, low: 1 }\r\n      anomalies.value.sort((a, b) => severityOrder[b.severity] - severityOrder[a.severity])\r\n      break\r\n    case 'type':\r\n      anomalies.value.sort((a, b) => a.type.localeCompare(b.type))\r\n      break\r\n  }\r\n}\r\n\r\nfunction selectAnomaly(anomaly) {\r\n  selectedAnomaly.value = anomaly\r\n}\r\n\r\nfunction closeAnomalyDetail() {\r\n  selectedAnomaly.value = null\r\n}\r\n\r\nfunction locateOnMap(anomaly) {\r\n  if (!map) return\r\n  \r\n  map.setCenter([anomaly.longitude, anomaly.latitude])\r\n  map.setZoom(15)\r\n  \r\n  // 高亮标记\r\n  const marker = markers.find(m => m.getExtData()?.id === anomaly.id)\r\n  if (marker) {\r\n    marker.setAnimation('AMAP_ANIMATION_BOUNCE')\r\n    setTimeout(() => {\r\n      marker.setAnimation('AMAP_ANIMATION_NONE')\r\n    }, 3000)\r\n  }\r\n  \r\n  closeAnomalyDetail()\r\n}\r\n\r\nfunction exportAnomalies() {\r\n  if (anomalies.value.length === 0) return\r\n  \r\n  const dataStr = JSON.stringify(anomalies.value, null, 2)\r\n  const dataBlob = new Blob([dataStr], { type: 'application/json' })\r\n  const url = URL.createObjectURL(dataBlob)\r\n  \r\n  const link = document.createElement('a')\r\n  link.href = url\r\n  link.download = `anomalies_${Date.now()}.json`\r\n  link.click()\r\n  \r\n  URL.revokeObjectURL(url)\r\n}\r\n\r\nfunction exportSingleAnomaly(anomaly) {\r\n  const dataStr = JSON.stringify(anomaly, null, 2)\r\n  const dataBlob = new Blob([dataStr], { type: 'application/json' })\r\n  const url = URL.createObjectURL(dataBlob)\r\n  \r\n  const link = document.createElement('a')\r\n  link.href = url\r\n  link.download = `anomaly_${anomaly.id}.json`\r\n  link.click()\r\n  \r\n  URL.revokeObjectURL(url)\r\n}\r\n\r\n// 辅助函数\r\nfunction getSeverityIndicator(severity) {\r\n  const classes = {\r\n    'high': 'bg-red-500',\r\n    'medium': 'bg-orange-500',\r\n    'low': 'bg-yellow-500'\r\n  }\r\n  return classes[severity] || 'bg-gray-500'\r\n}\r\n\r\nfunction getSeverityBadge(severity) {\r\n  const classes = {\r\n    'high': 'bg-red-500/20 text-red-400 border border-red-500/30',\r\n    'medium': 'bg-orange-500/20 text-orange-400 border border-orange-500/30',\r\n    'low': 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30'\r\n  }\r\n  return classes[severity] || 'bg-gray-500/20 text-gray-400 border border-gray-500/30'\r\n}\r\n\r\nfunction getSeverityText(severity) {\r\n  const texts = {\r\n    'high': '高危',\r\n    'medium': '中危',\r\n    'low': '低危'\r\n  }\r\n  return texts[severity] || '未知'\r\n}\r\n\r\nfunction getTypeText(type) {\r\n  const typeMap = anomalyTypes.value.reduce((map, t) => {\r\n    map[t.type] = t.name\r\n    return map\r\n  }, {})\r\n  return typeMap[type] || type\r\n}\r\n\r\nfunction formatTime(timestamp) {\r\n  return new Date(timestamp * 1000).toLocaleString('zh-CN')\r\n}\r\n\r\n// 监听模式变化\r\nwatch(isRealTimeMode, (newVal) => {\r\n  if (!newVal && realtimeTimer) {\r\n    clearInterval(realtimeTimer)\r\n    realtimeTimer = null\r\n  }\r\n})\r\n\r\nwatch(showHeatmap, () => {\r\n  displayAnomaliesOnMap()\r\n})\r\n\r\n// 生命周期\r\nonMounted(async () => {\r\n  await loadAnomalyTypes()\r\n  \r\n  setTimeout(() => {\r\n    initMap()\r\n  }, 500)\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (realtimeTimer) {\r\n    clearInterval(realtimeTimer)\r\n  }\r\n  \r\n  if (map) {\r\n    map.destroy()\r\n  }\r\n})\r\n</script> \r\n\r\n<style scoped>\r\n.anomaly-detection-container {\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n}\r\n\r\n.btn-tech {\r\n  padding: 8px 16px;\r\n  background: linear-gradient(135deg, #dc2626, #ef4444);\r\n  border: none;\r\n  border-radius: 6px;\r\n  color: white;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-tech:hover:not(:disabled) {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(220, 38, 38, 0.4);\r\n}\r\n\r\n.btn-tech:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.btn-tech-secondary {\r\n  padding: 8px 16px;\r\n  background: rgba(75, 85, 99, 0.8);\r\n  border: 1px solid rgba(156, 163, 175, 0.3);\r\n  border-radius: 6px;\r\n  color: white;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-tech-secondary:hover {\r\n  background: rgba(107, 114, 128, 0.8);\r\n}\r\n\r\n.animate-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}