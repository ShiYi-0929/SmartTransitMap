{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthNavbar from '@/components/AuthNavbar.vue';\nimport AuthForm from '@/components/AuthForm.vue';\nimport AuthFooter from '@/components/AuthFooter.vue';\nimport AuthSlide from '@/components/AuthSlide.vue'; // Assuming AuthSlide component exists\nimport { sendVerificationCode, verifyCode, login, register, resetPassword } from '@/api/user.js';\n\n// Importing images\nimport bg1 from '@/assets/bg1.png';\nimport bg2 from '@/assets/bg2.png';\nimport bg3 from '@/assets/bg3.png';\nimport bg4 from '@/assets/bg4.png';\nimport bg5 from '@/assets/bg5.png';\nimport accountIcon from '@/assets/account-icon.png';\nimport qrcode from '@/assets/qrcode-icon.png'; // Assuming this is the correct qrcode image\n\nexport default {\n  components: {\n    AuthNavbar,\n    AuthForm,\n    AuthFooter,\n    AuthSlide\n  },\n  data() {\n    return {\n      // 当前显示的视图\n      currentView: 'login',\n      // 登录相关数据\n      username: '',\n      password: '',\n      passwordVisible: false,\n      // 暂存注册数据\n      registrationData: {\n        username: '',\n        password: ''\n      },\n      // 验证码相关数据\n      captchaInput: '',\n      generatedCaptchaText: '',\n      // 注册相关数据\n      confirmPassword: '',\n      confirmPasswordVisible: false,\n      // 绑定账号相关数据\n      account: '',\n      agreeTerms: false,\n      // 找回密码相关数据\n      email: '',\n      newPassword: '',\n      newPasswordVisible: false,\n      confirmNewPassword: '',\n      confirmNewPasswordVisible: false,\n      // 倒计时相关\n      countdown: 0,\n      // 模态框相关\n      showTermsModal: false,\n      showPrivacyModal: false,\n      // 加载状态\n      isLoading: false,\n      accountIcon: accountIcon,\n      qrcode: qrcode,\n      // 轮播图图片\n      slideImages: [bg1, bg2, bg3, bg4],\n      backgroundImages: {\n        bg1: bg1,\n        bg2: bg2,\n        bg3: bg3,\n        bg4: bg4,\n        bg5: bg5,\n        bg6: bg1,\n        // default\n        bg7: bg2,\n        // default\n        bg8: bg3 // default\n      }\n    };\n  },\n  computed: {\n    // 表单验证相关计算属性\n    isLoginFormValid() {\n      return this.username && this.password && this.captchaInput;\n    },\n    isRegisterFormValid() {\n      return this.username && this.password && this.confirmPassword && this.password === this.confirmPassword && this.captchaInput\n      // 移除了 this.agreeTerms 验证\n      ;\n    },\n    isBindAccountFormValid() {\n      return this.account && this.captchaInput && this.agreeTerms;\n    },\n    isFindPasswordByEmailFormValid() {\n      return this.email && this.captchaInput && this.newPassword && this.confirmNewPassword && this.newPassword === this.confirmNewPassword;\n    }\n  },\n  methods: {\n    // 导航到指定视图\n    navigateTo(view) {\n      this.currentView = view;\n      // 重置表单数据\n      this.resetFormData();\n      // 如果是登录或注册视图，生成验证码\n      if (view === 'login' || view === 'register') {\n        this.$nextTick(() => {\n          this.generateCaptcha();\n        });\n      }\n    },\n    // 重置表单数据\n    resetFormData() {\n      this.username = '';\n      this.password = '';\n      this.passwordVisible = false;\n      this.captchaInput = '';\n      this.generatedCaptchaText = '';\n      this.confirmPassword = '';\n      this.confirmPasswordVisible = false;\n      this.account = '';\n      this.agreeTerms = false;\n      this.email = '';\n      this.newPassword = '';\n      this.newPasswordVisible = false;\n      this.confirmNewPassword = '';\n      this.confirmNewPasswordVisible = false;\n      this.countdown = 0;\n      this.isLoading = false;\n    },\n    // 生成验证码\n    generateCaptcha() {\n      const canvas = this.$refs.captchaCanvas;\n      if (!canvas) {\n        this.$nextTick(this.generateCaptcha);\n        return;\n      }\n      // Set canvas resolution to match its display size to avoid distortion\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      const ctx = canvas.getContext('2d');\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      let captchaText = '';\n      for (let i = 0; i < 4; i++) {\n        captchaText += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      this.generatedCaptchaText = captchaText;\n\n      // Clear and draw background\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = '#f0f0f0';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw text\n      ctx.font = 'bold 28px Arial'; // Adjusted font size for better fit\n      ctx.fillStyle = '#333';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(captchaText, canvas.width / 2, canvas.height / 2 + 2); // Adjust vertical alignment\n\n      // Add more and longer noise lines\n      for (let i = 0; i < 8; i++) {\n        // Increased from 3 to 8 lines\n        ctx.strokeStyle = `rgb(${Math.random() * 200},${Math.random() * 200},${Math.random() * 200})`;\n        ctx.lineWidth = Math.random() * 1.5;\n        ctx.beginPath();\n        // Allow lines to start and end slightly off-canvas to appear longer\n        ctx.moveTo(Math.random() * canvas.width * 1.4 - canvas.width * 0.2, Math.random() * canvas.height);\n        ctx.lineTo(Math.random() * canvas.width * 1.4 - canvas.width * 0.2, Math.random() * canvas.height);\n        ctx.stroke();\n      }\n    },\n    // 切换密码可见性\n    togglePasswordVisibility() {\n      this.passwordVisible = !this.passwordVisible;\n    },\n    toggleConfirmPasswordVisibility() {\n      this.confirmPasswordVisible = !this.confirmPasswordVisible;\n    },\n    toggleNewPasswordVisibility() {\n      this.newPasswordVisible = !this.newPasswordVisible;\n    },\n    toggleConfirmNewPasswordVisibility() {\n      this.confirmNewPasswordVisible = !this.confirmNewPasswordVisible;\n    },\n    // 验证验证码\n    validateCaptcha() {\n      if (this.captchaInput.toLowerCase() !== this.generatedCaptchaText.toLowerCase()) {\n        alert('验证码不正确!');\n        this.generateCaptcha();\n        this.captchaInput = '';\n        return false;\n      }\n      return true;\n    },\n    // 获取验证码（短信/邮件）\n    async getCaptcha() {\n      // 标记为异步函数\n      if (this.countdown > 0) return;\n      let isValid = false;\n      let targetAccount = '';\n      let isEmail = false;\n\n      // 确定目标账户和类型\n      if (this.currentView === 'captcha-login' || this.currentView === 'bind-account') {\n        targetAccount = this.account;\n      } else if (this.currentView === 'find-password-by-email') {\n        targetAccount = this.email;\n      }\n\n      // 验证格式\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (emailRegex.test(targetAccount)) {\n        isEmail = true;\n        isValid = true;\n      } else if (phoneRegex.test(targetAccount)) {\n        // 在这里可以添加发送短信验证码的逻辑 (如果需要)\n        alert('短信功能暂未实现，请输入邮箱获取验证码。');\n        return;\n      } else {\n        alert('请输入正确的手机号或邮箱');\n        return;\n      }\n      if (!isValid) return;\n\n      // 如果是邮箱，调用后端API\n      if (isEmail) {\n        try {\n          // 调用API发送邮件\n          const response = await sendVerificationCode(targetAccount);\n          alert(response.data.message || '验证码已发送，请查收。');\n\n          // 开始倒计时\n          this.countdown = 60;\n          const timer = setInterval(() => {\n            this.countdown--;\n            if (this.countdown <= 0) clearInterval(timer);\n          }, 1000);\n        } catch (error) {\n          console.error('发送验证码失败:', error);\n          const detail = error.response?.data?.detail || '发送失败，请稍后重试。';\n          alert(`发送验证码失败: ${detail}`);\n          return; // 发送失败，不开始倒计时\n        }\n      }\n    },\n    // 验证账号（手机号或邮箱格式）\n    validateAccount() {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (phoneRegex.test(this.account)) {\n        return true;\n      } else if (emailRegex.test(this.account)) {\n        return true;\n      } else {\n        alert('请输入正确的手机号或邮箱');\n        return false;\n      }\n    },\n    // 处理登录\n    async handleLogin() {\n      if (!this.validateCaptcha()) return;\n      if (!this.isLoginFormValid) {\n        alert('请输入用户名、密码和验证码。');\n        return;\n      }\n      try {\n        const response = await login(this.username, this.password);\n        const token = response.data.access_token;\n        localStorage.setItem('user-token', token);\n        alert('登录成功!');\n        this.$router.push('/home');\n      } catch (error) {\n        const detail = error.response?.data?.detail || '登录失败，请检查您的凭据。';\n        alert(`登录失败: ${detail}`);\n        this.generateCaptcha(); // 刷新验证码\n        this.captchaInput = '';\n      }\n    },\n    // 处理验证码登录\n    async handleCaptchaLogin() {\n      try {\n        await verifyCode(this.account, this.captchaInput);\n        // 验证通过后，再执行登录逻辑\n        alert('登录成功!');\n        localStorage.setItem('user-token', 'your-secret-token');\n        this.$router.push('/home');\n      } catch (error) {\n        const detail = error.response?.data?.detail || '验证失败，请重试。';\n        alert(detail);\n      }\n    },\n    // 处理注册\n    handleRegister() {\n      if (!this.isRegisterFormValid) {\n        alert('请确保所有字段都已正确填写，且两次输入的密码一致。');\n        return;\n      }\n      if (this.validateCaptcha()) {\n        // 暂存用户名和密码\n        this.registrationData.username = this.username;\n        this.registrationData.password = this.password;\n        this.navigateTo('bind-account');\n      }\n    },\n    // 处理账号绑定 (现在是注册的最后一步)\n    async handleBind() {\n      if (!this.validateForm()) return;\n      this.isLoading = true;\n      try {\n        // 步骤1：验证邮箱验证码\n        await verifyCode(this.account, this.captchaInput);\n\n        // 步骤2：验证码通过后，提交注册信息\n        // 从暂存数据中获取用户名和密码\n        const response = await register(this.registrationData.username, this.registrationData.password, this.account);\n        alert(`${response.data.message}！现在可以用新账号登录了。`);\n        this.navigateTo('login'); // 跳转到登录页面\n      } catch (error) {\n        const detail = error.response?.data?.detail || '操作失败，请重试。';\n        alert(`注册失败: ${detail}`);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    // 表单验证\n    validateForm() {\n      if (!this.account) {\n        alert('请输入手机号或邮箱');\n        return false;\n      }\n      if (!this.captchaInput) {\n        alert('请输入验证码');\n        return false;\n      }\n      if (!this.agreeTerms) {\n        alert('请同意用户协议和隐私政策');\n        return false;\n      }\n      return true;\n    },\n    // 显示用户协议\n    showTerms() {\n      this.showTermsModal = true;\n    },\n    // 显示隐私政策\n    showPrivacy() {\n      this.showPrivacyModal = true;\n    },\n    // 邮箱找回密码\n    async resetPasswordByEmail() {\n      if (!this.isFindPasswordByEmailFormValid) {\n        alert('请确保所有字段都已正确填写，且两次输入的新密码一致。');\n        return;\n      }\n      try {\n        // 调用后端的重置密码接口\n        const response = await resetPassword(this.email, this.captchaInput, this.newPassword);\n        alert(response.data.message || '密码重置成功！');\n        this.navigateTo('login');\n      } catch (error) {\n        const detail = error.response?.data?.detail || '操作失败，请重试。';\n        alert(`密码重置失败: ${detail}`);\n      }\n    },\n    alertNotAvailable() {\n      alert('该功能暂未开放');\n    },\n    // 设置认证页面的背景样式\n    authPageStyle(bgName) {\n      const bgImage = this.backgroundImages[bgName] || this.backgroundImages['bg5'];\n      return {\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      };\n    }\n  },\n  mounted() {\n    // 初始化验证码\n    this.generateCaptcha();\n  },\n  watch: {\n    // 当视图切换时，重新生成验证码\n    currentView(newView) {\n      if (newView === 'login' || newView === 'register') {\n        // 从这里移除了 'find-password'\n        this.$nextTick(() => {\n          this.generateCaptcha();\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthNavbar","AuthForm","AuthFooter","AuthSlide","sendVerificationCode","verifyCode","login","register","resetPassword","bg1","bg2","bg3","bg4","bg5","accountIcon","qrcode","components","data","currentView","username","password","passwordVisible","registrationData","captchaInput","generatedCaptchaText","confirmPassword","confirmPasswordVisible","account","agreeTerms","email","newPassword","newPasswordVisible","confirmNewPassword","confirmNewPasswordVisible","countdown","showTermsModal","showPrivacyModal","isLoading","slideImages","backgroundImages","bg6","bg7","bg8","computed","isLoginFormValid","isRegisterFormValid","isBindAccountFormValid","isFindPasswordByEmailFormValid","methods","navigateTo","view","resetFormData","$nextTick","generateCaptcha","canvas","$refs","captchaCanvas","width","offsetWidth","height","offsetHeight","ctx","getContext","chars","captchaText","i","charAt","Math","floor","random","length","clearRect","fillStyle","fillRect","font","textAlign","textBaseline","fillText","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","togglePasswordVisibility","toggleConfirmPasswordVisibility","toggleNewPasswordVisibility","toggleConfirmNewPasswordVisibility","validateCaptcha","toLowerCase","alert","getCaptcha","isValid","targetAccount","isEmail","phoneRegex","emailRegex","test","response","message","timer","setInterval","clearInterval","error","console","detail","validateAccount","handleLogin","token","access_token","localStorage","setItem","$router","push","handleCaptchaLogin","handleRegister","handleBind","validateForm","showTerms","showPrivacy","resetPasswordByEmail","alertNotAvailable","authPageStyle","bgName","bgImage","backgroundImage","backgroundSize","backgroundPosition","mounted","watch","newView"],"sources":["E:\\hhh\\frontend\\src\\pages\\AllViews.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-views-container\">\r\n    <!-- AuthLogin View -->\r\n    <div v-if=\"currentView === 'login'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>账号密码登录</h2>\r\n                <div class=\"login-options\">\r\n                  <span @click=\"navigateTo('captcha-login')\">验证码登录</span>\r\n                  <span @click=\"alertNotAvailable\">扫码登录</span>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #fields>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-user\"></i>\r\n                  <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" class=\"input-field\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                  <input :type=\"passwordVisible ? 'text' : 'password'\" v-model=\"password\" placeholder=\"密码\" class=\"input-field\" />\r\n                  <i class=\"fa\" :class=\"passwordVisible ? 'fa-eye-slash' : 'fa-eye'\" @click=\"togglePasswordVisibility\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group captcha-group\">\r\n                <canvas ref=\"captchaCanvas\" @click=\"generateCaptcha\" class=\"captcha-canvas\"></canvas>\r\n                <input type=\"text\" v-model=\"captchaInput\" placeholder=\"请输入验证码\" class=\"input-field captcha-input-field\" />\r\n                <a href=\"#\" @click.prevent=\"generateCaptcha\">看不清？换一张</a>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <button @click=\"handleLogin\" :disabled=\"!isLoginFormValid\">登录</button>\r\n              <div class=\"extra-options\">\r\n                <a href=\"#\" @click.prevent=\"navigateTo('find-password')\">忘记密码？</a>\r\n                <a href=\"#\" @click.prevent=\"navigateTo('register')\">立即注册</a>\r\n              </div>\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- CaptchaLogin View -->\r\n    <div v-if=\"currentView === 'captcha-login'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>验证码登录</h2>\r\n                <div class=\"login-options\">\r\n                  <span @click=\"navigateTo('login')\">密码登录</span>\r\n                  <span @click=\"alertNotAvailable\">扫码登录</span>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #fields>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-phone\"></i>\r\n                  <input type=\"text\" v-model=\"account\" placeholder=\"邮箱\" class=\"input-field\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group captcha-group\">\r\n                <input type=\"text\" v-model=\"captchaInput\" placeholder=\"请输入验证码\" class=\"input-field captcha-input-field\" />\r\n                <button :disabled=\"countdown > 0 || !account\" @click=\"getCaptcha\" class=\"get-captcha-btn\">\r\n                  {{ countdown > 0 ? `${countdown}秒后重试` : '获取验证码' }}\r\n                </button>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <button @click=\"handleCaptchaLogin\" :disabled=\"!account || !captchaInput\">登录</button>\r\n              <div class=\"extra-options\">\r\n                <a href=\"#\" @click.prevent=\"navigateTo('find-password')\">忘记密码？</a>\r\n                <a href=\"#\" @click.prevent=\"navigateTo('register')\">立即注册</a>\r\n              </div>\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- QrCodeLogin View - REMOVED -->\r\n\r\n    <!-- Register View -->\r\n    <div v-if=\"currentView === 'register'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>新用户注册</h2>\r\n                <span @click=\"navigateTo('login')\" class=\"link-style\">已有账号？立即登录</span>\r\n              </div>\r\n            </template>\r\n            <template #fields>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-user\"></i>\r\n                  <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" class=\"input-field\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                  <input :type=\"passwordVisible ? 'text' : 'password'\" v-model=\"password\" placeholder=\"密码\" class=\"input-field\" />\r\n                  <i class=\"fa\" :class=\"passwordVisible ? 'fa-eye-slash' : 'fa-eye'\" @click=\"togglePasswordVisibility\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                  <input :type=\"confirmPasswordVisible ? 'text' : 'password'\" v-model=\"confirmPassword\" placeholder=\"确认密码\" class=\"input-field\" />\r\n                  <i class=\"fa\" :class=\"confirmPasswordVisible ? 'fa-eye-slash' : 'fa-eye'\" @click=\"toggleConfirmPasswordVisibility\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group captcha-group\">\r\n                <canvas ref=\"captchaCanvas\" @click=\"generateCaptcha\" class=\"captcha-canvas\"></canvas>\r\n                <input type=\"text\" v-model=\"captchaInput\" placeholder=\"请输入验证码\" class=\"input-field captcha-input-field\" />\r\n                <a href=\"#\" @click.prevent=\"generateCaptcha\">看不清？换一张</a>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <button @click=\"handleRegister\" :disabled=\"!isRegisterFormValid\">注册</button>\r\n              <!-- 移除了这里的 \"extra-options\" 和同意协议的复选框 -->\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- BindAccount View -->\r\n    <div v-if=\"currentView === 'bind-account'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>账号绑定</h2>\r\n                <span @click=\"navigateTo('login')\">已有账号？立即登录</span>\r\n              </div>\r\n            </template>\r\n            <template #fields>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-phone\"></i>\r\n                  <input type=\"text\" v-model=\"account\" placeholder=\"请输入邮箱\" class=\"input-field\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group captcha-group\">\r\n                <input type=\"text\" v-model=\"captchaInput\" placeholder=\"请输入验证码\" class=\"input-field captcha-input-field\" />\r\n                <button :disabled=\"countdown > 0 || !account\" @click=\"getCaptcha\" class=\"get-captcha-btn\">\r\n                  {{ countdown > 0 ? `${countdown}秒后重试` : '获取验证码' }}\r\n                </button>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <button @click=\"handleBind\" :disabled=\"isLoading\">\r\n                {{ isLoading ? '绑定中...' : '立即绑定' }}\r\n              </button>\r\n              <div class=\"extra-options\">\r\n                <label class=\"checkbox-label\">\r\n                  <input type=\"checkbox\" v-model=\"agreeTerms\" />\r\n                  <span class=\"checkbox-custom\"></span>\r\n                  <span>我已阅读并同意 <a href=\"#\" @click.prevent=\"showTerms\">用户协议</a> 和 <a href=\"#\" @click.prevent=\"showPrivacy\">隐私政策</a></span>\r\n                </label>\r\n              </div>\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- FindPassword View -->\r\n    <div v-if=\"currentView === 'find-password'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>找回密码</h2>\r\n                <span @click=\"navigateTo('login')\" class=\"link-style\">返回登录</span>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <div class=\"reset-options\">\r\n                <button @click=\"navigateTo('find-password-by-email')\">\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span>邮箱找回</span>\r\n                </button>\r\n              </div>\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- FindPasswordByEmail View -->\r\n    <div v-if=\"currentView === 'find-password-by-email'\">\r\n      <div class=\"auth-page\" :style=\"authPageStyle('bg5')\">\r\n        <AuthNavbar />\r\n        <div class=\"auth-content\">\r\n          <AuthSlide :images=\"slideImages\" />\r\n          <AuthForm>\r\n            <template #title>\r\n              <div class=\"title-container\">\r\n                <h2>邮箱找回密码</h2>\r\n                <span @click=\"navigateTo('find-password')\" class=\"link-style\">返回选择</span>\r\n              </div>\r\n            </template>\r\n            <template #fields>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <input type=\"text\" v-model=\"email\" placeholder=\"请输入注册邮箱\" class=\"input-field\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group captcha-group\">\r\n                <input type=\"text\" v-model=\"captchaInput\" placeholder=\"请输入验证码\" class=\"input-field captcha-input-field\" />\r\n                <button :disabled=\"countdown > 0 || !email\" @click=\"getCaptcha\" class=\"get-captcha-btn\">\r\n                  {{ countdown > 0 ? `${countdown}秒后重试` : '获取验证码' }}\r\n                </button>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                  <input :type=\"newPasswordVisible ? 'text' : 'password'\" v-model=\"newPassword\" placeholder=\"请输入新密码\" class=\"input-field\" />\r\n                  <i class=\"fa\" :class=\"newPasswordVisible ? 'fa-eye-slash' : 'fa-eye'\" @click=\"toggleNewPasswordVisibility\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <div class=\"input-container\">\r\n                  <i class=\"fa fa-lock\"></i>\r\n                  <input :type=\"confirmNewPasswordVisible ? 'text' : 'password'\" v-model=\"confirmNewPassword\" placeholder=\"请确认新密码\" class=\"input-field\" />\r\n                  <i class=\"fa\" :class=\"confirmNewPasswordVisible ? 'fa-eye-slash' : 'fa-eye'\" @click=\"toggleConfirmNewPasswordVisibility\"></i>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #actions>\r\n              <button @click=\"resetPasswordByEmail\">确认重置</button>\r\n            </template>\r\n          </AuthForm>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n    <!-- Terms Modal -->\r\n    <div v-if=\"showTermsModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h3>用户协议</h3>\r\n          <button @click=\"showTermsModal = false\">×</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"terms-content\">\r\n            <h4>1. 服务条款的接受</h4>\r\n            <p>当您使用本网站服务时，即表示您同意接受本服务条款的所有条款和条件。如果您不同意本服务条款的任何部分，请勿使用本网站服务。</p>\r\n            <h4>2. 服务说明</h4>\r\n            <p>本网站通过互联网向用户提供各种服务，包括但不限于信息发布、在线交流、电子商务等。本网站保留随时更改或中断服务而不需通知用户的权利。本网站不保证服务不会中断，对服务的及时性、安全性、准确性也不作担保。</p>\r\n            <h4>3. 用户行为</h4>\r\n            <p>用户在使用本网站服务时必须遵守中华人民共和国的相关法律法规，不得利用本网站服务进行任何违法或不当的行为，包括但不限于：发布虚假信息、侵犯他人知识产权、传播淫秽色情内容、进行诈骗活动等。</p>\r\n            <h4>4. 隐私政策</h4>\r\n            <p>本网站尊重用户的隐私，将按照本网站的隐私政策收集、使用和保护用户的个人信息。用户在使用本网站服务时，即表示同意本网站按照本隐私政策收集、使用和保护您的个人信息。</p>\r\n            <h4>5. 免责声明</h4>\r\n            <p>本网站对因不可抗力、黑客攻击、系统故障等原因导致的服务中断或用户损失不承担责任。本网站对用户发布的内容的真实性、准确性、合法性不承担任何责任。用户对自己在本网站上的行为承担全部法律责任。</p>\r\n            <h4>6. 版权声明</h4>\r\n            <p>本网站上的所有内容，包括但不限于文字、图片、音频、视频等，均受版权保护。未经本网站书面许可，任何单位或个人不得复制、传播、修改本网站上的任何内容。</p>\r\n            <h4>7. 服务条款的修改</h4>\r\n            <p>本网站有权随时修改本服务条款，并在本网站上公布。用户在使用本网站服务时，应随时关注本服务条款的修改情况。如果用户继续使用本网站服务，即表示同意接受修改后的服务条款。</p>\r\n            <h4>8. 法律适用和管辖</h4>\r\n            <p>本服务条款的解释、适用和争议的解决均适用中华人民共和国的法律。如发生争议，双方应协商解决；协商不成的，任何一方均有权向本网站所在地的人民法院提起诉讼。</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"showTermsModal = false\">我已阅读并同意</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Privacy Modal -->\r\n    <div v-if=\"showPrivacyModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h3>隐私政策</h3>\r\n          <button @click=\"showPrivacyModal = false\">×</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"privacy-content\">\r\n            <h4>1. 引言</h4>\r\n            <p>本网站尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本网站会按照本隐私政策的规定收集、使用和保护您的个人信息。请在使用本网站服务前仔细阅读本隐私政策，特别是关于我们收集哪些信息、如何使用这些信息、向谁披露这些信息以及您对这些信息享有哪些权利的条款。如果您不同意本隐私政策的任何内容，您应立即停止使用本网站服务。当您使用本网站的服务时，即表示您同意我们按照本隐私政策规定收集、使用、存储和披露您的个人信息。</p>\r\n            <h4>2. 适用范围</h4>\r\n            <p>(a) 在您注册本网站账号时，您根据本网站要求提供的个人注册信息；</p>\r\n            <p>(b) 在您使用本网站网络服务，或访问本网站平台网页时，本网站自动接收并记录的您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；</p>\r\n            <p>(c) 本网站通过合法途径从商业伙伴处取得的用户个人数据。</p>\r\n            <h4>3. 信息收集和使用</h4>\r\n            <p>本网站收集您的个人信息的主要目的是为您提供个性化的服务，包括但不限于：</p>\r\n            <p>(a) 帮助您注册成为本网站的用户；</p>\r\n            <p>(b) 向您提供您需要的服务；</p>\r\n            <p>(c) 理解您的需求，改进我们的服务；</p>\r\n            <p>(d) 向您发送产品和服务信息，或与本网站业务相关的商业信息；</p>\r\n            <p>(e) 允许您参与我们的调查、竞赛和促销活动；</p>\r\n            <p>(f) 其他符合法律规定和行业惯例的用途。</p>\r\n            <h4>4. 信息披露</h4>\r\n            <p>在以下情况下，本网站可能会披露您的个人信息：</p>\r\n            <p>(a) 获得您的明确授权；</p>\r\n            <p>(b) 根据法律、法规、司法程序或政府主管部门的强制性要求；</p>\r\n            <p>(c) 在紧急情况下，为维护本网站、本网站用户或公众的合法权益；</p>\r\n            <p>(d) 与本网站的关联公司、合作伙伴或服务提供商分享，以提供您所请求的服务；</p>\r\n            <p>(e) 在本网站发生合并、收购、重组、破产清算等情况时，如涉及到个人信息的转让，我们会要求新的持有您个人信息的公司、组织继续受本隐私政策的约束，否则我们将要求该公司、组织重新向您征求授权同意。</p>\r\n            <h4>5. 信息存储和保护</h4>\r\n            <p>本网站采用行业标准的安全技术和程序来保护您的个人信息不被未经授权的访问、使用或泄露。然而，请注意，没有任何一种互联网传输方式或电子存储方式是100%安全的，因此我们不能保证您的个人信息绝对安全。如果发生信息安全事件，我们将按照相关法律法规的要求及时通知您并采取相应的措施。</p>\r\n            <h4>6. 用户权利</h4>\r\n            <p>您有权访问、更正和删除您的个人信息，以及限制或反对某些个人信息处理活动。您也有权撤回您之前给予的同意。如果您需要行使这些权利，请通过本网站提供的联系方式与我们联系。我们将在合理的时间内响应您的请求。</p>\r\n            <h4>7. 隐私政策的更新</h4>\r\n            <p>本网站可能会不时更新本隐私政策。当我们对隐私政策进行重大变更时，我们将通过在本网站上发布新的隐私政策或其他适当的方式通知您。请定期查看本隐私政策，以了解我们如何收集、使用和保护您的信息。您继续使用本网站服务即表示您同意接受更新后的隐私政策的约束。</p>\r\n            <h4>8. 联系我们</h4>\r\n            <p>如果您对本隐私政策有任何疑问、意见或建议，请通过本网站提供的联系方式与我们联系。我们将尽快回复您的咨询。</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"showPrivacyModal = false\">我已阅读并同意</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AuthNavbar from '@/components/AuthNavbar.vue';\r\nimport AuthForm from '@/components/AuthForm.vue';\r\nimport AuthFooter from '@/components/AuthFooter.vue';\r\nimport AuthSlide from '@/components/AuthSlide.vue'; // Assuming AuthSlide component exists\r\nimport { sendVerificationCode, verifyCode, login, register, resetPassword } from '@/api/user.js';\r\n\r\n// Importing images\r\nimport bg1 from '@/assets/bg1.png';\r\nimport bg2 from '@/assets/bg2.png';\r\nimport bg3 from '@/assets/bg3.png';\r\nimport bg4 from '@/assets/bg4.png';\r\nimport bg5 from '@/assets/bg5.png';\r\nimport accountIcon from '@/assets/account-icon.png';\r\nimport qrcode from '@/assets/qrcode-icon.png'; // Assuming this is the correct qrcode image\r\n\r\nexport default {\r\n  components: {\r\n    AuthNavbar,\r\n    AuthForm,\r\n    AuthFooter,\r\n    AuthSlide\r\n  },\r\n  data() {\r\n    return {\r\n      // 当前显示的视图\r\n      currentView: 'login',\r\n      // 登录相关数据\r\n      username: '',\r\n      password: '',\r\n      passwordVisible: false,\r\n      // 暂存注册数据\r\n      registrationData: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      // 验证码相关数据\r\n      captchaInput: '',\r\n      generatedCaptchaText: '',\r\n      // 注册相关数据\r\n      confirmPassword: '',\r\n      confirmPasswordVisible: false,\r\n      // 绑定账号相关数据\r\n      account: '',\r\n      agreeTerms: false,\r\n      // 找回密码相关数据\r\n      email: '',\r\n      newPassword: '',\r\n      newPasswordVisible: false,\r\n      confirmNewPassword: '',\r\n      confirmNewPasswordVisible: false,\r\n      // 倒计时相关\r\n      countdown: 0,\r\n      // 模态框相关\r\n      showTermsModal: false,\r\n      showPrivacyModal: false,\r\n      // 加载状态\r\n      isLoading: false,\r\n      accountIcon: accountIcon,\r\n      qrcode: qrcode,\r\n      // 轮播图图片\r\n      slideImages: [\r\n        bg1,\r\n        bg2,\r\n        bg3,\r\n        bg4\r\n      ],\r\n      backgroundImages: {\r\n        bg1: bg1,\r\n        bg2: bg2,\r\n        bg3: bg3,\r\n        bg4: bg4,\r\n        bg5: bg5,\r\n        bg6: bg1, // default\r\n        bg7: bg2, // default\r\n        bg8: bg3  // default\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    // 表单验证相关计算属性\r\n    isLoginFormValid() {\r\n      return this.username && this.password && this.captchaInput;\r\n    },\r\n    isRegisterFormValid() {\r\n      return (\r\n        this.username &&\r\n        this.password &&\r\n        this.confirmPassword &&\r\n        this.password === this.confirmPassword &&\r\n        this.captchaInput\r\n        // 移除了 this.agreeTerms 验证\r\n      );\r\n    },\r\n    isBindAccountFormValid() {\r\n      return this.account && this.captchaInput && this.agreeTerms;\r\n    },\r\n    isFindPasswordByEmailFormValid() {\r\n      return (\r\n        this.email &&\r\n        this.captchaInput &&\r\n        this.newPassword &&\r\n        this.confirmNewPassword &&\r\n        this.newPassword === this.confirmNewPassword\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    // 导航到指定视图\r\n    navigateTo(view) {\r\n      this.currentView = view;\r\n      // 重置表单数据\r\n      this.resetFormData();\r\n      // 如果是登录或注册视图，生成验证码\r\n      if (view === 'login' || view === 'register') {\r\n        this.$nextTick(() => {\r\n          this.generateCaptcha();\r\n        });\r\n      }\r\n    },\r\n    // 重置表单数据\r\n    resetFormData() {\r\n      this.username = '';\r\n      this.password = '';\r\n      this.passwordVisible = false;\r\n      this.captchaInput = '';\r\n      this.generatedCaptchaText = '';\r\n      this.confirmPassword = '';\r\n      this.confirmPasswordVisible = false;\r\n      this.account = '';\r\n      this.agreeTerms = false;\r\n      this.email = '';\r\n      this.newPassword = '';\r\n      this.newPasswordVisible = false;\r\n      this.confirmNewPassword = '';\r\n      this.confirmNewPasswordVisible = false;\r\n      this.countdown = 0;\r\n      this.isLoading = false;\r\n    },\r\n    // 生成验证码\r\n    generateCaptcha() {\r\n      const canvas = this.$refs.captchaCanvas;\r\n      if (!canvas) {\r\n        this.$nextTick(this.generateCaptcha);\r\n        return;\r\n      }\r\n      // Set canvas resolution to match its display size to avoid distortion\r\n      canvas.width = canvas.offsetWidth;\r\n      canvas.height = canvas.offsetHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      let captchaText = '';\r\n      for (let i = 0; i < 4; i++) {\r\n        captchaText += chars.charAt(Math.floor(Math.random() * chars.length));\r\n      }\r\n      this.generatedCaptchaText = captchaText;\r\n\r\n      // Clear and draw background\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillStyle = '#f0f0f0';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw text\r\n      ctx.font = 'bold 28px Arial'; // Adjusted font size for better fit\r\n      ctx.fillStyle = '#333';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText(captchaText, canvas.width / 2, canvas.height / 2 + 2); // Adjust vertical alignment\r\n\r\n      // Add more and longer noise lines\r\n      for (let i = 0; i < 8; i++) { // Increased from 3 to 8 lines\r\n        ctx.strokeStyle = `rgb(${Math.random()*200},${Math.random()*200},${Math.random()*200})`;\r\n        ctx.lineWidth = Math.random() * 1.5;\r\n        ctx.beginPath();\r\n        // Allow lines to start and end slightly off-canvas to appear longer\r\n        ctx.moveTo(Math.random() * canvas.width * 1.4 - canvas.width * 0.2, Math.random() * canvas.height);\r\n        ctx.lineTo(Math.random() * canvas.width * 1.4 - canvas.width * 0.2, Math.random() * canvas.height);\r\n        ctx.stroke();\r\n      }\r\n    },\r\n    // 切换密码可见性\r\n    togglePasswordVisibility() {\r\n      this.passwordVisible = !this.passwordVisible;\r\n    },\r\n    toggleConfirmPasswordVisibility() {\r\n      this.confirmPasswordVisible = !this.confirmPasswordVisible;\r\n    },\r\n    toggleNewPasswordVisibility() {\r\n      this.newPasswordVisible = !this.newPasswordVisible;\r\n    },\r\n    toggleConfirmNewPasswordVisibility() {\r\n      this.confirmNewPasswordVisible = !this.confirmNewPasswordVisible;\r\n    },\r\n    // 验证验证码\r\n    validateCaptcha() {\r\n      if (this.captchaInput.toLowerCase() !== this.generatedCaptchaText.toLowerCase()) {\r\n        alert('验证码不正确!');\r\n        this.generateCaptcha();\r\n        this.captchaInput = '';\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 获取验证码（短信/邮件）\r\n    async getCaptcha() { // 标记为异步函数\r\n      if (this.countdown > 0) return;\r\n\r\n      let isValid = false;\r\n      let targetAccount = '';\r\n      let isEmail = false;\r\n\r\n      // 确定目标账户和类型\r\n      if (this.currentView === 'captcha-login' || this.currentView === 'bind-account') {\r\n        targetAccount = this.account;\r\n      } else if (this.currentView === 'find-password-by-email') {\r\n        targetAccount = this.email;\r\n      }\r\n      \r\n      // 验证格式\r\n      const phoneRegex = /^1[3-9]\\d{9}$/;\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n      if (emailRegex.test(targetAccount)) {\r\n        isEmail = true;\r\n        isValid = true;\r\n      } else if (phoneRegex.test(targetAccount)) {\r\n        // 在这里可以添加发送短信验证码的逻辑 (如果需要)\r\n        alert('短信功能暂未实现，请输入邮箱获取验证码。');\r\n        return;\r\n      } else {\r\n        alert('请输入正确的手机号或邮箱');\r\n        return;\r\n      }\r\n      \r\n      if (!isValid) return;\r\n\r\n      // 如果是邮箱，调用后端API\r\n      if (isEmail) {\r\n        try {\r\n          // 调用API发送邮件\r\n          const response = await sendVerificationCode(targetAccount);\r\n          alert(response.data.message || '验证码已发送，请查收。');\r\n          \r\n          // 开始倒计时\r\n          this.countdown = 60;\r\n          const timer = setInterval(() => {\r\n            this.countdown--;\r\n            if (this.countdown <= 0) clearInterval(timer);\r\n          }, 1000);\r\n\r\n        } catch (error) {\r\n          console.error('发送验证码失败:', error);\r\n          const detail = error.response?.data?.detail || '发送失败，请稍后重试。';\r\n          alert(`发送验证码失败: ${detail}`);\r\n          return; // 发送失败，不开始倒计时\r\n        }\r\n      }\r\n    },\r\n    // 验证账号（手机号或邮箱格式）\r\n    validateAccount() {\r\n      const phoneRegex = /^1[3-9]\\d{9}$/;\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      \r\n      if (phoneRegex.test(this.account)) {\r\n        return true;\r\n      } else if (emailRegex.test(this.account)) {\r\n        return true;\r\n      } else {\r\n        alert('请输入正确的手机号或邮箱');\r\n        return false;\r\n      }\r\n    },\r\n    // 处理登录\r\n    async handleLogin() {\r\n      if (!this.validateCaptcha()) return;\r\n      if (!this.isLoginFormValid) {\r\n          alert('请输入用户名、密码和验证码。');\r\n          return;\r\n      }\r\n      try {\r\n        const response = await login(this.username, this.password);\r\n        const token = response.data.access_token;\r\n        localStorage.setItem('user-token', token);\r\n        alert('登录成功!');\r\n        this.$router.push('/home');\r\n      } catch (error) {\r\n        const detail = error.response?.data?.detail || '登录失败，请检查您的凭据。';\r\n        alert(`登录失败: ${detail}`);\r\n        this.generateCaptcha(); // 刷新验证码\r\n        this.captchaInput = '';\r\n      }\r\n    },\r\n    // 处理验证码登录\r\n    async handleCaptchaLogin() {\r\n      try {\r\n        await verifyCode(this.account, this.captchaInput);\r\n        // 验证通过后，再执行登录逻辑\r\n        alert('登录成功!');\r\n        localStorage.setItem('user-token', 'your-secret-token');\r\n        this.$router.push('/home');\r\n      } catch (error) {\r\n        const detail = error.response?.data?.detail || '验证失败，请重试。';\r\n        alert(detail);\r\n      }\r\n    },\r\n    // 处理注册\r\n    handleRegister() {\r\n      if (!this.isRegisterFormValid) {\r\n        alert('请确保所有字段都已正确填写，且两次输入的密码一致。');\r\n        return;\r\n      }\r\n\r\n      if(this.validateCaptcha()) {\r\n        // 暂存用户名和密码\r\n        this.registrationData.username = this.username;\r\n        this.registrationData.password = this.password;\r\n        this.navigateTo('bind-account');\r\n      }\r\n    },\r\n    // 处理账号绑定 (现在是注册的最后一步)\r\n    async handleBind() {\r\n      if (!this.validateForm()) return;\r\n      this.isLoading = true;\r\n\r\n      try {\r\n        // 步骤1：验证邮箱验证码\r\n        await verifyCode(this.account, this.captchaInput);\r\n\r\n        // 步骤2：验证码通过后，提交注册信息\r\n        // 从暂存数据中获取用户名和密码\r\n        const response = await register(this.registrationData.username, this.registrationData.password, this.account);\r\n        \r\n        alert(`${response.data.message}！现在可以用新账号登录了。`);\r\n        this.navigateTo('login'); // 跳转到登录页面\r\n\r\n      } catch (error) {\r\n        const detail = error.response?.data?.detail || '操作失败，请重试。';\r\n        alert(`注册失败: ${detail}`);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    // 表单验证\r\n    validateForm() {\r\n      if (!this.account) {\r\n        alert('请输入手机号或邮箱');\r\n        return false;\r\n      }\r\n      if (!this.captchaInput) {\r\n        alert('请输入验证码');\r\n        return false;\r\n      }\r\n      if (!this.agreeTerms) {\r\n        alert('请同意用户协议和隐私政策');\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 显示用户协议\r\n    showTerms() {\r\n      this.showTermsModal = true;\r\n    },\r\n    // 显示隐私政策\r\n    showPrivacy() {\r\n      this.showPrivacyModal = true;\r\n    },\r\n    // 邮箱找回密码\r\n    async resetPasswordByEmail() {\r\n      if (!this.isFindPasswordByEmailFormValid) {\r\n        alert('请确保所有字段都已正确填写，且两次输入的新密码一致。');\r\n        return;\r\n      }\r\n      try {\r\n        // 调用后端的重置密码接口\r\n        const response = await resetPassword(this.email, this.captchaInput, this.newPassword);\r\n        alert(response.data.message || '密码重置成功！');\r\n        this.navigateTo('login');\r\n      } catch(error) {\r\n        const detail = error.response?.data?.detail || '操作失败，请重试。';\r\n        alert(`密码重置失败: ${detail}`);\r\n      }\r\n    },\r\n    alertNotAvailable() {\r\n      alert('该功能暂未开放');\r\n    },\r\n    // 设置认证页面的背景样式\r\n    authPageStyle(bgName) {\r\n      const bgImage = this.backgroundImages[bgName] || this.backgroundImages['bg5'];\r\n      return {\r\n        backgroundImage: `url(${bgImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center'\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    // 初始化验证码\r\n    this.generateCaptcha();\r\n  },\r\n  watch: {\r\n    // 当视图切换时，重新生成验证码\r\n    currentView(newView) {\r\n      if (newView === 'login' || newView === 'register') { // 从这里移除了 'find-password'\r\n        this.$nextTick(() => {\r\n          this.generateCaptcha();\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基础样式 */\r\n.all-views-container {\r\n  min-height: 100vh;\r\n}\r\n\r\n.auth-page {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative; /* For the overlay */\r\n  z-index: 0;\r\n}\r\n\r\n.auth-page::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.2); /* Lighter overlay */\r\n  z-index: 1; /* Overlay on top of background */\r\n}\r\n\r\n/* Position content on top of the overlay */\r\n.auth-page > :deep(div),\r\n.auth-page > :deep(header),\r\n.auth-page > :deep(footer) {\r\n    position: relative;\r\n    z-index: 2;\r\n}\r\n\r\n\r\n.auth-content {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px;\r\n  position: relative; /* Ensure it's on top of the overlay */\r\n  z-index: 2;\r\n}\r\n\r\n.auth-slide {\r\n  width: 55%;\r\n  max-width: 650px;\r\n  margin-right: 80px;\r\n}\r\n\r\n.auth-form {\r\n  width: 45%;\r\n  max-width: 420px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n\r\n.login-options {\r\n  display: flex;\r\n  gap: 15px;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.login-options span {\r\n  cursor: pointer;\r\n  color: #007BFF;\r\n}\r\n\r\n.login-options span:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.account-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-container {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 0 10px;\r\n  background-color: white;\r\n}\r\n\r\n.input-container i {\r\n  width: 20px;\r\n  text-align: center;\r\n  color: #999;\r\n}\r\n\r\n.input-field {\r\n  flex: 1;\r\n  height: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 14px;\r\n  padding: 0 10px;\r\n}\r\n\r\n.captcha-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.captcha-canvas {\r\n  width: 100px;\r\n  height: 40px;\r\n  margin-right: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.captcha-input-field {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.get-captcha-btn {\r\n  white-space: nowrap;\r\n  padding: 0 15px;\r\n  height: 40px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.get-captcha-btn:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.extra-options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.extra-options a {\r\n  color: #007BFF;\r\n  text-decoration: none;\r\n}\r\n\r\n.extra-options a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.checkbox-label {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.checkbox-label input {\r\n  display: none;\r\n}\r\n\r\n.checkbox-custom {\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 3px;\r\n  margin-right: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox-label input:checked + .checkbox-custom {\r\n  background-color: #007BFF;\r\n  border-color: #007BFF;\r\n}\r\n\r\n.checkbox-label input:checked + .checkbox-custom::after {\r\n  content: '✓';\r\n  color: white;\r\n  font-size: 12px;\r\n}\r\n\r\n.qrcode-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.qrcode-img {\r\n  width: 180px;\r\n  height: 180px;\r\n  margin: 20px auto;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  background-color: white;\r\n}\r\n\r\n.qrcode-tips {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reset-options {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.reset-options button {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  color: #333;\r\n}\r\n\r\n.reset-options button:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.reset-options button i {\r\n  font-size: 24px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  width: 80%;\r\n  max-width: 800px;\r\n  max-height: 80vh;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-header {\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n}\r\n\r\n.modal-header button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  width: auto;\r\n  height: auto;\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n\r\n.modal-body {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.terms-content, .privacy-content {\r\n  line-height: 1.8;\r\n  font-size: 14px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #ddd;\r\n  text-align: right;\r\n}\r\n\r\n.modal-footer button {\r\n  width: auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .auth-content {\r\n    flex-direction: column;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .auth-slide, .auth-form {\r\n    width: 100%;\r\n    max-width: none;\r\n    margin: 0;\r\n  }\r\n  \r\n  .auth-slide {\r\n    display: none;\r\n  }\r\n  \r\n  .auth-form {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .reset-options {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .modal-content {\r\n    width: 90%;\r\n  }\r\n}\r\n\r\n.link-style {\r\n  cursor: pointer;\r\n  color: #007BFF;\r\n  font-size: 14px;\r\n}\r\n\r\n.link-style:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}