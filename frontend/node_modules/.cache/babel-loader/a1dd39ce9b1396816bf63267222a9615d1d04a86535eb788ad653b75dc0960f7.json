{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"heatmap-analysis-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-tech p-6 mb-6\"\n};\nconst _hoisted_3 = {\n  class: \"text-xl font-semibold text-white mb-4 flex items-center\"\n};\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"space-y-2\"\n};\nconst _hoisted_6 = {\n  class: \"space-y-2\"\n};\nconst _hoisted_7 = {\n  class: \"space-y-2\"\n};\nconst _hoisted_8 = {\n  class: \"space-y-2\"\n};\nconst _hoisted_9 = {\n  class: \"mb-4\"\n};\nconst _hoisted_10 = {\n  class: \"flex items-center justify-between mb-2\"\n};\nconst _hoisted_11 = {\n  class: \"flex space-x-2\"\n};\nconst _hoisted_12 = {\n  class: \"grid grid-cols-2 gap-4\"\n};\nconst _hoisted_13 = {\n  class: \"flex space-x-4\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = {\n  class: \"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-6\"\n};\nconst _hoisted_18 = {\n  class: \"lg:col-span-3 card-tech p-6\"\n};\nconst _hoisted_19 = {\n  class: \"flex items-center justify-between mb-4\"\n};\nconst _hoisted_20 = {\n  class: \"flex space-x-2\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_22 = {\n  class: \"flex items-center space-x-4\"\n};\nconst _hoisted_23 = [\"disabled\"];\nconst _hoisted_24 = {\n  class: \"flex-1\"\n};\nconst _hoisted_25 = [\"max\"];\nconst _hoisted_26 = {\n  class: \"text-center text-sm text-blue-200 mt-1\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = {\n  class: \"mt-4 flex items-center justify-between\"\n};\nconst _hoisted_29 = {\n  class: \"text-sm text-blue-200\"\n};\nconst _hoisted_30 = {\n  class: \"card-tech p-6\"\n};\nconst _hoisted_31 = {\n  class: \"space-y-4 mb-6\"\n};\nconst _hoisted_32 = {\n  class: \"text-blue-200 text-sm\"\n};\nconst _hoisted_33 = {\n  class: \"text-white font-semibold text-sm\"\n};\nconst _hoisted_34 = {\n  class: \"mb-6\"\n};\nconst _hoisted_35 = {\n  class: \"space-y-2\"\n};\nconst _hoisted_36 = [\"onClick\"];\nconst _hoisted_37 = {\n  class: \"flex justify-between items-center\"\n};\nconst _hoisted_38 = {\n  class: \"text-white text-xs\"\n};\nconst _hoisted_39 = {\n  class: \"text-cyan-400 text-xs\"\n};\nconst _hoisted_40 = {\n  class: \"text-xs text-gray-400\"\n};\nconst _hoisted_41 = {\n  class: \"h-32 bg-gray-700 rounded p-2\"\n};\nconst _hoisted_42 = {\n  class: \"flex items-end justify-between h-full\"\n};\nconst _hoisted_43 = [\"title\"];\nconst _hoisted_44 = {\n  key: 0,\n  class: \"card-tech p-6\"\n};\nconst _hoisted_45 = {\n  class: \"overflow-x-auto\"\n};\nconst _hoisted_46 = {\n  class: \"w-full text-sm\"\n};\nconst _hoisted_47 = {\n  class: \"py-2 text-white\"\n};\nconst _hoisted_48 = {\n  class: \"py-2 text-white\"\n};\nconst _hoisted_49 = {\n  class: \"py-2 text-white\"\n};\nconst _hoisted_50 = {\n  class: \"py-2 text-white\"\n};\nconst _hoisted_51 = {\n  class: \"py-2 text-white\"\n};\nconst _hoisted_52 = {\n  class: \"py-2\"\n};\nconst _hoisted_53 = [\"onClick\"];\nconst _hoisted_54 = {\n  key: 1,\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n};\nconst _hoisted_55 = {\n  class: \"bg-blue-900 p-6 rounded-lg text-white\"\n};\nconst _hoisted_56 = {\n  class: \"flex items-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 控制面板 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, [_createVNode($setup[\"Thermometer\"], {\n    class: \"h-5 w-5 mr-2 text-cyan-400\"\n  }), _cache[12] || (_cache[12] = _createTextVNode(\" 热力图分析 \"))]), _createCommentVNode(\" 分析参数配置 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    class: \"text-sm text-blue-200\"\n  }, \"分析日期\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.analysisParams.date = $event),\n    type: \"date\",\n    class: \"input-tech\",\n    min: $setup.minDate,\n    max: $setup.maxDate\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.analysisParams.date]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    class: \"text-sm text-blue-200\"\n  }, \"时间聚合间隔\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.analysisParams.timeInterval = $event),\n    class: \"input-tech\"\n  }, _cache[14] || (_cache[14] = [_createStaticVNode(\"<option value=\\\"15\\\" data-v-14f8ec66>15分钟</option><option value=\\\"30\\\" data-v-14f8ec66>30分钟</option><option value=\\\"60\\\" data-v-14f8ec66>1小时</option><option value=\\\"120\\\" data-v-14f8ec66>2小时</option><option value=\\\"360\\\" data-v-14f8ec66>6小时</option><option value=\\\"1440\\\" data-v-14f8ec66>全天</option>\", 6)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.analysisParams.timeInterval]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    class: \"text-sm text-blue-200\"\n  }, \"热力图分辨率\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.analysisParams.resolution = $event),\n    class: \"input-tech\"\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"option\", {\n    value: \"0.0005\"\n  }, \"高精度 (0.5m)\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"0.001\"\n  }, \"标准 (1m)\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"0.005\"\n  }, \"中等 (5m)\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"0.01\"\n  }, \"粗糙 (10m)\", -1 /* CACHED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.analysisParams.resolution]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    class: \"text-sm text-blue-200\"\n  }, \"分析类型\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.analysisParams.analysisType = $event),\n    class: \"input-tech\"\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"option\", {\n    value: \"density\"\n  }, \"车辆密度\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"pickup\"\n  }, \"上车热点\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"dropoff\"\n  }, \"下车热点\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"speed\"\n  }, \"平均速度\", -1 /* CACHED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.analysisParams.analysisType]])])]), _createCommentVNode(\" 时间段选择器 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    class: \"text-sm text-blue-200\"\n  }, \"分析时间段\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $setup.selectPeakHours('morning')),\n    class: \"btn-tech-small\"\n  }, \"早高峰\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $setup.selectPeakHours('evening')),\n    class: \"btn-tech-small\"\n  }, \"晚高峰\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $setup.selectPeakHours('night')),\n    class: \"btn-tech-small\"\n  }, \"夜间\"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $setup.selectPeakHours('all')),\n    class: \"btn-tech-small\"\n  }, \"全天\")])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.analysisParams.startTime = $event),\n    type: \"time\",\n    class: \"input-tech\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.analysisParams.startTime]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.analysisParams.endTime = $event),\n    type: \"time\",\n    class: \"input-tech\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.analysisParams.endTime]])])])]), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: $setup.generateHeatmap,\n    disabled: $setup.loading,\n    class: \"btn-tech flex items-center text-white\"\n  }, [_createVNode($setup[\"Activity\"], {\n    class: \"h-4 w-4 mr-2\"\n  }), _createTextVNode(\" \" + _toDisplayString($setup.loading ? '生成中...' : '生成热力图'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n    onClick: $setup.playTimeAnimation,\n    disabled: !$setup.heatmapData.length || $setup.playing,\n    class: \"btn-tech flex items-center text-white\"\n  }, [_createVNode($setup[\"Play\"], {\n    class: \"h-4 w-4 mr-2\"\n  }), _createTextVNode(\" \" + _toDisplayString($setup.playing ? '播放中...' : '时间轴播放'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_15), _createElementVNode(\"button\", {\n    onClick: $setup.exportHeatmapData,\n    disabled: !$setup.heatmapData.length,\n    class: \"btn-tech-secondary flex items-center text-white\"\n  }, [_createVNode($setup[\"Download\"], {\n    class: \"h-4 w-4 mr-2\"\n  }), _cache[21] || (_cache[21] = _createTextVNode(\" 导出数据 \"))], 8 /* PROPS */, _hoisted_16), _createElementVNode(\"button\", {\n    onClick: $setup.clearHeatmap,\n    class: \"btn-tech-secondary flex items-center text-white\"\n  }, [_createVNode($setup[\"X\"], {\n    class: \"h-4 w-4 mr-2\"\n  }), _cache[22] || (_cache[22] = _createTextVNode(\" 清除图层 \"))])])]), _createCommentVNode(\" 热力图显示和统计信息 \"), _createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" 热力图地图 \"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[24] || (_cache[24] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-semibold text-white\"\n  }, \"热力图可视化\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_20, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.mapParams.style = $event),\n    onChange: $setup.changeMapStyle,\n    class: \"input-tech text-xs\"\n  }, _cache[23] || (_cache[23] = [_createElementVNode(\"option\", {\n    value: \"dark\"\n  }, \"暗色主题\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"light\"\n  }, \"亮色主题\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"satellite\"\n  }, \"卫星图\", -1 /* CACHED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.mapParams.style]]), _createElementVNode(\"button\", {\n    onClick: $setup.toggleHeatmapLayer,\n    class: \"btn-tech-small\"\n  }, _toDisplayString($setup.heatmapVisible ? '隐藏热力图' : '显示热力图'), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n    id: $setup.mapContainerId,\n    class: \"w-full h-96 bg-gray-800 rounded-lg border border-blue-800\"\n  }), _createCommentVNode(\" 时间轴控制器 \"), $setup.timeSlices.length > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n    onClick: $setup.prevTimeSlice,\n    disabled: $setup.currentTimeIndex === 0,\n    class: \"btn-tech-small\"\n  }, [_createVNode($setup[\"ChevronLeft\"], {\n    class: \"h-4 w-4\"\n  })], 8 /* PROPS */, _hoisted_23), _createElementVNode(\"div\", _hoisted_24, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: $setup.timeSlices.length - 1,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.currentTimeIndex = $event),\n    onInput: $setup.updateTimeSlice,\n    class: \"w-full\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_25), [[_vModelText, $setup.currentTimeIndex]]), _createElementVNode(\"div\", _hoisted_26, _toDisplayString($setup.formatTimeSlice($setup.timeSlices[$setup.currentTimeIndex])), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: $setup.nextTimeSlice,\n    disabled: $setup.currentTimeIndex === $setup.timeSlices.length - 1,\n    class: \"btn-tech-small\"\n  }, [_createVNode($setup[\"ChevronRight\"], {\n    class: \"h-4 w-4\"\n  })], 8 /* PROPS */, _hoisted_27)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 图例 \"), _createElementVNode(\"div\", _hoisted_28, [_cache[25] || (_cache[25] = _createStaticVNode(\"<div class=\\\"flex items-center space-x-4\\\" data-v-14f8ec66><span class=\\\"text-sm text-blue-200\\\" data-v-14f8ec66>密度梯度:</span><div class=\\\"flex items-center space-x-1\\\" data-v-14f8ec66><div class=\\\"w-4 h-4 bg-blue-500\\\" data-v-14f8ec66></div><span class=\\\"text-xs text-gray-400\\\" data-v-14f8ec66>低</span><div class=\\\"w-4 h-4 bg-green-500\\\" data-v-14f8ec66></div><div class=\\\"w-4 h-4 bg-yellow-500\\\" data-v-14f8ec66></div><div class=\\\"w-4 h-4 bg-red-500\\\" data-v-14f8ec66></div><span class=\\\"text-xs text-gray-400\\\" data-v-14f8ec66>高</span></div></div>\", 1)), _createElementVNode(\"div\", _hoisted_29, \" 数据点: \" + _toDisplayString($setup.currentHeatmapStats.totalPoints) + \" | 最大密度: \" + _toDisplayString($setup.currentHeatmapStats.maxDensity), 1 /* TEXT */)])]), _createCommentVNode(\" 统计面板 \"), _createElementVNode(\"div\", _hoisted_30, [_cache[28] || (_cache[28] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-semibold text-white mb-4\"\n  }, \"分析统计\", -1 /* CACHED */)), _createCommentVNode(\" 整体统计 \"), _createElementVNode(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.overallStats, stat => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stat.label,\n      class: \"flex justify-between\"\n    }, [_createElementVNode(\"span\", _hoisted_32, _toDisplayString(stat.label), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_33, _toDisplayString(stat.value), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 热点区域排行 \"), _createElementVNode(\"div\", _hoisted_34, [_cache[26] || (_cache[26] = _createElementVNode(\"h4\", {\n    class: \"text-sm font-semibold text-blue-200 mb-3\"\n  }, \"热点区域 TOP5\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_35, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.topHotspots, (hotspot, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      onClick: $event => $setup.zoomToHotspot(hotspot),\n      class: \"p-2 bg-gray-700 rounded cursor-pointer hover:bg-gray-600 transition-colors\"\n    }, [_createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"span\", _hoisted_38, \"区域 \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_39, _toDisplayString(hotspot.density), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_40, _toDisplayString(hotspot.coordinates), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_36);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 时间分布图表 \"), _createElementVNode(\"div\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"h4\", {\n    class: \"text-sm font-semibold text-blue-200 mb-3\"\n  }, \"时间分布\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_41, [_createCommentVNode(\" 简单的时间分布条形图 \"), _createElementVNode(\"div\", _hoisted_42, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.timeDistributionBars, (bar, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      style: _normalizeStyle({\n        height: bar.height + '%'\n      }),\n      class: \"bg-cyan-500 w-1 rounded-t\",\n      title: bar.label\n    }, null, 12 /* STYLE, PROPS */, _hoisted_43);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]), _createCommentVNode(\" 详细数据表格 \"), $setup.detailedData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [_cache[30] || (_cache[30] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-semibold text-white mb-4\"\n  }, \"详细数据\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"table\", _hoisted_46, [_cache[29] || (_cache[29] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", {\n    class: \"border-b border-gray-600\"\n  }, [_createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"时间段\"), _createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"区域\"), _createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"密度值\"), _createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"数据点数\"), _createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"平均速度\"), _createElementVNode(\"th\", {\n    class: \"text-left py-2 text-blue-200\"\n  }, \"操作\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.detailedData.slice(0, 50), (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      class: \"border-b border-gray-700 hover:bg-gray-700\"\n    }, [_createElementVNode(\"td\", _hoisted_47, _toDisplayString($setup.formatTime(row.time)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_48, _toDisplayString(row.region), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_49, _toDisplayString(row.density), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_50, _toDisplayString(row.count), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_51, _toDisplayString(row.avgSpeed || 'N/A'), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_52, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.zoomToRegion(row),\n      class: \"text-cyan-400 hover:text-cyan-300 text-xs\"\n    }, \" 定位 \", 8 /* PROPS */, _hoisted_53)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 加载状态 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_54, [_createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_cache[31] || (_cache[31] = _createElementVNode(\"div\", {\n    class: \"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-cyan-400 mr-3\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.loadingMessage), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","$setup","_hoisted_4","_hoisted_5","analysisParams","date","$event","type","min","minDate","max","maxDate","_hoisted_6","timeInterval","_hoisted_7","resolution","value","_hoisted_8","analysisType","_hoisted_9","_hoisted_10","_hoisted_11","onClick","_cache","selectPeakHours","_hoisted_12","startTime","endTime","_hoisted_13","generateHeatmap","disabled","loading","_toDisplayString","playTimeAnimation","heatmapData","length","playing","exportHeatmapData","clearHeatmap","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","mapParams","style","onChange","changeMapStyle","toggleHeatmapLayer","heatmapVisible","id","mapContainerId","timeSlices","_hoisted_21","_hoisted_22","prevTimeSlice","currentTimeIndex","_hoisted_24","onInput","updateTimeSlice","_hoisted_26","formatTimeSlice","nextTimeSlice","_hoisted_28","_hoisted_29","currentHeatmapStats","totalPoints","maxDensity","_hoisted_30","_hoisted_31","_Fragment","_renderList","overallStats","stat","key","label","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","topHotspots","hotspot","index","zoomToHotspot","_hoisted_37","_hoisted_38","_hoisted_39","density","_hoisted_40","coordinates","_hoisted_41","_hoisted_42","timeDistributionBars","bar","_normalizeStyle","height","title","detailedData","_hoisted_44","_hoisted_45","_hoisted_46","slice","row","_hoisted_47","formatTime","time","_hoisted_48","region","_hoisted_49","_hoisted_50","count","_hoisted_51","avgSpeed","_hoisted_52","zoomToRegion","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","loadingMessage"],"sources":["E:\\hhh\\frontend\\src\\modules\\trafficVisualization\\TrafficHeatmap.vue"],"sourcesContent":["<template>\r\n  <div class=\"heatmap-analysis-container\">\r\n    <!-- 控制面板 -->\r\n    <div class=\"card-tech p-6 mb-6\">\r\n      <h2 class=\"text-xl font-semibold text-white mb-4 flex items-center\">\r\n        <Thermometer class=\"h-5 w-5 mr-2 text-cyan-400\" />\r\n        热力图分析\r\n      </h2>\r\n      \r\n      <!-- 分析参数配置 -->\r\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\r\n        <div class=\"space-y-2\">\r\n          <label class=\"text-sm text-blue-200\">分析日期</label>\r\n          <input \r\n            v-model=\"analysisParams.date\"\r\n            type=\"date\" \r\n            class=\"input-tech\"\r\n            :min=\"minDate\"\r\n            :max=\"maxDate\"\r\n          />\r\n        </div>\r\n        <div class=\"space-y-2\">\r\n          <label class=\"text-sm text-blue-200\">时间聚合间隔</label>\r\n          <select v-model=\"analysisParams.timeInterval\" class=\"input-tech\">\r\n            <option value=\"15\">15分钟</option>\r\n            <option value=\"30\">30分钟</option>\r\n            <option value=\"60\">1小时</option>\r\n            <option value=\"120\">2小时</option>\r\n            <option value=\"360\">6小时</option>\r\n            <option value=\"1440\">全天</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"space-y-2\">\r\n          <label class=\"text-sm text-blue-200\">热力图分辨率</label>\r\n          <select v-model=\"analysisParams.resolution\" class=\"input-tech\">\r\n            <option value=\"0.0005\">高精度 (0.5m)</option>\r\n            <option value=\"0.001\">标准 (1m)</option>\r\n            <option value=\"0.005\">中等 (5m)</option>\r\n            <option value=\"0.01\">粗糙 (10m)</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"space-y-2\">\r\n          <label class=\"text-sm text-blue-200\">分析类型</label>\r\n          <select v-model=\"analysisParams.analysisType\" class=\"input-tech\">\r\n            <option value=\"density\">车辆密度</option>\r\n            <option value=\"pickup\">上车热点</option>\r\n            <option value=\"dropoff\">下车热点</option>\r\n            <option value=\"speed\">平均速度</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 时间段选择器 -->\r\n      <div class=\"mb-4\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <label class=\"text-sm text-blue-200\">分析时间段</label>\r\n          <div class=\"flex space-x-2\">\r\n            <button @click=\"selectPeakHours('morning')\" class=\"btn-tech-small\">早高峰</button>\r\n            <button @click=\"selectPeakHours('evening')\" class=\"btn-tech-small\">晚高峰</button>\r\n            <button @click=\"selectPeakHours('night')\" class=\"btn-tech-small\">夜间</button>\r\n            <button @click=\"selectPeakHours('all')\" class=\"btn-tech-small\">全天</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <input \r\n              v-model=\"analysisParams.startTime\"\r\n              type=\"time\" \r\n              class=\"input-tech\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input \r\n              v-model=\"analysisParams.endTime\"\r\n              type=\"time\" \r\n              class=\"input-tech\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 操作按钮 -->\r\n      <div class=\"flex space-x-4\">\r\n        <button \r\n          @click=\"generateHeatmap\"\r\n          :disabled=\"loading\"\r\n          class=\"btn-tech flex items-center text-white\"\r\n        >\r\n          <Activity class=\"h-4 w-4 mr-2\" />\r\n          {{ loading ? '生成中...' : '生成热力图' }}\r\n        </button>\r\n        <button \r\n          @click=\"playTimeAnimation\"\r\n          :disabled=\"!heatmapData.length || playing\"\r\n          class=\"btn-tech flex items-center text-white\"\r\n        >\r\n          <Play class=\"h-4 w-4 mr-2\" />\r\n          {{ playing ? '播放中...' : '时间轴播放' }}\r\n        </button>\r\n        <button \r\n          @click=\"exportHeatmapData\"\r\n          :disabled=\"!heatmapData.length\"\r\n          class=\"btn-tech-secondary flex items-center text-white\"\r\n        >\r\n          <Download class=\"h-4 w-4 mr-2\" />\r\n          导出数据\r\n        </button>\r\n        <button \r\n          @click=\"clearHeatmap\"\r\n          class=\"btn-tech-secondary flex items-center text-white\"\r\n        >\r\n          <X class=\"h-4 w-4 mr-2\" />\r\n          清除图层\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 热力图显示和统计信息 -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-6\">\r\n      <!-- 热力图地图 -->\r\n      <div class=\"lg:col-span-3 card-tech p-6\">\r\n        <div class=\"flex items-center justify-between mb-4\">\r\n          <h3 class=\"text-lg font-semibold text-white\">热力图可视化</h3>\r\n          <div class=\"flex space-x-2\">\r\n            <select v-model=\"mapParams.style\" @change=\"changeMapStyle\" class=\"input-tech text-xs\">\r\n              <option value=\"dark\">暗色主题</option>\r\n              <option value=\"light\">亮色主题</option>\r\n              <option value=\"satellite\">卫星图</option>\r\n            </select>\r\n            <button @click=\"toggleHeatmapLayer\" class=\"btn-tech-small\">\r\n              {{ heatmapVisible ? '隐藏热力图' : '显示热力图' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div \r\n          :id=\"mapContainerId\" \r\n          class=\"w-full h-96 bg-gray-800 rounded-lg border border-blue-800\"\r\n        ></div>\r\n        \r\n        <!-- 时间轴控制器 -->\r\n        <div v-if=\"timeSlices.length > 1\" class=\"mt-4\">\r\n          <div class=\"flex items-center space-x-4\">\r\n            <button @click=\"prevTimeSlice\" :disabled=\"currentTimeIndex === 0\" class=\"btn-tech-small\">\r\n              <ChevronLeft class=\"h-4 w-4\" />\r\n            </button>\r\n            <div class=\"flex-1\">\r\n              <input \r\n                type=\"range\" \r\n                :min=\"0\" \r\n                :max=\"timeSlices.length - 1\"\r\n                v-model=\"currentTimeIndex\"\r\n                @input=\"updateTimeSlice\"\r\n                class=\"w-full\"\r\n              />\r\n              <div class=\"text-center text-sm text-blue-200 mt-1\">\r\n                {{ formatTimeSlice(timeSlices[currentTimeIndex]) }}\r\n              </div>\r\n            </div>\r\n            <button @click=\"nextTimeSlice\" :disabled=\"currentTimeIndex === timeSlices.length - 1\" class=\"btn-tech-small\">\r\n              <ChevronRight class=\"h-4 w-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 图例 -->\r\n        <div class=\"mt-4 flex items-center justify-between\">\r\n          <div class=\"flex items-center space-x-4\">\r\n            <span class=\"text-sm text-blue-200\">密度梯度:</span>\r\n            <div class=\"flex items-center space-x-1\">\r\n              <div class=\"w-4 h-4 bg-blue-500\"></div>\r\n              <span class=\"text-xs text-gray-400\">低</span>\r\n              <div class=\"w-4 h-4 bg-green-500\"></div>\r\n              <div class=\"w-4 h-4 bg-yellow-500\"></div>\r\n              <div class=\"w-4 h-4 bg-red-500\"></div>\r\n              <span class=\"text-xs text-gray-400\">高</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-sm text-blue-200\">\r\n            数据点: {{ currentHeatmapStats.totalPoints }} | \r\n            最大密度: {{ currentHeatmapStats.maxDensity }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 统计面板 -->\r\n      <div class=\"card-tech p-6\">\r\n        <h3 class=\"text-lg font-semibold text-white mb-4\">分析统计</h3>\r\n        \r\n        <!-- 整体统计 -->\r\n        <div class=\"space-y-4 mb-6\">\r\n          <div v-for=\"stat in overallStats\" :key=\"stat.label\" class=\"flex justify-between\">\r\n            <span class=\"text-blue-200 text-sm\">{{ stat.label }}</span>\r\n            <span class=\"text-white font-semibold text-sm\">{{ stat.value }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 热点区域排行 -->\r\n        <div class=\"mb-6\">\r\n          <h4 class=\"text-sm font-semibold text-blue-200 mb-3\">热点区域 TOP5</h4>\r\n          <div class=\"space-y-2\">\r\n            <div \r\n              v-for=\"(hotspot, index) in topHotspots\" \r\n              :key=\"index\"\r\n              @click=\"zoomToHotspot(hotspot)\"\r\n              class=\"p-2 bg-gray-700 rounded cursor-pointer hover:bg-gray-600 transition-colors\"\r\n            >\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-white text-xs\">区域 {{ index + 1 }}</span>\r\n                <span class=\"text-cyan-400 text-xs\">{{ hotspot.density }}</span>\r\n              </div>\r\n              <div class=\"text-xs text-gray-400\">\r\n                {{ hotspot.coordinates }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 时间分布图表 -->\r\n        <div>\r\n          <h4 class=\"text-sm font-semibold text-blue-200 mb-3\">时间分布</h4>\r\n          <div class=\"h-32 bg-gray-700 rounded p-2\">\r\n            <!-- 简单的时间分布条形图 -->\r\n            <div class=\"flex items-end justify-between h-full\">\r\n              <div \r\n                v-for=\"(bar, index) in timeDistributionBars\" \r\n                :key=\"index\"\r\n                :style=\"{ height: bar.height + '%' }\"\r\n                class=\"bg-cyan-500 w-1 rounded-t\"\r\n                :title=\"bar.label\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 详细数据表格 -->\r\n    <div class=\"card-tech p-6\" v-if=\"detailedData.length > 0\">\r\n      <h3 class=\"text-lg font-semibold text-white mb-4\">详细数据</h3>\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"w-full text-sm\">\r\n          <thead>\r\n            <tr class=\"border-b border-gray-600\">\r\n              <th class=\"text-left py-2 text-blue-200\">时间段</th>\r\n              <th class=\"text-left py-2 text-blue-200\">区域</th>\r\n              <th class=\"text-left py-2 text-blue-200\">密度值</th>\r\n              <th class=\"text-left py-2 text-blue-200\">数据点数</th>\r\n              <th class=\"text-left py-2 text-blue-200\">平均速度</th>\r\n              <th class=\"text-left py-2 text-blue-200\">操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr \r\n              v-for=\"(row, index) in detailedData.slice(0, 50)\" \r\n              :key=\"index\"\r\n              class=\"border-b border-gray-700 hover:bg-gray-700\"\r\n            >\r\n              <td class=\"py-2 text-white\">{{ formatTime(row.time) }}</td>\r\n              <td class=\"py-2 text-white\">{{ row.region }}</td>\r\n              <td class=\"py-2 text-white\">{{ row.density }}</td>\r\n              <td class=\"py-2 text-white\">{{ row.count }}</td>\r\n              <td class=\"py-2 text-white\">{{ row.avgSpeed || 'N/A' }}</td>\r\n              <td class=\"py-2\">\r\n                <button @click=\"zoomToRegion(row)\" class=\"text-cyan-400 hover:text-cyan-300 text-xs\">\r\n                  定位\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div class=\"bg-blue-900 p-6 rounded-lg text-white\">\r\n        <div class=\"flex items-center\">\r\n          <div class=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-cyan-400 mr-3\"></div>\r\n          <span>{{ loadingMessage }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\r\nimport { Thermometer, Activity, Play, Download, X, ChevronLeft, ChevronRight } from 'lucide-vue-next'\r\nimport { getHeatmapData, getTrafficVisualization } from '@/api/traffic'\r\n\r\n// 响应式数据\r\nconst loading = ref(false)\r\nconst loadingMessage = ref('')\r\nconst playing = ref(false)\r\nconst heatmapData = ref([])\r\nconst timeSlices = ref([])\r\nconst currentTimeIndex = ref(0)\r\nconst heatmapVisible = ref(true)\r\nconst detailedData = ref([])\r\n\r\n// 分析参数\r\nconst analysisParams = ref({\r\n  date: '2013-09-13',\r\n  timeInterval: 60, // 分钟\r\n  resolution: 0.001,\r\n  analysisType: 'density',\r\n  startTime: '06:00',\r\n  endTime: '22:00'\r\n})\r\n\r\n// 地图参数\r\nconst mapParams = ref({\r\n  style: 'dark'\r\n})\r\n\r\n// 地图相关\r\nconst mapContainerId = `heatmap-map-${Date.now()}`\r\nlet map = null\r\nlet heatmap = null\r\n\r\n// 时间限制\r\nconst minDate = \"2013-09-12\"\r\nconst maxDate = \"2013-09-18\"\r\n\r\n// 计算属性\r\nconst currentHeatmapStats = computed(() => {\r\n  if (!heatmapData.value.length) return { totalPoints: 0, maxDensity: 0 }\r\n  \r\n  const currentSlice = timeSlices.value[currentTimeIndex.value]\r\n  if (!currentSlice) return { totalPoints: 0, maxDensity: 0 }\r\n  \r\n  return {\r\n    totalPoints: currentSlice.data.length,\r\n    maxDensity: Math.max(...currentSlice.data.map(p => p.count))\r\n  }\r\n})\r\n\r\nconst overallStats = computed(() => {\r\n  if (!heatmapData.value.length) return []\r\n  \r\n  const totalPoints = heatmapData.value.length\r\n  const avgDensity = heatmapData.value.reduce((sum, p) => sum + p.count, 0) / totalPoints\r\n  const maxDensity = Math.max(...heatmapData.value.map(p => p.count))\r\n  \r\n  return [\r\n    { label: '总数据点', value: totalPoints },\r\n    { label: '平均密度', value: avgDensity.toFixed(1) },\r\n    { label: '最大密度', value: maxDensity },\r\n    { label: '覆盖区域', value: `${(totalPoints * 0.001).toFixed(2)} km²` },\r\n    { label: '时间切片', value: timeSlices.value.length }\r\n  ]\r\n})\r\n\r\nconst topHotspots = computed(() => {\r\n  if (!heatmapData.value.length) return []\r\n  \r\n  return heatmapData.value\r\n    .sort((a, b) => b.count - a.count)\r\n    .slice(0, 5)\r\n    .map(point => ({\r\n      density: point.count,\r\n      coordinates: `${point.lat.toFixed(4)}, ${point.lng.toFixed(4)}`,\r\n      lat: point.lat,\r\n      lng: point.lng\r\n    }))\r\n})\r\n\r\nconst timeDistributionBars = computed(() => {\r\n  if (!timeSlices.value.length) return []\r\n  \r\n  const maxCount = Math.max(...timeSlices.value.map(slice => slice.data.length))\r\n  \r\n  return timeSlices.value.map(slice => ({\r\n    height: (slice.data.length / maxCount) * 100,\r\n    label: slice.label\r\n  }))\r\n})\r\n\r\n// 地图初始化\r\nasync function initMap() {\r\n  if (!window.AMap) {\r\n    await loadAMapAPI()\r\n  }\r\n  \r\n  map = new window.AMap.Map(mapContainerId, {\r\n    center: [117.120, 36.651],\r\n    zoom: 10,\r\n    mapStyle: `amap://styles/${mapParams.value.style}`\r\n  })\r\n  \r\n  map.plugin(['AMap.ToolBar', 'AMap.Scale'], function() {\r\n    map.addControl(new window.AMap.ToolBar())\r\n    map.addControl(new window.AMap.Scale())\r\n  })\r\n}\r\n\r\n// 加载高德地图API\r\nfunction loadAMapAPI() {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.AMap) {\r\n      resolve()\r\n      return\r\n    }\r\n    \r\n    const script = document.createElement('script')\r\n    script.src = 'https://webapi.amap.com/maps?v=2.0&key=ac9b745946df9aee02cf0515319407df&callback=initAMap'\r\n    \r\n    window.initAMap = () => {\r\n      resolve()\r\n      delete window.initAMap\r\n    }\r\n    \r\n    script.onerror = reject\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\n// 生成热力图\r\nasync function generateHeatmap() {\r\n  loading.value = true\r\n  loadingMessage.value = '正在生成热力图数据...'\r\n  \r\n  try {\r\n    // 构建时间范围\r\n    const startDateTime = new Date(`${analysisParams.value.date}T${analysisParams.value.startTime}:00`)\r\n    const endDateTime = new Date(`${analysisParams.value.date}T${analysisParams.value.endTime}:00`)\r\n    \r\n    const startTimeStamp = startDateTime.getTime() / 1000\r\n    const endTimeStamp = endDateTime.getTime() / 1000\r\n    \r\n    console.log('生成热力图参数:', {\r\n      start: startTimeStamp,\r\n      end: endTimeStamp,\r\n      interval: analysisParams.value.timeInterval,\r\n      resolution: analysisParams.value.resolution\r\n    })\r\n    \r\n    // 根据时间间隔生成时间切片\r\n    await generateTimeSlices(startTimeStamp, endTimeStamp)\r\n    \r\n    // 生成热力图可视化\r\n    renderHeatmap()\r\n    \r\n  } catch (error) {\r\n    console.error('生成热力图失败:', error)\r\n    alert('生成热力图失败，请检查参数设置')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 生成时间切片\r\nasync function generateTimeSlices(startTime, endTime) {\r\n  const intervalSeconds = analysisParams.value.timeInterval * 60\r\n  const slices = []\r\n  \r\n  let currentTime = startTime\r\n  while (currentTime < endTime) {\r\n    const sliceEndTime = Math.min(currentTime + intervalSeconds, endTime)\r\n    \r\n    loadingMessage.value = `正在处理时间段: ${formatTimestamp(currentTime)} - ${formatTimestamp(sliceEndTime)}`\r\n    \r\n    try {\r\n      const response = await getTrafficVisualization(\r\n        currentTime, \r\n        sliceEndTime, \r\n        'heatmap',\r\n        null,\r\n        mapParams.value.style\r\n      )\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        slices.push({\r\n          startTime: currentTime,\r\n          endTime: sliceEndTime,\r\n          label: `${formatTimestamp(currentTime)} - ${formatTimestamp(sliceEndTime)}`,\r\n          data: response.data.data\r\n        })\r\n        \r\n        // 累积所有数据用于整体分析\r\n        heatmapData.value.push(...response.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.error(`获取时间段 ${currentTime}-${sliceEndTime} 数据失败:`, error)\r\n    }\r\n    \r\n    currentTime = sliceEndTime\r\n  }\r\n  \r\n  timeSlices.value = slices\r\n  currentTimeIndex.value = 0\r\n  \r\n  console.log(`生成了 ${slices.length} 个时间切片`)\r\n}\r\n\r\n// 渲染热力图\r\nfunction renderHeatmap() {\r\n  if (!map) return\r\n  \r\n  // 清除现有热力图\r\n  if (heatmap) {\r\n    heatmap.setMap(null)\r\n  }\r\n  \r\n  const currentSlice = timeSlices.value[currentTimeIndex.value]\r\n  if (!currentSlice || !currentSlice.data.length) return\r\n  \r\n  // 创建热力图\r\n  map.plugin(['AMap.HeatMap'], function() {\r\n    heatmap = new window.AMap.HeatMap(map, {\r\n      radius: 25,\r\n      opacity: [0, 0.8],\r\n      gradient: {\r\n        0.5: 'blue',\r\n        0.65: 'rgb(117,211,248)',\r\n        0.7: 'rgb(0,255,0)',\r\n        0.9: 'yellow',\r\n        1.0: 'red'\r\n      }\r\n    })\r\n    \r\n    heatmap.setDataSet({\r\n      data: currentSlice.data,\r\n      max: Math.max(...currentSlice.data.map(p => p.count))\r\n    })\r\n  })\r\n}\r\n\r\n// 时间段快速选择\r\nfunction selectPeakHours(period) {\r\n  switch (period) {\r\n    case 'morning':\r\n      analysisParams.value.startTime = '07:00'\r\n      analysisParams.value.endTime = '09:00'\r\n      break\r\n    case 'evening':\r\n      analysisParams.value.startTime = '17:00'\r\n      analysisParams.value.endTime = '19:00'\r\n      break\r\n    case 'night':\r\n      analysisParams.value.startTime = '22:00'\r\n      analysisParams.value.endTime = '06:00'\r\n      break\r\n    case 'all':\r\n      analysisParams.value.startTime = '00:00'\r\n      analysisParams.value.endTime = '23:59'\r\n      break\r\n  }\r\n}\r\n\r\n// 时间轴控制\r\nfunction prevTimeSlice() {\r\n  if (currentTimeIndex.value > 0) {\r\n    currentTimeIndex.value--\r\n    updateTimeSlice()\r\n  }\r\n}\r\n\r\nfunction nextTimeSlice() {\r\n  if (currentTimeIndex.value < timeSlices.value.length - 1) {\r\n    currentTimeIndex.value++\r\n    updateTimeSlice()\r\n  }\r\n}\r\n\r\nfunction updateTimeSlice() {\r\n  renderHeatmap()\r\n}\r\n\r\n// 时间轴播放\r\nasync function playTimeAnimation() {\r\n  if (playing.value || !timeSlices.value.length) return\r\n  \r\n  playing.value = true\r\n  currentTimeIndex.value = 0\r\n  \r\n  const playInterval = setInterval(() => {\r\n    updateTimeSlice()\r\n    currentTimeIndex.value++\r\n    \r\n    if (currentTimeIndex.value >= timeSlices.value.length) {\r\n      currentTimeIndex.value = 0 // 循环播放\r\n    }\r\n  }, 1000) // 每秒切换一个时间段\r\n  \r\n  // 10秒后停止播放\r\n  setTimeout(() => {\r\n    clearInterval(playInterval)\r\n    playing.value = false\r\n  }, 10000)\r\n}\r\n\r\n// 地图样式控制\r\nfunction changeMapStyle() {\r\n  if (map) {\r\n    map.setMapStyle(`amap://styles/${mapParams.value.style}`)\r\n  }\r\n}\r\n\r\nfunction toggleHeatmapLayer() {\r\n  if (heatmap) {\r\n    if (heatmapVisible.value) {\r\n      heatmap.hide()\r\n    } else {\r\n      heatmap.show()\r\n    }\r\n    heatmapVisible.value = !heatmapVisible.value\r\n  }\r\n}\r\n\r\n// 清除热力图\r\nfunction clearHeatmap() {\r\n  if (heatmap) {\r\n    heatmap.setMap(null)\r\n    heatmap = null\r\n  }\r\n  heatmapData.value = []\r\n  timeSlices.value = []\r\n  detailedData.value = []\r\n  currentTimeIndex.value = 0\r\n}\r\n\r\n// 导出数据\r\nfunction exportHeatmapData() {\r\n  if (!heatmapData.value.length) return\r\n  \r\n  const exportData = {\r\n    analysisParams: analysisParams.value,\r\n    timeSlices: timeSlices.value.map(slice => ({\r\n      ...slice,\r\n      dataCount: slice.data.length\r\n    })),\r\n    overallStats: overallStats.value,\r\n    topHotspots: topHotspots.value\r\n  }\r\n  \r\n  const dataStr = JSON.stringify(exportData, null, 2)\r\n  const dataBlob = new Blob([dataStr], {type: 'application/json'})\r\n  const url = URL.createObjectURL(dataBlob)\r\n  \r\n  const link = document.createElement('a')\r\n  link.href = url\r\n  link.download = `heatmap_analysis_${analysisParams.value.date}_${Date.now()}.json`\r\n  link.click()\r\n  \r\n  URL.revokeObjectURL(url)\r\n}\r\n\r\n// 区域定位\r\nfunction zoomToHotspot(hotspot) {\r\n  if (map) {\r\n    map.setZoomAndCenter(15, [hotspot.lng, hotspot.lat])\r\n  }\r\n}\r\n\r\nfunction zoomToRegion(row) {\r\n  console.log('定位到区域:', row)\r\n}\r\n\r\n// 工具函数\r\nfunction formatTimestamp(timestamp) {\r\n  return new Date(timestamp * 1000).toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\r\n}\r\n\r\nfunction formatTimeSlice(slice) {\r\n  if (!slice) return ''\r\n  return `${formatTimestamp(slice.startTime)} - ${formatTimestamp(slice.endTime)}`\r\n}\r\n\r\nfunction formatTime(timestamp) {\r\n  return new Date(timestamp * 1000).toLocaleTimeString('zh-CN')\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  setTimeout(() => {\r\n    initMap()\r\n  }, 500)\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (map) {\r\n    map.destroy()\r\n  }\r\n})\r\n\r\n// 监听时间索引变化\r\nwatch(currentTimeIndex, () => {\r\n  updateTimeSlice()\r\n})\r\n</script> \r\n\r\n<style scoped>\r\n.heatmap-analysis-container {\r\n  padding: 20px;\r\n}\r\n\r\n.input-tech {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  background: rgba(30, 58, 138, 0.3);\r\n  border: 1px solid rgba(59, 130, 246, 0.5);\r\n  border-radius: 6px;\r\n  color: white;\r\n  font-size: 14px;\r\n}\r\n\r\n.input-tech:focus {\r\n  outline: none;\r\n  border-color: #06b6d4;\r\n  box-shadow: 0 0 0 2px rgba(6, 182, 212, 0.2);\r\n}\r\n\r\n.btn-tech {\r\n  padding: 8px 16px;\r\n  background: linear-gradient(135deg, #0ea5e9, #06b6d4);\r\n  border: none;\r\n  border-radius: 6px;\r\n  color: white;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-tech:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(6, 182, 212, 0.4);\r\n}\r\n\r\n.btn-tech:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.btn-tech-secondary {\r\n  padding: 8px 16px;\r\n  background: rgba(75, 85, 99, 0.8);\r\n  border: 1px solid rgba(156, 163, 175, 0.3);\r\n  border-radius: 6px;\r\n  color: white;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-tech-secondary:hover {\r\n  background: rgba(107, 114, 128, 0.8);\r\n}\r\n\r\n.btn-tech-small {\r\n  padding: 4px 8px;\r\n  font-size: 12px;\r\n  background: rgba(30, 58, 138, 0.8);\r\n  border: 1px solid rgba(59, 130, 246, 0.5);\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-tech-small:hover {\r\n  background: rgba(37, 99, 235, 0.8);\r\n}\r\n\r\n.btn-tech-small:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.card-tech {\r\n  background: linear-gradient(135deg, rgba(30, 58, 138, 0.8), rgba(29, 78, 216, 0.6));\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(59, 130, 246, 0.2);\r\n  border-radius: 12px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* 时间轴滑块样式 */\r\ninput[type=\"range\"] {\r\n  width: 100%;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  background: rgba(59, 130, 246, 0.3);\r\n  outline: none;\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n  appearance: none;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  background: #06b6d4;\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"range\"]::-moz-range-thumb {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  background: #06b6d4;\r\n  cursor: pointer;\r\n  border: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}