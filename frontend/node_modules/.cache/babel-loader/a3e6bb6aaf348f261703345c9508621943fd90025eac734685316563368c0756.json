{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { getWeeklyPassengerFlowAnalysis } from '@/api/traffic';\nexport default {\n  name: 'WeeklyPassengerFlow',\n  data() {\n    return {\n      loading: false,\n      error: null,\n      analysisData: null,\n      activeTab: 'weekday',\n      timeRange: {\n        start: '2013-09-12T00:00',\n        end: '2013-09-18T23:59'\n      },\n      // 时间限制\n      minDate: '2013-09-12T00:00',\n      maxDate: '2013-09-18T23:59'\n    };\n  },\n  computed: {\n    dailyFlowData() {\n      return this.analysisData?.daily_flow?.daily_data || [];\n    },\n    weeklyPatternData() {\n      return this.analysisData?.weekly_patterns?.weekly_data || [];\n    },\n    maxComparison() {\n      const weekday = this.analysisData?.weekday_comparison?.weekday_avg || 0;\n      const weekend = this.analysisData?.weekday_comparison?.weekend_avg || 0;\n      return Math.max(weekday, weekend);\n    },\n    maxWeeklyFlow() {\n      if (!this.weeklyPatternData.length) return 1;\n      return Math.max(...this.weeklyPatternData.map(d => d.COMMADDR));\n    }\n  },\n  mounted() {\n    // 自动执行一次分析\n    this.analyzeFlow();\n  },\n  methods: {\n    async analyzeFlow() {\n      this.loading = true;\n      this.error = null;\n      try {\n        // 转换时间格式\n        const startTime = new Date(this.timeRange.start).getTime() / 1000;\n        const endTime = new Date(this.timeRange.end).getTime() / 1000;\n\n        // 验证时间范围\n        if (endTime <= startTime) {\n          throw new Error('结束时间必须晚于开始时间');\n        }\n        if (endTime - startTime < 3 * 24 * 3600) {\n          throw new Error('分析周客流量需要至少3天的数据');\n        }\n\n        // 调用API\n        const response = await getWeeklyPassengerFlowAnalysis(startTime, endTime);\n        if (response.success) {\n          this.analysisData = response.data;\n          this.$message.success('周客流量分析完成');\n        } else {\n          throw new Error(response.message || '分析失败');\n        }\n      } catch (error) {\n        this.error = error.message;\n        this.$message.error(`分析失败: ${error.message}`);\n      } finally {\n        this.loading = false;\n      }\n    },\n    retryAnalysis() {\n      this.error = null;\n      this.analyzeFlow();\n    },\n    formatNumber(num) {\n      if (!num) return '0';\n      return new Intl.NumberFormat('zh-CN').format(Math.round(num));\n    },\n    formatPercent(num) {\n      if (!num) return '0%';\n      return `${num > 0 ? '+' : ''}${num.toFixed(1)}%`;\n    },\n    getBarHeight(value, max) {\n      if (!max) return '0%';\n      return `${value / max * 100}%`;\n    },\n    getDifferenceClass(pct) {\n      if (!pct) return '';\n      return pct > 0 ? 'positive' : 'negative';\n    },\n    getPatternLabel(pattern) {\n      const labels = {\n        'weekend_higher': '周末客流更高',\n        'weekday_higher': '工作日客流更高'\n      };\n      return labels[pattern] || '无明显模式';\n    },\n    getWeeklyBarHeight(value) {\n      if (!this.maxWeeklyFlow) return 0;\n      return value / this.maxWeeklyFlow * 200;\n    },\n    getWeeklyBarColor(weekday) {\n      // 0=Monday, 6=Sunday\n      return weekday >= 5 ? '#ef4444' : '#3b82f6';\n    },\n    getHourlyPoints(type) {\n      const data = type === 'weekday' ? this.analysisData?.hourly_patterns?.weekday_pattern || [] : this.analysisData?.hourly_patterns?.weekend_pattern || [];\n      if (!data.length) return [];\n      const maxValue = Math.max(...data.map(d => d.COMMADDR));\n      return data.map(item => ({\n        x: item.hour * 35,\n        y: 180 - item.COMMADDR / maxValue * 160\n      }));\n    },\n    getHourlyPolylinePoints(type) {\n      return this.getHourlyPoints(type).map(p => `${p.x},${p.y}`).join(' ');\n    },\n    getTrendPoints() {\n      const data = this.analysisData?.flow_trends?.weekly_summary || [];\n      if (!data.length) return [];\n      const maxValue = Math.max(...data.map(d => d.avg_daily_vehicles));\n      return data.map((item, index) => ({\n        x: index * 100 + 50,\n        y: 160 - item.avg_daily_vehicles / maxValue * 140\n      }));\n    },\n    getTrendPolylinePoints() {\n      return this.getTrendPoints().map(p => `${p.x},${p.y}`).join(' ');\n    },\n    getTrendClass() {\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction;\n      return {\n        'trend-increasing': direction === 'increasing',\n        'trend-decreasing': direction === 'decreasing',\n        'trend-stable': direction === 'stable'\n      };\n    },\n    getTrendLabel() {\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction;\n      const labels = {\n        'increasing': '上升趋势',\n        'decreasing': '下降趋势',\n        'stable': '稳定'\n      };\n      return labels[direction] || '未知';\n    }\n  }\n};","map":{"version":3,"names":["getWeeklyPassengerFlowAnalysis","name","data","loading","error","analysisData","activeTab","timeRange","start","end","minDate","maxDate","computed","dailyFlowData","daily_flow","daily_data","weeklyPatternData","weekly_patterns","weekly_data","maxComparison","weekday","weekday_comparison","weekday_avg","weekend","weekend_avg","Math","max","maxWeeklyFlow","length","map","d","COMMADDR","mounted","analyzeFlow","methods","startTime","Date","getTime","endTime","Error","response","success","$message","message","retryAnalysis","formatNumber","num","Intl","NumberFormat","format","round","formatPercent","toFixed","getBarHeight","value","getDifferenceClass","pct","getPatternLabel","pattern","labels","getWeeklyBarHeight","getWeeklyBarColor","getHourlyPoints","type","hourly_patterns","weekday_pattern","weekend_pattern","maxValue","item","x","hour","y","getHourlyPolylinePoints","p","join","getTrendPoints","flow_trends","weekly_summary","avg_daily_vehicles","index","getTrendPolylinePoints","getTrendClass","direction","trend_analysis","getTrendLabel"],"sources":["E:\\hhh\\frontend\\src\\components\\WeeklyPassengerFlow.vue"],"sourcesContent":["<template>\r\n  <div class=\"weekly-passenger-flow\">\r\n    <!-- 头部控制面板 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"time-selector\">\r\n        <label>分析时间范围：</label>\r\n        <input \r\n          type=\"datetime-local\" \r\n          v-model=\"timeRange.start\"\r\n          :min=\"minDate\"\r\n          :max=\"maxDate\"\r\n          class=\"time-input\"\r\n        />\r\n        <span class=\"to\">至</span>\r\n        <input \r\n          type=\"datetime-local\" \r\n          v-model=\"timeRange.end\"\r\n          :min=\"minDate\"\r\n          :max=\"maxDate\"\r\n          class=\"time-input\"\r\n        />\r\n        <button @click=\"analyzeFlow\" :disabled=\"loading\" class=\"analyze-btn\">\r\n          <span v-if=\"loading\">分析中...</span>\r\n          <span v-else>开始分析</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>正在分析周客流量数据...</p>\r\n    </div>\r\n\r\n    <!-- 错误信息 -->\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <p>{{ error }}</p>\r\n      <button @click=\"retryAnalysis\" class=\"retry-btn\">重试</button>\r\n    </div>\r\n\r\n    <!-- 分析结果 -->\r\n    <div v-if=\"analysisData && !loading\" class=\"analysis-results\">\r\n      \r\n      <!-- 概览统计卡片 -->\r\n      <div class=\"overview-cards\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon vehicles\">📊</div>\r\n          <div class=\"card-content\">\r\n            <h3>总车辆数</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.total_unique_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">独立车辆</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon days\">📅</div>\r\n          <div class=\"card-content\">\r\n            <h3>分析天数</h3>\r\n            <p class=\"stat-value\">{{ analysisData.statistics?.analysis_days || 0 }}</p>\r\n            <span class=\"stat-label\">天</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon average\">📈</div>\r\n          <div class=\"card-content\">\r\n            <h3>日均客流</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.avg_daily_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">车辆/天</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"card-icon peak\">🔥</div>\r\n          <div class=\"card-content\">\r\n            <h3>峰值流量</h3>\r\n            <p class=\"stat-value\">{{ formatNumber(analysisData.statistics?.max_daily_vehicles || 0) }}</p>\r\n            <span class=\"stat-label\">车辆/天</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 工作日vs周末对比 -->\r\n      <div class=\"comparison-section\">\r\n        <h2>工作日 vs 周末对比</h2>\r\n        <div class=\"comparison-container\">\r\n          <div class=\"comparison-chart\">\r\n            <div class=\"bar-chart\">\r\n              <div class=\"bar weekday-bar\">\r\n                <div class=\"bar-fill\" :style=\"{ height: getBarHeight(analysisData.weekday_comparison?.weekday_avg || 0, maxComparison) }\"></div>\r\n                <div class=\"bar-label\">工作日</div>\r\n                <div class=\"bar-value\">{{ formatNumber(analysisData.weekday_comparison?.weekday_avg || 0) }}</div>\r\n              </div>\r\n              <div class=\"bar weekend-bar\">\r\n                <div class=\"bar-fill\" :style=\"{ height: getBarHeight(analysisData.weekday_comparison?.weekend_avg || 0, maxComparison) }\"></div>\r\n                <div class=\"bar-label\">周末</div>\r\n                <div class=\"bar-value\">{{ formatNumber(analysisData.weekday_comparison?.weekend_avg || 0) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"comparison-stats\">\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-name\">差异百分比：</span>\r\n              <span class=\"stat-value\" :class=\"getDifferenceClass(analysisData.weekday_comparison?.difference_pct)\">\r\n                {{ formatPercent(analysisData.weekday_comparison?.difference_pct || 0) }}\r\n              </span>\r\n            </div>\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-name\">流量模式：</span>\r\n              <span class=\"stat-value\">{{ getPatternLabel(analysisData.weekday_comparison?.pattern) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 一周流量模式 -->\r\n      <div class=\"weekly-pattern-section\">\r\n        <h2>一周流量模式</h2>\r\n        <div class=\"weekly-chart-container\">\r\n          <div class=\"weekly-chart\">\r\n            <svg width=\"100%\" height=\"300\" viewBox=\"0 0 800 300\">\r\n              <!-- 背景网格 -->\r\n              <defs>\r\n                <pattern id=\"grid\" width=\"80\" height=\"30\" patternUnits=\"userSpaceOnUse\">\r\n                  <path d=\"M 80 0 L 0 0 0 30\" fill=\"none\" stroke=\"#e0e0e0\" stroke-width=\"1\"/>\r\n                </pattern>\r\n              </defs>\r\n              <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n              \r\n              <!-- 周流量柱状图 -->\r\n              <g transform=\"translate(50, 20)\">\r\n                <g v-for=\"(day, index) in weeklyPatternData\" :key=\"index\">\r\n                  <rect \r\n                    :x=\"index * 100\" \r\n                    :y=\"250 - getWeeklyBarHeight(day.COMMADDR)\" \r\n                    width=\"80\" \r\n                    :height=\"getWeeklyBarHeight(day.COMMADDR)\"\r\n                    :fill=\"getWeeklyBarColor(day.weekday)\"\r\n                    class=\"weekly-bar\"\r\n                  />\r\n                  <text \r\n                    :x=\"index * 100 + 40\" \r\n                    y=\"275\" \r\n                    text-anchor=\"middle\" \r\n                    font-size=\"12\" \r\n                    fill=\"#666\"\r\n                  >\r\n                    {{ day.weekday_name }}\r\n                  </text>\r\n                  <text \r\n                    :x=\"index * 100 + 40\" \r\n                    :y=\"245 - getWeeklyBarHeight(day.COMMADDR)\" \r\n                    text-anchor=\"middle\" \r\n                    font-size=\"11\" \r\n                    fill=\"#333\"\r\n                  >\r\n                    {{ formatNumber(day.COMMADDR) }}\r\n                  </text>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n          \r\n          <!-- 周模式统计 -->\r\n          <div class=\"weekly-stats\">\r\n            <div class=\"peak-day\">\r\n              <h4>客流最高日</h4>\r\n              <p class=\"day-name\">{{ analysisData.weekly_patterns?.peak_day?.day || 'N/A' }}</p>\r\n              <p class=\"day-value\">{{ formatNumber(analysisData.weekly_patterns?.peak_day?.vehicles || 0) }} 车辆</p>\r\n            </div>\r\n            <div class=\"lowest-day\">\r\n              <h4>客流最低日</h4>\r\n              <p class=\"day-name\">{{ analysisData.weekly_patterns?.lowest_day?.day || 'N/A' }}</p>\r\n              <p class=\"day-value\">{{ formatNumber(analysisData.weekly_patterns?.lowest_day?.vehicles || 0) }} 车辆</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 小时流量模式 -->\r\n      <div class=\"hourly-pattern-section\">\r\n        <h2>24小时流量模式</h2>\r\n        <div class=\"hourly-chart-tabs\">\r\n          <button \r\n            @click=\"activeTab = 'weekday'\" \r\n            :class=\"{ active: activeTab === 'weekday' }\"\r\n            class=\"tab-btn\"\r\n          >\r\n            工作日模式\r\n          </button>\r\n          <button \r\n            @click=\"activeTab = 'weekend'\" \r\n            :class=\"{ active: activeTab === 'weekend' }\"\r\n            class=\"tab-btn\"\r\n          >\r\n            周末模式\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"hourly-chart\">\r\n          <svg width=\"100%\" height=\"250\" viewBox=\"0 0 900 250\">\r\n            <!-- 坐标轴 -->\r\n            <g transform=\"translate(40, 20)\">\r\n              <!-- Y轴 -->\r\n              <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"180\" stroke=\"#ccc\" stroke-width=\"2\"/>\r\n              <!-- X轴 -->\r\n              <line x1=\"0\" y1=\"180\" x2=\"840\" y2=\"180\" stroke=\"#ccc\" stroke-width=\"2\"/>\r\n              \r\n              <!-- 小时标签 -->\r\n              <g class=\"x-axis-labels\">\r\n                <text v-for=\"hour in [0, 6, 12, 18, 24]\" :key=\"hour\"\r\n                      :x=\"hour * 35\" y=\"200\" \r\n                      text-anchor=\"middle\" \r\n                      font-size=\"12\" \r\n                      fill=\"#666\">\r\n                  {{ hour }}:00\r\n                </text>\r\n              </g>\r\n              \r\n              <!-- 流量曲线 -->\r\n              <polyline \r\n                :points=\"getHourlyPolylinePoints(activeTab)\"\r\n                fill=\"none\" \r\n                :stroke=\"activeTab === 'weekday' ? '#3b82f6' : '#ef4444'\" \r\n                stroke-width=\"3\"\r\n              />\r\n              \r\n              <!-- 数据点 -->\r\n              <circle\r\n                v-for=\"(point, index) in getHourlyPoints(activeTab)\"\r\n                :key=\"index\"\r\n                :cx=\"point.x\"\r\n                :cy=\"point.y\"\r\n                r=\"4\"\r\n                :fill=\"activeTab === 'weekday' ? '#3b82f6' : '#ef4444'\"\r\n                class=\"data-point\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        \r\n        <!-- 高峰时段信息 -->\r\n        <div class=\"peak-info\">\r\n          <div class=\"peak-hour-info\">\r\n            <h4>工作日高峰时段</h4>\r\n            <p>{{ analysisData.hourly_patterns?.peak_hours?.weekday || 0 }}:00</p>\r\n          </div>\r\n          <div class=\"peak-hour-info\">\r\n            <h4>周末高峰时段</h4>\r\n            <p>{{ analysisData.hourly_patterns?.peak_hours?.weekend || 0 }}:00</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 趋势分析 -->\r\n      <div class=\"trend-section\" v-if=\"analysisData.flow_trends?.weekly_summary\">\r\n        <h2>客流量趋势分析</h2>\r\n        <div class=\"trend-container\">\r\n          <div class=\"trend-chart\">\r\n            <svg width=\"100%\" height=\"200\" viewBox=\"0 0 600 200\">\r\n              <g transform=\"translate(40, 20)\">\r\n                <!-- 趋势线 -->\r\n                <polyline \r\n                  :points=\"getTrendPolylinePoints()\"\r\n                  fill=\"none\" \r\n                  stroke=\"#10b981\" \r\n                  stroke-width=\"3\"\r\n                />\r\n                \r\n                <!-- 数据点 -->\r\n                <circle\r\n                  v-for=\"(point, index) in getTrendPoints()\"\r\n                  :key=\"index\"\r\n                  :cx=\"point.x\"\r\n                  :cy=\"point.y\"\r\n                  r=\"5\"\r\n                  fill=\"#10b981\"\r\n                />\r\n                \r\n                <!-- 周标签 -->\r\n                <g class=\"week-labels\">\r\n                  <text v-for=\"(week, index) in analysisData.flow_trends.weekly_summary\" :key=\"index\"\r\n                        :x=\"index * 100 + 50\" y=\"195\" \r\n                        text-anchor=\"middle\" \r\n                        font-size=\"12\" \r\n                        fill=\"#666\">\r\n                    第{{ week.week }}周\r\n                  </text>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n          \r\n          <div class=\"trend-stats\">\r\n            <div class=\"trend-direction\">\r\n              <h4>趋势方向</h4>\r\n              <p class=\"trend-value\" :class=\"getTrendClass()\">\r\n                {{ getTrendLabel() }}\r\n              </p>\r\n            </div>\r\n            <div class=\"trend-slope\">\r\n              <h4>变化幅度</h4>\r\n              <p>{{ Math.abs(analysisData.flow_trends?.trend_analysis?.slope || 0).toFixed(2) }}/周</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 详细数据表格 -->\r\n      <div class=\"data-table-section\">\r\n        <h2>详细数据表格</h2>\r\n        <div class=\"table-container\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>日期</th>\r\n                <th>星期</th>\r\n                <th>车辆数</th>\r\n                <th>轨迹点数</th>\r\n                <th>类型</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"day in dailyFlowData\" :key=\"day.date\">\r\n                <td>{{ day.date }}</td>\r\n                <td>{{ day.weekday_name }}</td>\r\n                <td>{{ formatNumber(day.vehicles) }}</td>\r\n                <td>{{ formatNumber(day.total_points) }}</td>\r\n                <td>\r\n                  <span :class=\"{ 'weekend-tag': day.is_weekend, 'weekday-tag': !day.is_weekend }\">\r\n                    {{ day.is_weekend ? '周末' : '工作日' }}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getWeeklyPassengerFlowAnalysis } from '@/api/traffic'\r\n\r\nexport default {\r\n  name: 'WeeklyPassengerFlow',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      error: null,\r\n      analysisData: null,\r\n      activeTab: 'weekday',\r\n      \r\n      timeRange: {\r\n        start: '2013-09-12T00:00',\r\n        end: '2013-09-18T23:59'\r\n      },\r\n      \r\n      // 时间限制\r\n      minDate: '2013-09-12T00:00',\r\n      maxDate: '2013-09-18T23:59'\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    dailyFlowData() {\r\n      return this.analysisData?.daily_flow?.daily_data || []\r\n    },\r\n    \r\n    weeklyPatternData() {\r\n      return this.analysisData?.weekly_patterns?.weekly_data || []\r\n    },\r\n    \r\n    maxComparison() {\r\n      const weekday = this.analysisData?.weekday_comparison?.weekday_avg || 0\r\n      const weekend = this.analysisData?.weekday_comparison?.weekend_avg || 0\r\n      return Math.max(weekday, weekend)\r\n    },\r\n    \r\n    maxWeeklyFlow() {\r\n      if (!this.weeklyPatternData.length) return 1\r\n      return Math.max(...this.weeklyPatternData.map(d => d.COMMADDR))\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    // 自动执行一次分析\r\n    this.analyzeFlow()\r\n  },\r\n  \r\n  methods: {\r\n    async analyzeFlow() {\r\n      this.loading = true\r\n      this.error = null\r\n      \r\n      try {\r\n        // 转换时间格式\r\n        const startTime = new Date(this.timeRange.start).getTime() / 1000\r\n        const endTime = new Date(this.timeRange.end).getTime() / 1000\r\n        \r\n        // 验证时间范围\r\n        if (endTime <= startTime) {\r\n          throw new Error('结束时间必须晚于开始时间')\r\n        }\r\n        \r\n        if (endTime - startTime < 3 * 24 * 3600) {\r\n          throw new Error('分析周客流量需要至少3天的数据')\r\n        }\r\n        \r\n        // 调用API\r\n        const response = await getWeeklyPassengerFlowAnalysis(startTime, endTime)\r\n        \r\n        if (response.success) {\r\n          this.analysisData = response.data\r\n          this.$message.success('周客流量分析完成')\r\n        } else {\r\n          throw new Error(response.message || '分析失败')\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.error = error.message\r\n        this.$message.error(`分析失败: ${error.message}`)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    retryAnalysis() {\r\n      this.error = null\r\n      this.analyzeFlow()\r\n    },\r\n    \r\n    formatNumber(num) {\r\n      if (!num) return '0'\r\n      return new Intl.NumberFormat('zh-CN').format(Math.round(num))\r\n    },\r\n    \r\n    formatPercent(num) {\r\n      if (!num) return '0%'\r\n      return `${num > 0 ? '+' : ''}${num.toFixed(1)}%`\r\n    },\r\n    \r\n    getBarHeight(value, max) {\r\n      if (!max) return '0%'\r\n      return `${(value / max) * 100}%`\r\n    },\r\n    \r\n    getDifferenceClass(pct) {\r\n      if (!pct) return ''\r\n      return pct > 0 ? 'positive' : 'negative'\r\n    },\r\n    \r\n    getPatternLabel(pattern) {\r\n      const labels = {\r\n        'weekend_higher': '周末客流更高',\r\n        'weekday_higher': '工作日客流更高'\r\n      }\r\n      return labels[pattern] || '无明显模式'\r\n    },\r\n    \r\n    getWeeklyBarHeight(value) {\r\n      if (!this.maxWeeklyFlow) return 0\r\n      return (value / this.maxWeeklyFlow) * 200\r\n    },\r\n    \r\n    getWeeklyBarColor(weekday) {\r\n      // 0=Monday, 6=Sunday\r\n      return weekday >= 5 ? '#ef4444' : '#3b82f6'\r\n    },\r\n    \r\n    getHourlyPoints(type) {\r\n      const data = type === 'weekday' \r\n        ? this.analysisData?.hourly_patterns?.weekday_pattern || []\r\n        : this.analysisData?.hourly_patterns?.weekend_pattern || []\r\n      \r\n      if (!data.length) return []\r\n      \r\n      const maxValue = Math.max(...data.map(d => d.COMMADDR))\r\n      \r\n      return data.map(item => ({\r\n        x: item.hour * 35,\r\n        y: 180 - (item.COMMADDR / maxValue * 160)\r\n      }))\r\n    },\r\n    \r\n    getHourlyPolylinePoints(type) {\r\n      return this.getHourlyPoints(type).map(p => `${p.x},${p.y}`).join(' ')\r\n    },\r\n    \r\n    getTrendPoints() {\r\n      const data = this.analysisData?.flow_trends?.weekly_summary || []\r\n      if (!data.length) return []\r\n      \r\n      const maxValue = Math.max(...data.map(d => d.avg_daily_vehicles))\r\n      \r\n      return data.map((item, index) => ({\r\n        x: index * 100 + 50,\r\n        y: 160 - (item.avg_daily_vehicles / maxValue * 140)\r\n      }))\r\n    },\r\n    \r\n    getTrendPolylinePoints() {\r\n      return this.getTrendPoints().map(p => `${p.x},${p.y}`).join(' ')\r\n    },\r\n    \r\n    getTrendClass() {\r\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction\r\n      return {\r\n        'trend-increasing': direction === 'increasing',\r\n        'trend-decreasing': direction === 'decreasing',\r\n        'trend-stable': direction === 'stable'\r\n      }\r\n    },\r\n    \r\n    getTrendLabel() {\r\n      const direction = this.analysisData?.flow_trends?.trend_analysis?.direction\r\n      const labels = {\r\n        'increasing': '上升趋势',\r\n        'decreasing': '下降趋势',\r\n        'stable': '稳定'\r\n      }\r\n      return labels[direction] || '未知'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.weekly-passenger-flow {\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  min-height: 100vh;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n/* 控制面板 */\r\n.control-panel {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.time-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  color: white;\r\n}\r\n\r\n.time-selector label {\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\n.time-input {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  color: white;\r\n  font-size: 14px;\r\n}\r\n\r\n.time-input:focus {\r\n  outline: none;\r\n  border-color: #60a5fa;\r\n  box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.3);\r\n}\r\n\r\n.to {\r\n  color: white;\r\n  font-weight: 500;\r\n}\r\n\r\n.analyze-btn {\r\n  background: linear-gradient(45deg, #3b82f6, #1d4ed8);\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.analyze-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);\r\n}\r\n\r\n.analyze-btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-container {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  color: white;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 4px solid rgba(255, 255, 255, 0.3);\r\n  border-top: 4px solid white;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 错误信息 */\r\n.error-message {\r\n  background: rgba(239, 68, 68, 0.2);\r\n  border: 1px solid rgba(239, 68, 68, 0.5);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  color: white;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: #ef4444;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 分析结果 */\r\n.analysis-results {\r\n  space-y: 30px;\r\n}\r\n\r\n/* 概览卡片 */\r\n.overview-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.stat-card {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.card-icon {\r\n  font-size: 48px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.card-content h3 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 14px;\r\n  margin: 0 0 8px 0;\r\n}\r\n\r\n.stat-value {\r\n  color: white;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\n.stat-label {\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 12px;\r\n}\r\n\r\n/* 对比区域 */\r\n.comparison-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.comparison-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.comparison-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.bar-chart {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: end;\r\n  height: 200px;\r\n  padding: 20px;\r\n}\r\n\r\n.bar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  width: 80px;\r\n}\r\n\r\n.bar-fill {\r\n  width: 60px;\r\n  background: linear-gradient(45deg, #3b82f6, #1d4ed8);\r\n  border-radius: 8px 8px 0 0;\r\n  transition: height 0.8s ease;\r\n}\r\n\r\n.weekend-bar .bar-fill {\r\n  background: linear-gradient(45deg, #ef4444, #dc2626);\r\n}\r\n\r\n.bar-label {\r\n  color: white;\r\n  font-weight: 600;\r\n  margin-top: 10px;\r\n}\r\n\r\n.bar-value {\r\n  color: white;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comparison-stats {\r\n  color: white;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.stat-name {\r\n  font-weight: 600;\r\n}\r\n\r\n.positive {\r\n  color: #10b981;\r\n}\r\n\r\n.negative {\r\n  color: #ef4444;\r\n}\r\n\r\n/* 周模式区域 */\r\n.weekly-pattern-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.weekly-pattern-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.weekly-chart-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  align-items: start;\r\n}\r\n\r\n.weekly-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n}\r\n\r\n.weekly-bar {\r\n  transition: opacity 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.weekly-bar:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.weekly-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n}\r\n\r\n.peak-day, .lowest-day {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.peak-day h4, .lowest-day h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.day-name {\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.day-value {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 14px;\r\n}\r\n\r\n/* 小时模式区域 */\r\n.hourly-pattern-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.hourly-pattern-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.hourly-chart-tabs {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tab-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.tab-btn.active {\r\n  background: rgba(59, 130, 246, 0.5);\r\n}\r\n\r\n.hourly-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-point {\r\n  transition: r 0.3s ease;\r\n}\r\n\r\n.data-point:hover {\r\n  r: 6;\r\n}\r\n\r\n.peak-info {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n.peak-hour-info {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.peak-hour-info h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.peak-hour-info p {\r\n  color: white;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 趋势分析 */\r\n.trend-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.trend-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.trend-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  align-items: center;\r\n}\r\n\r\n.trend-chart {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n}\r\n\r\n.trend-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n}\r\n\r\n.trend-direction, .trend-slope {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.trend-direction h4, .trend-slope h4 {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.trend-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.trend-increasing {\r\n  color: #10b981;\r\n}\r\n\r\n.trend-decreasing {\r\n  color: #ef4444;\r\n}\r\n\r\n.trend-stable {\r\n  color: #f59e0b;\r\n}\r\n\r\n/* 数据表格 */\r\n.data-table-section {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.data-table-section h2 {\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-size: 24px;\r\n}\r\n\r\n.table-container {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th {\r\n  background: rgba(59, 130, 246, 0.3);\r\n  color: white;\r\n  padding: 15px;\r\n  text-align: left;\r\n  font-weight: 600;\r\n}\r\n\r\n.data-table td {\r\n  color: white;\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.data-table tr:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.weekend-tag {\r\n  background: #ef4444;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.weekday-tag {\r\n  background: #3b82f6;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .weekly-passenger-flow {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .overview-cards {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .comparison-container,\r\n  .weekly-chart-container,\r\n  .trend-container {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .peak-info {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .time-selector {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .stat-card {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}